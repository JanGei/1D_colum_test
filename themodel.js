    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"cf6278de-9f27-4477-9174-13ebc7de5098":{"defs":[],"roots":{"references":[{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1078","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1084","type":"Line"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1079","type":"Line"},{"attributes":{"source":{"id":"1003"}},"id":"1165","type":"CDSView"},{"attributes":{"source":{"id":"1002"}},"id":"1081","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1083","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1087","type":"CDSView"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1060","type":"Line"},{"attributes":{"end":1.05,"start":-0.03},"id":"1106","type":"Range1d"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1163","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1083"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1085"},"nonselection_glyph":{"id":"1084"},"view":{"id":"1087"}},"id":"1086","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1085","type":"Line"},{"attributes":{"label":{"value":"Minimum / Maximum"},"renderers":[{"id":"1086"}]},"id":"1099","type":"LegendItem"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAADQ2aQLiqw9PlpqxC0U9Sw/c9KrgsLAfD+TFufri4CjP5g4Hlwx7bk/qEH0AhYdyD+B9rPf8k3SP3pLNnbngtg/O9T6lr873j+C16WP6qDhPybXGOAUw+M/vxuA11OI5T+xmA2nQfrmP+I7E4iIJOg/1lLQwN8S6T8A19G1CNDpPxKcRRJkZeo/GUQ+mdva6j+7LJdZ9zbrP4AXdiYGf+s//8Go50u36z9TvL7ALuPrP2hHEMhfBew/QYxPHP4f7D+KOD5CtDTsP33M4T3QROw/JAqkEldR7D8dseBhFFvsP0rJWNWmYuw/eNhC74lo7D99jvvCHW3sPxcIMgOtcOw/t69tvnFz7D9CQ5ERmXXsP2I8kglGd+w/T47F4ZN47D/Jeo7Cl3nsP8E7kBxieuw/+Epqtv967D90sjV+envsPy+mLyzae+w/disFwSR87D8mDuHnXnzsP+yXjUKMfOw/S0KSpK987D88nRxBy3zsPxpEqc7gfOw/ACW4ovF87D8IvVPH/nzsP8jKzAsJfew/nL68ERF97D8aviNXF33sP41nRz4cfew/PYzSEyB97D9tbJkTI33sP5fCT2wlfew/RKlsQid97D8dA2uyKH3sPyCnitIpfew/MoEutCp97D+Hku1kK33sP8TeZ+8rfew/eIrsWyx97D9CfvuwLH3sPxKZqvMsfew/XrT0Jy197D8eW/dQLX3sP5cAI3Etfew/yK1gii197D+xdC+eLX3sP/h2u60tfew/0ufvuS197D8PIoXDLX3sP5CtC8stfew/dt/00C197D+fmpnVLX3sPw+ZP9ktfew/3I8d3C197D9zbV7eLX3sPxTkI+Atfew/omeI4S197D8vvaDiLX3sPz00feMtfew/cJwq5C197D8iBrPkLX3sP5hZHuUtfew/hs1y5S197D8mRLXlLX3sPzuU6eUtfew/bMIS5i197D9ALjPmLX3sP4C1TOYtfew/9c9g5i197D9EpXDmLX3sP/wdfeYtfew/I/GG5i197D+/ro7mLX3sPyzIlOYtfew/pJaZ5i197D9sYJ3mLX3sP9FcoOYtfew/Zrei5i197D93kqTmLX3sPwgJpuYtfew/ZjCn5i197D9WGajmLX3sPw3RqOYtfew/+GGp5i197D9J1KnmLX3sP3guquYtfew/o3Wq5i197D/IrarmLX3sPxfaquYtfew/EP2q5i197D+qGKvmLX3sP3Quq+Ytfew/pz+r5i197D87TavmLX3sP/NXq+Ytfew/amCr5i197D8aZ6vmLX3sP2Fsq+Ytfew/jnCr5i197D/Zc6vmLX3sP3N2q+Ytfew/gXir5i197D8geqvmLX3sP2l7q+Ytfew/bHyr5i197D85favmLX3sP9t9q+Ytfew/XX6r5i197D/AfqvmLX3sPxB/q+Ytfew/UX+r5i197D+Cf6vmLX3sP6p/q+Ytfew/yH+r5i197D/gf6vmLX3sP/V/q+Ytfew/BICr5i197D8RgKvmLX3sPxuAq+Ytfew/IoCr5i197D8pgKvmLX3sPy6Aq+Ytfew/MICr5i197D80gKvmLX3sPzaAq+Ytfew/N4Cr5i197D86gKvmLX3sPzuAq+Ytfew/PICr5i197D89gKvmLX3sPz2Aq+Ytfew/PYCr5i197D8+gKvmLX3sPz6Aq+Ytfew/PoCr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sP0CAq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1212"},"selection_policy":{"id":"1211"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1172","type":"FuncTickFormatter"},{"attributes":{"source":{"id":"1002"}},"id":"1062","type":"CDSView"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1161"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1163"},"nonselection_glyph":{"id":"1162"},"view":{"id":"1165"}},"id":"1164","type":"GlyphRenderer"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1174","type":"FuncTickFormatter"},{"attributes":{"end":1.05},"id":"1166","type":"Range1d"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1168","type":"Title"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1176","type":"FuncTickFormatter"},{"attributes":{"end":2.302585092994046,"format":{"id":"1170"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.009210340371976183,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1171","type":"Slider"},{"attributes":{"end":360000,"format":{"id":"1172"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1173","type":"Slider"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1043","type":"BoxAnnotation"},{"attributes":{"end":0.5,"format":{"id":"1174"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1175","type":"Slider"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1014"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1178","type":"RangeSlider"},{"attributes":{"end":0.2,"format":{"id":"1176"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1177","type":"Slider"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1183","type":"FuncTickFormatter"},{"attributes":{"end":0.0,"format":{"id":"1010"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1179","type":"RangeSlider"},{"attributes":{"end":3000,"format":{"id":"1183"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1184","type":"Slider"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1185","type":"FuncTickFormatter"},{"attributes":{"end":50,"format":{"id":"1019"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1180","type":"Slider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1181","type":"FuncTickFormatter"},{"attributes":{"end":1,"format":{"id":"1181"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1182","type":"Slider"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1187","type":"RadioButtonGroup"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["No Sorption","Linear Sorption"],"sizing_mode":"stretch_width"},"id":"1188","type":"RadioButtonGroup"},{"attributes":{"end":0.005,"format":{"id":"1185"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1186","type":"Slider"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1054","type":"Line"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1193","type":"CustomJS"},{"attributes":{"code":"  return (tick/1000).toFixed(4)+&#x27; [L/h]&#x27;"},"id":"1017","type":"FuncTickFormatter"},{"attributes":{"args":{"BTCp":{"id":"1129"},"D_dict":{"m2/d":{"id":"1015"},"m2/h":{"id":"1014"},"m2/min":{"id":"1013"},"m2/s":{"id":"1012"}},"D_us":{"id":"1006"},"Kd_sl":{"id":"1186"},"Lcube1":[[0.5781741234389112],[0.42477004519585543],[0.9740366212689772],[0.38821819811908836],[0.8876966180696266],[0.6325402836938447],[0.6086137026736778],[0.3684725566836574],[0.677339859319745],[0.800157202434336],[0.1047130749555581],[0.010165775112367645],[0.9375733058012113],[0.13812681267436674],[0.4784442134809755],[0.1904719638361338],[0.7856836931751238],[0.7621458866502774],[0.07624737140718532],[0.5987698017182326],[0.14647160556469296],[0.11278719584671926],[0.8368989119312258],[0.41333375408509343],[0.2819736583891681],[0.4380639291857464],[0.8601281413372561],[0.5893111941129046],[0.907235840991309],[0.7211242920824711],[0.8742453607244706],[0.48329884217967467],[0.9585982897789376],[0.17499109144424932],[0.9660453992201069],[0.5145487165828075],[0.7134836198988431],[0.6216569080800339],[0.6518439741520932],[0.8438597078309842],[0.2712617462722874],[0.5009941784986978],[0.20458455101381381],[0.2465706199466414],[0.2973421380662039],[0.4575632485437799],[0.5455150349155535],[0.6462771367807245],[0.9141209609761997],[0.04349304607370624],[0.4974494410237421],[0.3337089119324295],[0.037462449360431437],[0.26793253889866286],[0.3011505591501805],[0.5598762305222121],[0.469794516754511],[0.09392563696222915],[0.02610950955682045],[0.8544894403715071],[0.7716616750703527],[0.8217463982640438],[0.9824425595145146],[0.7049322252685866],[0.1573899568398466],[0.6648965960498243],[0.8185113539610264],[0.23818027474287715],[0.5217424100926895],[0.44950119178078923],[0.2554338747811706],[0.7963766255582104],[0.004823861726159792],[0.736104389157515],[0.08723240801357866],[0.9421975569168827],[0.06622953597506358],[0.3925679778848579],[0.5333749010809934],[0.40083044068627566],[0.8995698507115861],[0.05909238878813662],[0.12189822357371],[0.3706033870274615],[0.2189199483363117],[0.18484309486369607],[0.3191317982103984],[0.35978232888650163],[0.7581633887872318],[0.6163417723020483],[0.684945536716386],[0.9200389931501505],[0.22359044574042997],[0.6934457467776616],[0.3417687071198351],[0.5652146822645433],[0.9924501876986382],[0.3295207314736207],[0.1668693669874504],[0.74692858107323]],"Lcube2":[[0.19717480928241268],[0.30625306788041606],[0.45034060626042377],[0.025871784612035063],[0.7248480434585457],[0.07636658815876483],[0.27434855370778755],[0.9074040586361716],[0.7768358769138161],[0.11675716248716345],[0.3465897987394919],[0.4425269277642524],[0.6266700785465835],[0.8862729043748321],[0.8649867115682038],[0.35107710831704614],[0.5613001558418254],[0.21137001866551475],[0.6339208344364708],[0.3852502083081732],[0.7617907082778602],[0.7456929064645922],[0.8494705250669609],[0.5086114245290133],[0.01792527238336457],[0.57764475679113],[0.7866861559836699],[0.9890582693753918],[0.1331735335897833],[0.5261359101148929],[0.5939631788251972],[0.9402885110268825],[0.9173547897017004],[0.09655080282691683],[0.6839743797859293],[0.20537810867662643],[0.22399925918853925],[0.17787778255879655],[0.9710517340663379],[0.40394956581982683],[0.14698545297044865],[0.2443572902418598],[0.2828036710108482],[0.18914262401129187],[0.32740427268064065],[0.8779396813860554],[0.6795691002395786],[0.6456032557276585],[0.2627426272117885],[0.23944856347209723],[0.7110642649510603],[0.10602575730010541],[0.5130860199678546],[0.06884135556909805],[0.08673300706016354],[0.038027411819556385],[0.806295004332945],[0.4150114713789793],[0.5455545150615801],[0.046861484078833435],[0.296482140011868],[0.2522647580707759],[0.42549538991185953],[0.9342441412667086],[0.3787933745251557],[0.8986783342868243],[0.7372306941199505],[0.5314488762678895],[0.430650933244687],[0.3998939422438348],[0.9277563595553593],[0.6506794386934655],[0.3320494175186641],[0.8123681056829694],[0.16791137923000213],[0.36453504811820203],[0.15063462101055894],[0.12021545545095406],[0.0006318072672970498],[0.4782118217459781],[0.4967933462934209],[0.6181880933137451],[0.9599041183105526],[0.48655067997455625],[0.8539012103826821],[0.4664554862288077],[0.05378693092465995],[0.7948041679109354],[0.8294219675284169],[0.9608771988182234],[0.9915993286539749],[0.5802954153516864],[0.6035217691343656],[0.7048110838791887],[0.7580314347292352],[0.8372889493834501],[0.5534645017908546],[0.6997126465257408],[0.668151835166893],[0.3143036753960278]],"col_len_sl":{"id":"1175"},"col_rad_sl":{"id":"1177"},"disp_sl":{"id":"1178"},"fl_dict":{"L/h":{"id":"1017"},"m3/s":{"id":"1016"},"mL/h":{"id":"1019"},"mL/min":{"id":"1018"}},"fl_us":{"id":"1007"},"flow_sl":{"id":"1180"},"pore_vol_sl":{"id":"1171"},"poros_sl":{"id":"1182"},"pulse_inj_sl":{"id":"1173"},"r_dict":{"1/d":{"id":"1011"},"1/h":{"id":"1010"},"1/min":{"id":"1009"},"1/s":{"id":"1008"}},"r_us":{"id":"1005"},"reac_sl":{"id":"1179"},"rg_CP":{"id":"1187"},"rg_ST":{"id":"1188"},"rho_s_sl":{"id":"1184"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var cloQ = []\\n  var cupQ = []\\n  var vel_r = vel/Ret\\n  //var r_mean = (reac_l+reac_h)/2/Ret\\n  //var D_mean = (disp_l+disp_h)/2/Ret\\n  //var H_mean = 2*r_mean*D_mean/vel_r**2\\n  //var gam_mean = get_gamma(r_mean,D_mean,vel)\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        if (rg_CP == 1 &amp;&amp; t &gt; t_inj) {\\n          c[i] = 0\\n          cmin[i] = 0\\n          cmax[i] = 0\\n        } else {\\n          c[i] = 1\\n          cmin[i] = 1\\n          cmax[i] = 1\\n        }\\n        \\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = (reac_l + (reac_h-reac_l)*Lcube1[j])/Ret\\n            var D_intermed = (disp_l + (disp_h-disp_l)*Lcube2[j])/Ret\\n            var H_intermed = 2*r_intermed*D_intermed/vel_r**2\\n            //var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg_CP == 1) {\\n              // Pulse injection\\n              if (t&lt;=t_inj) {\\n                //intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n                // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * ( math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n              } else {\\n                //intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n                // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * math.exp(-r_intermed*x[i]/vel_r) * ( (1-math.erf((x[i]-vel_r*t*(1+H_intermed))/(2*math.sqrt(D_intermed*t)))) - (1-math.erf((x[i]-vel_r*(t-t_inj)*(1+H_intermed))/(2*math.sqrt(D_intermed*(t-t_inj))))) )\\n              }\\n            } else {\\n              // Cotinuous injection\\n              //intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n              // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n              intlist[j] = 1/2 * ( math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        //if (rg_CP==1){\\n          // Pulse injection\\n          //if (t&lt;=t_inj) {\\n            //c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n            // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            //c[i] = 1/2 * ( math.exp(-r_mean*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n          //} else {\\n            //c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))))\\n            // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            //c[i] = 1/2 * math.exp(-r_mean*x[i]/vel_r) * ( (1-math.erf((x[i]-vel_r*t*(1+H_mean))/(2*math.sqrt(D_mean*t)))) - (1-math.erf((x[i]-vel_r*(t-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(t-t_inj))))) )\\n          //}\\n        //} else {\\n          // Continuous injection\\n          // eq 8.66 in hydrogeology script (Ogata Banks)\\n          //c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n          // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n          //c[i] = 1/2 * ( math.exp(-r_mean*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n        //}\\n        c[i]    = math.median(intlist)\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n        cloQ[i] = math.quantileSeq(intlist, 0.25)\\n        cupQ[i] = math.quantileSeq(intlist, 0.75)\\n    }\\n  }\\n  return [c, cmin, cmax, cloQ, cupQ]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D_mean,r_mean,H_mean,Ret) {\\n  const c = []\\n  var vel_r = vel/Ret\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg_CP==1){\\n        // Pulse injection \\n        if (tsp[i]&lt;=t_inj) {\\n          //c[i] = 1/2 * (1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n          c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        } else {\\n          //c[i] = 1/2 * ((1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel_r*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n          c[i] = 1/2 * math.exp(-r_mean*xBTC/vel_r) * ( (1-math.erf((xBTC-vel_r*tsp[i]*(1+H_mean))/(2*math.sqrt(D_mean*tsp[i])))) - (1-math.erf((xBTC-vel_r*(tsp[i]-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(tsp[i]-t_inj))))) )\\n        }\\n      } else {\\n        // Continuous injection\\n        // eq 8.66 in hydrogeology script (Ogata Banks)\\n        //c[i] = 1/2 * Math.exp(xBTC*vel_r/(2*D_mean))*(Math.exp((-xBTC)*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC-vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i])))+math.exp(xBTC*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC+vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i]))));\\n        // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n        c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(r_mean,D_mean,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2)\\n  return res\\n}\\n\\nfunction expo(x, f) {\\n  return Number.parseFloat(x).toExponential(f);\\n  //https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar yloQ= source1.data[&#x27;yloQ&#x27;]\\nvar yupQ= source1.data[&#x27;yupQ&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n\\n// Values needed for all models\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\nconst Kd        = Kd_sl.value                       // [m3/kg]\\nconst rho_s     = rho_s_sl.value                    // [kg/m3]\\n\\n// Derived entities\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel / n                       // [m/s]\\nconst r_mean  = (reac_l+reac_h)/2             // [1/s]\\nconst D_mean  = (disp_l+disp_h)/2             // [m2/s]\\nconst H_mean  = 2*r_mean*D_mean/sep_vel**2    // [m/s]\\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = col_len/sep_vel               // [s] VEL oder SEP_VEL?\\nconst c0      = 1;                            // [-] \\n\\n// Retardation factor\\nif (rg_SType == 0) {\\n  var Ret = 1\\n} else {\\n  var Ret = 1 + (1-n)/n * Kd * rho_s\\n}\\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit its range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\n// Time \\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t         = tPV * PV                          // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2) \\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cloQ = []\\nvar cupQ = []\\nvar cBTX = []\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax, cloQ, cupQ] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,D_mean,r_mean,H_mean,Ret) \\n}\\n\\n\\n// Update sources\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n  yloQ[i] = cloQ[i]\\n  yupQ[i] = cupQ[i]\\n}\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27; m (Drag diamond in upper plot to change)&#x27;\\n\\n// Displaying correct sliders\\nif (rg_CP==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\nif (rg_SType == 1) {\\n  rho_s_sl.visible = true\\n  Kd_sl.visible = true\\n} else {\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n}\\n\\n// Displaying correct units\\nvar r_format  = r_dict[r_us.value]\\nvar D_format  = D_dict[D_us.value]\\nvar fl_format = fl_dict[fl_us.value]\\nreac_sl.format = r_format\\ndisp_sl.format = D_format\\nflow_sl.format = fl_format\\n\\nreac_sl.format.change.emit();\\ndisp_sl.format.change.emit();\\nflow_sl.format.change.emit();\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1189","type":"CustomJS"},{"attributes":{"code":"  return (tick/60).toFixed(2)+&#x27; [mL/min]&#x27;"},"id":"1018","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick).toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1019","type":"FuncTickFormatter"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1193"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1192","type":"Button"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1052","type":"Line"},{"attributes":{"below":[{"id":"1029"}],"center":[{"id":"1032"},{"id":"1036"},{"id":"1074"}],"js_event_callbacks":{"pan":[{"id":"1189"}],"tap":[{"id":"1189"}]},"left":[{"id":"1033"}],"min_height":400,"renderers":[{"id":"1055"},{"id":"1061"},{"id":"1080"},{"id":"1086"},{"id":"1104"},{"id":"1111"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1044"},"x_range":{"id":"1021"},"x_scale":{"id":"1025"},"y_range":{"id":"1106"},"y_scale":{"id":"1027"}},"id":"1020","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1021","type":"DataRange1d"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1191","type":"CustomJS"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1191"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1190","type":"Button"},{"attributes":{"source":{"id":"1002"}},"id":"1105","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1101","type":"Line"},{"attributes":{},"id":"1126","type":"Selection"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1102","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1101"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1103"},"nonselection_glyph":{"id":"1102"},"view":{"id":"1105"}},"id":"1104","type":"GlyphRenderer"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1103","type":"Line"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1108","type":"Scatter"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1109","type":"Scatter"},{"attributes":{},"id":"1215","type":"BasicTickFormatter"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1108"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1110"},"nonselection_glyph":{"id":"1109"},"view":{"id":"1112"}},"id":"1111","type":"GlyphRenderer"},{"attributes":{"source":{"id":"1004"}},"id":"1112","type":"CDSView"},{"attributes":{},"id":"1216","type":"AllLabels"},{"attributes":{"children":[{"id":"1005"},{"id":"1006"},{"id":"1007"},{"id":"1190"},{"id":"1192"}],"sizing_mode":"stretch_width"},"id":"1195","type":"Column"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1218"},"group":null,"major_label_policy":{"id":"1219"},"major_label_text_font_size":"12pt","ticker":{"id":"1139"}},"id":"1138","type":"LinearAxis"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1110","type":"Scatter"},{"attributes":{"num_objects":1,"renderers":[{"id":"1111"}]},"id":"1113","type":"PointDrawTool"},{"attributes":{},"id":"1218","type":"BasicTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1161","type":"Line"},{"attributes":{},"id":"1219","type":"AllLabels"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1162","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1056","type":"CDSView"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{},"id":"1025","type":"LinearScale"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{},"id":"1212","type":"Selection"},{"attributes":{},"id":"1211","type":"UnionRenderers"},{"attributes":{},"id":"1027","type":"LinearScale"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1059","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1052"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1054"},"nonselection_glyph":{"id":"1053"},"view":{"id":"1056"}},"id":"1055","type":"GlyphRenderer"},{"attributes":{},"id":"1030","type":"BasicTicker"},{"attributes":{"axis":{"id":"1029"},"coordinates":null,"group":null,"ticker":null},"id":"1032","type":"Grid"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1058","type":"Line"},{"attributes":{},"id":"1038","type":"WheelZoomTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1077"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1079"},"nonselection_glyph":{"id":"1078"},"view":{"id":"1081"}},"id":"1080","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1058"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1060"},"nonselection_glyph":{"id":"1059"},"view":{"id":"1062"}},"id":"1061","type":"GlyphRenderer"},{"attributes":{},"id":"1125","type":"UnionRenderers"},{"attributes":{"coordinates":null,"group":null,"items":[{"id":"1075"},{"id":"1099"}]},"id":"1074","type":"Legend"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1126"},"selection_policy":{"id":"1125"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["1/s","1/min","1/h","1/d"],"sizing_mode":"stretch_width","title":"Reaction Unit:","value":"1/h"},"id":"1005","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [m2/s]&#x27;"},"id":"1012","type":"FuncTickFormatter"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["m2/s","m2/min","m2/h","m2/d"],"sizing_mode":"stretch_width","title":"Dispersion Unit:","value":"m2/h"},"id":"1006","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [1/s]&#x27;"},"id":"1008","type":"FuncTickFormatter"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [1/d]&#x27;"},"id":"1011","type":"FuncTickFormatter"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1170","type":"FuncTickFormatter"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["mL/min","m3/s","mL/h","L/h"],"sizing_mode":"stretch_width","title":"Flow Rate Unit:","value":"mL/h"},"id":"1007","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [1/min]&#x27;"},"id":"1009","type":"FuncTickFormatter"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1030"}},"id":"1029","type":"LinearAxis"},{"attributes":{"below":[{"id":"1138"}],"center":[{"id":"1141"},{"id":"1145"}],"left":[{"id":"1142"}],"min_height":400,"renderers":[{"id":"1164"}],"sizing_mode":"stretch_both","title":{"id":"1168"},"toolbar":{"id":"1153"},"x_range":{"id":"1167"},"x_scale":{"id":"1134"},"y_range":{"id":"1166"},"y_scale":{"id":"1136"}},"id":"1129","subtype":"Figure","type":"Plot"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [m2/min]&#x27;"},"id":"1013","type":"FuncTickFormatter"},{"attributes":{},"id":"1134","type":"LinearScale"},{"attributes":{},"id":"1034","type":"BasicTicker"},{"attributes":{"end":10.000000000000002},"id":"1167","type":"Range1d"},{"attributes":{"axis":{"id":"1033"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1036","type":"Grid"},{"attributes":{},"id":"1136","type":"LinearScale"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1053","type":"Line"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [1/h]&#x27;"},"id":"1010","type":"FuncTickFormatter"},{"attributes":{},"id":"1139","type":"BasicTicker"},{"attributes":{"axis":{"id":"1138"},"coordinates":null,"group":null,"ticker":null},"id":"1141","type":"Grid"},{"attributes":{"code":"  return (tick/3600/1000/1000).toExponential(2)+&#x27; [m3/s]&#x27;"},"id":"1016","type":"FuncTickFormatter"},{"attributes":{},"id":"1147","type":"WheelZoomTool"},{"attributes":{},"id":"1037","type":"PanTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1215"},"group":null,"major_label_policy":{"id":"1216"},"major_label_text_font_size":"12pt","ticker":{"id":"1143"}},"id":"1142","type":"LinearAxis"},{"attributes":{"overlay":{"id":"1043"}},"id":"1039","type":"BoxZoomTool"},{"attributes":{"axis":{"id":"1142"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1145","type":"Grid"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [m2/d]&#x27;"},"id":"1015","type":"FuncTickFormatter"},{"attributes":{},"id":"1143","type":"BasicTicker"},{"attributes":{},"id":"1042","type":"HelpTool"},{"attributes":{},"id":"1040","type":"SaveTool"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [m2/h]&#x27;"},"id":"1014","type":"FuncTickFormatter"},{"attributes":{},"id":"1151","type":"HelpTool"},{"attributes":{},"id":"1146","type":"PanTool"},{"attributes":{},"id":"1041","type":"ResetTool"},{"attributes":{"overlay":{"id":"1152"}},"id":"1148","type":"BoxZoomTool"},{"attributes":{},"id":"1149","type":"SaveTool"},{"attributes":{},"id":"1150","type":"ResetTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1034"}},"id":"1033","type":"LinearAxis"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1152","type":"BoxAnnotation"},{"attributes":{"tools":[{"id":"1146"},{"id":"1147"},{"id":"1148"},{"id":"1149"},{"id":"1150"},{"id":"1151"}]},"id":"1153","type":"Toolbar"},{"attributes":{"children":[{"id":"1187"},{"id":"1188"},{"id":"1171"},{"id":"1175"},{"id":"1177"},{"id":"1179"},{"id":"1178"},{"id":"1180"},{"id":"1182"},{"id":"1173"},{"id":"1184"},{"id":"1186"}],"sizing_mode":"stretch_width"},"id":"1194","type":"Column"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yloQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yupQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"label":{"value":"lower / upper Quartile"},"renderers":[{"id":"1061"}]},"id":"1075","type":"LegendItem"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1077","type":"Line"},{"attributes":{"active_multi":{"id":"1113"},"tools":[{"id":"1037"},{"id":"1038"},{"id":"1039"},{"id":"1040"},{"id":"1041"},{"id":"1042"},{"id":"1113"}]},"id":"1044","type":"Toolbar"}],"root_ids":["1020","1194","1129","1195"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"cf6278de-9f27-4477-9174-13ebc7de5098","root_ids":["1020","1194","1129","1195"],"roots":{"1020":"6d087e3a-b932-4873-aaa9-72c6ffc0aeb5","1129":"0ae2eef4-7854-4165-81a8-0fd320f39108","1194":"29d9047f-1695-4c56-bf8f-482c5fb7a654","1195":"0f6eb2b5-166a-498f-a184-cb946fa35560"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();