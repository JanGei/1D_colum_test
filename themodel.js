    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"779dbf77-b7c3-4888-b7da-32b4a4b0fbfa":{"defs":[],"roots":{"references":[{"attributes":{"active_multi":{"id":"1061"},"tools":[{"id":"1022"},{"id":"1023"},{"id":"1024"},{"id":"1025"},{"id":"1026"},{"id":"1027"},{"id":"1061"}]},"id":"1029","type":"Toolbar"},{"attributes":{"code":"return (tick).toFixed(2)+&#x27; [mmol/L]&#x27;"},"id":"1138","type":"FuncTickFormatter"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1180"},"group":null,"major_label_policy":{"id":"1181"},"major_label_text_font_size":"12pt","ticker":{"id":"1087"}},"id":"1086","type":"LinearAxis"},{"attributes":{},"id":"1019","type":"BasicTicker"},{"attributes":{"end":10,"format":{"id":"1138"},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Half Saturation Concentration","value":1,"visible":false},"id":"1139","type":"Slider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [mmol^(1-n)*L^(n) / kg]&#x27;"},"id":"1142","type":"FuncTickFormatter"},{"attributes":{},"id":"1023","type":"WheelZoomTool"},{"attributes":{"end":1,"format":{"id":"1140"},"sizing_mode":"stretch_width","start":0.0001,"step":0.0001,"title":"Specific Sorption Capacity","value":0.1,"visible":false},"id":"1141","type":"Slider"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1110","type":"Line"},{"attributes":{"axis":{"id":"1014"},"coordinates":null,"group":null,"ticker":null},"id":"1017","type":"Grid"},{"attributes":{"code":"return (tick*1000).toFixed(1)+&#x27; [mmol/L]&#x27;"},"id":"1140","type":"FuncTickFormatter"},{"attributes":{},"id":"1015","type":"BasicTicker"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1144","type":"FuncTickFormatter"},{"attributes":{},"id":"1082","type":"LinearScale"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1038","type":"Line"},{"attributes":{"end":10,"format":{"id":"1142"},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Freundlich Sorption Parameter","value":1,"visible":false},"id":"1143","type":"Slider"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1151"}]},"labels":["Analytical Model","Numerical Model"],"sizing_mode":"stretch_width"},"id":"1146","type":"RadioButtonGroup"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1118","type":"FuncTickFormatter"},{"attributes":{"end":2,"format":{"id":"1144"},"sizing_mode":"stretch_width","start":1,"step":0.01,"title":"Freundlich n","value":1.3,"visible":false},"id":"1145","type":"Slider"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1028","type":"BoxAnnotation"},{"attributes":{},"id":"1084","type":"LinearScale"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1153","type":"CustomJS"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1039","type":"Line"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1151"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1147","type":"RadioButtonGroup"},{"attributes":{},"id":"1087","type":"BasicTicker"},{"attributes":{"axis":{"id":"1086"},"coordinates":null,"group":null,"ticker":null},"id":"1089","type":"Grid"},{"attributes":{},"id":"1095","type":"WheelZoomTool"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAACMVwXXNZBzPSFi7JesUsU+wrox0ZvFNz82nBZ5+ZlxP0Vwf5RdApM/zY2j+tCyqD/f8azjj/m3P2wW63K8ZMM/foMra+DKyz/7/3aHdk3SP3EafvbcrtY/JIqQpWDf2j8VR49qXcTeP6U8NEXFJ+E/yUFXq8294j8KxpPzrSTkP0Rl++q4XuU/dHrOpFtv5j/ioVOailrnP9kmeJpfJOg/r8VVetvQ6D9Dj30OwWPpP6XaWHuB4Ok/SxyQDDRK6j+B77xvlaPqP6Mns3AL7+o/LlbcQKsu6z+9jT/7QGTrP5PI5IxXkes/QCjjekC36z/ZPOw2G9frP7HxN9jb8es/C+znJlEI7D/pGE33KRvsPyvrw9v5Kuw/B2EYOT047D/0avTLXEPsP+PYta6wTOw/1RXT7oJU7D+Y/x/AEVvsP/efGFuRYOw/UPoGki1l7D99NoInC2nsP17Oeu9IbOw/cZDTwgBv7D+NgW9MSHHsPya4orUxc+w/muQXN8x07D9jyHuSJHbsPz4kmXhFd+w/kxYA3zd47D8X5thHA3nsPwZDGf6teew/+sr5Rz167D+d6z2RtXrsPxg3oI4ae+w//Cd/W2977D/hubiStnvsP+XWfGPye+w/xE++oiR87D/Z8c7ZTnzsP46GnFJyfOw/AmrxIZB87D9tXwswqXzsP5zZzT++fOw/ZazJ9M987D/grErY3nzsPwXhk13rfOw/KkJs5fV87D9bjBjB/nzsP5Ly2TQGfew/Rq4Fegx97D/vIcbAEX3sP/iNkzEWfew/hBFw7hl97D/XyPATHX3sP+pCHLoffew/dTIl9SF97D9AIAfWI33sP3z1CWslfew//GswwCZ97D9uypTfJ33sP/LFttEofew/dOy8nSl97D/BmKtJKn3sP0Uek9oqfew/KJW2VCt97D+Hday7K33sP4n/eRIsfew/jEWqWyx97D8ai2GZLH3sP8+Obc0sfew/TT1T+Sx97D/aNloeLX3sP8mAlj0tfew/Bq3wVy197D+/tixuLX3sP6PI74Atfew/EhnFkC197D9yASKeLX3sP9Jvaaktfew/S83usi197D8Zb/i6LX3sPwulwcEtfew/7nR8xy197D8GEFPMLX3sP7sNadAtfew/wHTc0y197D9mmsbWLX3sP/XePNktfew/TUxR2y197D+tGxPdLX3sP28mj94tfew/HUXQ3y197D+Zn9/gLX3sP67wxOEtfew/Gr+G4i197D+cjSrjLX3sP4cDteMtfew/9Q4q5C197D+oAY3kLX3sP1+p4OQtfew/amQn5S197D/+MmPlLX3sP9zFleUtfew/pYrA5S197D9RtuTlLX3sP/RNA+Ytfew/Ni4d5i197D+UETPmLX3sP6+VReYtfew/wj9V5i197D9xgGLmLX3sP/e2beYtfew/1DN35i197D8bO3/mLX3sP1wGhuYtfew/RcaL5i197D8ApJDmLX3sP1vClOYtfew/yz6Y5i197D84MpvmLX3sP7SxneYtfew/EM+f5i197D9hmaHmLX3sP2wdo+Ytfew/+GWk5i197D8rfKXmLX3sP71npuYtfew/OS+n5i197D8q2KfmLX3sPz1nqOYtfew/auCo5i197D8NR6nmLX3sP/udqeYtfew/n+ep5i197D//JarmLX3sP9haquYtfew/nIeq5i197D+LrarmLX3sP67NquYtfew/5+iq5i197D/6/6rmLX3sP4cTq+Ytfew/FySr5i197D8hMqvmLX3sPwg+q+Ytfew/HUir5i197D+pUKvmLX3sP+hXq+Ytfew/C16r5i197D8/Y6vmLX3sP6hnq+Ytfew/Zmur5i197D+RbqvmLX3sP0Fxq+Ytfew/iXOr5i197D94davmLX3sPxt3q+Ytfew/fnir5i197D+reavmLX3sP6p6q+Ytfew/g3ur5i197D88fKvmLX3sP9h8q+Ytfew/XH2r5i197D/NfavmLX3sPyx+q+Ytfew/fH6r5i197D/AfqvmLX3sP/t+q+Ytfew/LH+r5i197D9Wf6vmLX3sP3l/q+Ytfew/l3+r5i197D+vf6vmLX3sP8Z/q+Ytfew/2H+r5i197D/of6vmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1174"},"selection_policy":{"id":"1173"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1177"},"group":null,"major_label_policy":{"id":"1178"},"major_label_text_font_size":"12pt","ticker":{"id":"1091"}},"id":"1090","type":"LinearAxis"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1044","type":"Line"},{"attributes":{"axis":{"id":"1090"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1093","type":"Grid"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1151"}]},"labels":["Linear Sorption","Langmuir Sorption","Freundlich Sorption"],"sizing_mode":"stretch_width","visible":false},"id":"1148","type":"RadioButtonGroup"},{"attributes":{},"id":"1091","type":"BasicTicker"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1049"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1051"},"nonselection_glyph":{"id":"1050"},"view":{"id":"1053"}},"id":"1052","type":"GlyphRenderer"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1155","type":"CustomJS"},{"attributes":{"args":{"BTCp":{"id":"1077"},"Fr_n_sl":{"id":"1145"},"K_Fr_sl":{"id":"1143"},"Kads_sl":{"id":"1139"},"Kd_sl":{"id":"1137"},"col_len_sl":{"id":"1123"},"col_rad_sl":{"id":"1125"},"disp_sl":{"id":"1127"},"flow_sl":{"id":"1131"},"pore_vol_sl":{"id":"1119"},"poros_sl":{"id":"1133"},"pulse_inj_sl":{"id":"1121"},"reac_sl":{"id":"1129"},"rg_CP":{"id":"1147"},"rg_ST":{"id":"1148"},"rho_s_sl":{"id":"1135"},"s_max_sl":{"id":"1141"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"function transport_num(c,disp,dx,dt){\\n    // This function approximates advection and dispersion numerically by a FVM\\n  \\n    // Move concentration by 1 cell\\n    for (let i = 0; i &lt; c.length-1; i++) {\\n      c[i+1] = c[i]\\n    }\\n    // First cell gets inlet concentration\\n    c[0] = 1\\n    var Jd = []\\n    // Dispersive fluxes between cells\\n    for (let i = 0; i &lt; c.length+1; i++) {\\n      if (i == 0) {\\n        Jd[i] = 0\\n      } else if (i == c.length) {\\n        Jd[i] = Jd[i-1]\\n      } else {\\n        Jd[i] = (c[i-1] - c[i])/dx*disp\\n      }\\n    }\\n  \\n    for (let i = 0; i &lt; Jd.length-1; i++) {\\n      c[i] = c[i] + dt/dx * (Jd[i] - Jd[i+1])\\n    }\\n  \\n    return c\\n  }\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n// Values needed for all models\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\n\\n// Derived entities\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel / n                       // [m/s]\\nconst reac    = (reac_l + reac_h)/2           // [1/s] \\nconst Dis     = (disp_l + disp_h)/2           // [m2/s]  \\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = col_len/sep_vel               // [s] VEL oder SEP_VEL?\\nconst c0      = 1;                            // [-] \\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// x.length is number of spatial nodes\\n// x2.length is number of temporal nodes\\n// Idea: Work with independant data sources for numerical model and take closest value between 2 points and map it to the source\\n\\n\\n// This discretization follows the scheme of the GW transport code\\n// Requirement 1: Neumann-Number = 1/3\\n// Requirement 2: Courant-Number = 1\\nconst dx    = 3*Dis/sep_vel\\nconst dt    = 3*Dis/sep_vel**2\\nconst t_end = PV * (x2.length-1)\\n  \\n// Lists for spatial and temporal span\\nvar x_num = []\\nvar t_num = []\\n\\nfor (let i = 0; ((i+1)*dx) &lt; col_len; i++) {\\n    x_num[i] = (i+1)*dx\\n}\\nfor (let i = 0; ((i+1)*dt) &lt; t_end; i++) {\\n    t_num[i] = (i+1)*dt\\n}\\nconsole.log(\\"Spatial Discretization is \\" + dx + \\" m\\\\n\\"\\n              +\\"Temporal Discretization is \\" + dt + \\" s\\\\n\\" \\n              +\\"Seepage velocity is \\"+ sep_vel + \\"m/s\\\\n\\"\\n              +\\"Dispersion Coefficient is \\"+ Dis + \\"m2/s\\\\n\\"\\n              +\\"There are \\" + x_num.length + \\" spatial nodes\\\\n\\"\\n              +\\"There are \\" + t_num.length + \\" temporal nodes\\\\n\\"\\n              +\\"The Courant Number equals \\" + dt * sep_vel /dx\\n)\\n\\n// Initialize list of concentrations\\nvar c_array = Array(x_num.length).fill(0)\\nconsole.log(c_array)\\n\\n\\nfor (let i = 0; i &lt; t_num.length; i++) {\\n    // Set inlet concentration \\n    if (rg_CP == 0) {\\n        var c_in = c0\\n    } else if (rg_CP == 1 &amp;&amp; t_num[i] &lt; t_inj) {\\n        var c_in = c0\\n    } else {\\n        var c_in = 0\\n    }\\n\\n    // Transport by 1 cell\\n    //c_array = transport_num()\\n}\\nif (rg_SType == 0) { //Linear Sorption\\n\\n}"},"id":"1149","type":"CustomJS"},{"attributes":{},"id":"1099","type":"HelpTool"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1050","type":"Line"},{"attributes":{},"id":"1094","type":"PanTool"},{"attributes":{"source":{"id":"1002"}},"id":"1053","type":"CDSView"},{"attributes":{"overlay":{"id":"1100"}},"id":"1096","type":"BoxZoomTool"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1051","type":"Line"},{"attributes":{},"id":"1097","type":"SaveTool"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1058","type":"Scatter"},{"attributes":{},"id":"1098","type":"ResetTool"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1049","type":"Line"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1149"}]},"label":"Compute Numerical Model","sizing_mode":"stretch_width","visible":false},"id":"1150","type":"Button"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1100","type":"BoxAnnotation"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1155"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1154","type":"Button"},{"attributes":{"source":{"id":"1003"}},"id":"1113","type":"CDSView"},{"attributes":{"end":1.05,"start":-0.03},"id":"1054","type":"Range1d"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1136","type":"FuncTickFormatter"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1019"}},"id":"1018","type":"LinearAxis"},{"attributes":{"end":0.2,"format":{"id":"1124"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1125","type":"Slider"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1111","type":"Line"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1126"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1127","type":"RangeSlider"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1074"},"selection_policy":{"id":"1073"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{"end":7},"id":"1115","type":"Range1d"},{"attributes":{},"id":"1177","type":"BasicTickFormatter"},{"attributes":{},"id":"1027","type":"HelpTool"},{"attributes":{"code":"return tick.toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1130","type":"FuncTickFormatter"},{"attributes":{},"id":"1022","type":"PanTool"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [1/h]&#x27;"},"id":"1128","type":"FuncTickFormatter"},{"attributes":{"overlay":{"id":"1028"}},"id":"1024","type":"BoxZoomTool"},{"attributes":{},"id":"1178","type":"AllLabels"},{"attributes":{"children":[{"id":"1146"},{"id":"1147"},{"id":"1119"},{"id":"1123"},{"id":"1125"},{"id":"1129"},{"id":"1127"},{"id":"1131"},{"id":"1133"},{"id":"1121"},{"id":"1152"},{"id":"1154"}],"sizing_mode":"stretch_width"},"id":"1156","type":"Column"},{"attributes":{"end":0.0,"format":{"id":"1128"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1129","type":"RangeSlider"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1109","type":"Line"},{"attributes":{"children":[{"id":"1148"},{"id":"1135"},{"id":"1137"},{"id":"1139"},{"id":"1141"},{"id":"1143"},{"id":"1145"},{"id":"1150"}],"sizing_mode":"stretch_width"},"id":"1157","type":"Column"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{},"id":"1180","type":"BasicTickFormatter"},{"attributes":{"num_objects":1,"renderers":[{"id":"1059"}]},"id":"1061","type":"PointDrawTool"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [m2/h]&#x27;"},"id":"1126","type":"FuncTickFormatter"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1132","type":"FuncTickFormatter"},{"attributes":{"end":50,"format":{"id":"1130"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1131","type":"Slider"},{"attributes":{},"id":"1181","type":"AllLabels"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1134","type":"FuncTickFormatter"},{"attributes":{"end":43200,"format":{"id":"1120"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1121","type":"Slider"},{"attributes":{"source":{"id":"1002"}},"id":"1041","type":"CDSView"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1043"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1045"},"nonselection_glyph":{"id":"1044"},"view":{"id":"1047"}},"id":"1046","type":"GlyphRenderer"},{"attributes":{"end":0.005,"format":{"id":"1136"},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1137","type":"Slider"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1056","type":"Scatter"},{"attributes":{"source":{"id":"1002"}},"id":"1047","type":"CDSView"},{"attributes":{"end":0.5,"format":{"id":"1122"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1123","type":"Slider"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1153"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1152","type":"Button"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1037"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1039"},"nonselection_glyph":{"id":"1038"},"view":{"id":"1041"}},"id":"1040","type":"GlyphRenderer"},{"attributes":{"below":[{"id":"1086"}],"center":[{"id":"1089"},{"id":"1093"}],"left":[{"id":"1090"}],"min_height":400,"renderers":[{"id":"1112"}],"sizing_mode":"stretch_both","title":{"id":"1116"},"toolbar":{"id":"1101"},"x_range":{"id":"1115"},"x_scale":{"id":"1082"},"y_range":{"id":"1114"},"y_scale":{"id":"1084"}},"id":"1077","subtype":"Figure","type":"Plot"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1015"}},"id":"1014","type":"LinearAxis"},{"attributes":{},"id":"1010","type":"LinearScale"},{"attributes":{},"id":"1012","type":"LinearScale"},{"attributes":{"end":1.9459101490553132,"format":{"id":"1118"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.008853665428037451,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1119","type":"Slider"},{"attributes":{},"id":"1026","type":"ResetTool"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1124","type":"FuncTickFormatter"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1116","type":"Title"},{"attributes":{},"id":"1174","type":"Selection"},{"attributes":{"end":1.05},"id":"1114","type":"Range1d"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1037","type":"Line"},{"attributes":{},"id":"1173","type":"UnionRenderers"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1122","type":"FuncTickFormatter"},{"attributes":{"end":1,"format":{"id":"1132"},"js_property_callbacks":{"change:value":[{"id":"1151"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1133","type":"Slider"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1057","type":"Scatter"},{"attributes":{},"id":"1025","type":"SaveTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1056"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1058"},"nonselection_glyph":{"id":"1057"},"view":{"id":"1060"}},"id":"1059","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1043","type":"Line"},{"attributes":{"below":[{"id":"1014"}],"center":[{"id":"1017"},{"id":"1021"}],"js_event_callbacks":{"pan":[{"id":"1151"}],"tap":[{"id":"1151"}]},"left":[{"id":"1018"}],"min_height":400,"renderers":[{"id":"1040"},{"id":"1046"},{"id":"1052"},{"id":"1059"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1029"},"x_range":{"id":"1006"},"x_scale":{"id":"1010"},"y_range":{"id":"1054"},"y_scale":{"id":"1012"}},"id":"1005","subtype":"Figure","type":"Plot"},{"attributes":{"args":{"BTCp":{"id":"1077"},"Fr_n_sl":{"id":"1145"},"K_Fr_sl":{"id":"1143"},"Kads_sl":{"id":"1139"},"Kd_sl":{"id":"1137"},"Lcube1":[[0.6579428287931056],[0.8481288698442859],[0.3734484157786696],[0.10675325328609152],[0.9907483049982928],[0.49575026271545064],[0.48319033310621945],[0.4395368752877792],[0.6352667850518394],[0.7099192679227601],[0.8840663911241637],[0.2798198485567263],[0.8203701461091895],[0.07851813683140833],[0.22483852493001255],[0.9396969757053069],[0.5316306066699813],[0.9270801230535884],[0.5587423443293572],[0.2693761725796517],[0.06012383142340687],[0.593660419933955],[0.08829898204394288],[0.1333695829070449],[0.8798478146581421],[0.8588091208575018],[0.14712477691724096],[0.3525248287577072],[0.9606938739585599],[0.18935778422064836],[0.3097043819150363],[0.8106949528997772],[0.3921491010028],[0.3646830066298635],[0.606044111310435],[0.9713757321195376],[0.6617215786511518],[0.5769963141253185],[0.8331328609061156],[0.7592715844017952],[0.4706395441496568],[0.21810939240879484],[0.4634740857947876],[0.17414982176333055],[0.9540578769234075],[0.5608478827388013],[0.5235439739279024],[0.09486203026886729],[0.05653345685462172],[0.4446973218042469],[0.9105064380986984],[0.7712140322685533],[0.294909936245364],[0.9073251036366787],[0.38067308841953185],[0.12443311641994573],[0.007773663958921163],[0.7828630735788483],[0.3150091085859007],[0.980147504645406],[0.8658316434440549],[0.16772372481869474],[0.6994279434732575],[0.7169099243248327],[0.7602326291614757],[0.728805856453384],[0.6763446799138443],[0.6895187837659441],[0.5151857622339546],[0.32952269376197457],[0.20711223222851355],[0.23157653460881472],[0.8928791522821882],[0.34247642461055283],[0.6148832345332573],[0.6232052698658402],[0.15201306919328503],[0.649844985792068],[0.9435182423427431],[0.41211240765254453],[0.5881713539780214],[0.0484238951779996],[0.2574911590483018],[0.019540606202081354],[0.548434872909271],[0.45860024002021627],[0.798473264061781],[0.735699451687946],[0.4071354874550472],[0.3315938274101606],[0.28917527943534627],[0.7418873393918267],[0.8097349036470205],[0.023713857286527164],[0.193210083865138],[0.502984357341388],[0.031547517230237826],[0.11047194741011643],[0.4254823711449455],[0.2425681388913824]],"Lcube2":[[0.40090983162999166],[0.6110687661825619],[0.48461724022884356],[0.6378201844810374],[0.027415700408972815],[0.6431965061489957],[0.5002018312784733],[0.17097134234232392],[0.3618415581805952],[0.16266152693956573],[0.4931983808148404],[0.10749658335635084],[0.9737985204469772],[0.6674020598857153],[0.09407693995471308],[0.9104853302091513],[0.3915227169129357],[0.5660054638264748],[0.11574048469127332],[0.01752116528782027],[0.8608098781060256],[0.20108177651245157],[0.4602276581209221],[0.34652888679495647],[0.8720020576528378],[0.90471175543854],[0.2950218420649646],[0.7963410726728142],[0.33565908332770233],[0.7878438140459758],[0.6817566786209929],[0.7666069838272473],[0.8883283697230968],[0.44973776375739527],[0.27380547508560626],[0.15213846867638667],[0.9660946315581279],[0.3797240261387069],[0.9281574057682014],[0.3018187891553629],[0.23427011120782054],[0.004908208014711108],[0.322435159599832],[0.04149160689251643],[0.21896739457692974],[0.9566324515461667],[0.6503282317927712],[0.8196841744013359],[0.5954740745273572],[0.8523364287216654],[0.06898957146560114],[0.12942525052884712],[0.3194579291790336],[0.8201530096693136],[0.4121203087247472],[0.5444702733410248],[0.4374729951605341],[0.601163057496424],[0.05638929211840317],[0.8349124101297845],[0.8910876784932433],[0.5839236790109599],[0.5189760001565139],[0.13722252400953835],[0.7444533756956426],[0.24463334514712204],[0.18334408883647815],[0.5700218540428724],[0.5294365418753353],[0.07342319230871358],[0.6753109171411721],[0.2239612486804458],[0.7722812641158846],[0.5398060232893227],[0.28863873179526267],[0.031480716858990745],[0.2614337623471683],[0.738825474686816],[0.45003067713280076],[0.4792388568826295],[0.8429696677312518],[0.08194844543438616],[0.9945888258476162],[0.8010969762846376],[0.715515460320205],[0.5530277992884344],[0.6994378530572515],[0.6258973210162128],[0.42169076963891805],[0.9462416822810407],[0.9313415147929834],[0.19855525215510275],[0.703650115605523],[0.38100414315562275],[0.7248969501625635],[0.9825989476662863],[0.7593481452337127],[0.25707609670842224],[0.1413813310685584],[0.3552283691812665]],"col_len_sl":{"id":"1123"},"col_rad_sl":{"id":"1125"},"computebutton":{"id":"1150"},"disp_sl":{"id":"1127"},"flow_sl":{"id":"1131"},"pore_vol_sl":{"id":"1119"},"poros_sl":{"id":"1133"},"pulse_inj_sl":{"id":"1121"},"reac_sl":{"id":"1129"},"rg_AN":{"id":"1146"},"rg_CP":{"id":"1147"},"rg_ST":{"id":"1148"},"rho_s_sl":{"id":"1135"},"s_max_sl":{"id":"1141"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var r_mean = (reac_l+reac_h)/2\\n  var D_mean = (disp_l+disp_h)/2\\n  var gam_mean = get_gamma(r_mean,D_mean,vel)\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        c[i] = 1\\n        cmin[i] = 1\\n        cmax[i] = 1\\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg == 1) {\\n              // Pulse injection\\n              if (t&lt;t_inj) {\\n                intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n              } else {\\n                intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n              }\\n            } else {\\n              // Cotinuous injection\\n              intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        if (rg==1){\\n          // Pulse injection\\n          if (t&lt;t_inj) {\\n            c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n          } else {\\n            c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))));\\n          }\\n        } else {\\n          // Continuous injection\\n          c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n        }\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n    }\\n  }\\n  return [c, cmin, cmax]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg_CP==1){\\n        // Pulse injection |this produces negative values in the begining\\n        if (tsp[i]&lt;t_inj) {\\n          c[i] = 1/2 * (1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n        } else {\\n          c[i] = 1/2 * ((1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n        }\\n      } else {\\n        // Continuous injection\\n        c[i] = 1/2 * Math.exp(xBTC*vel/(2*D))*(Math.exp((-xBTC)*vel*gam/(2*D))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i])))+math.exp(xBTC*vel*gam/(2*D))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i]))));\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(reac,Dis,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)\\n  return res\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_AN     = rg_AN.active                      // [0]\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n// Values needed for all models\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\n\\n// Derived entities\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel / n                       // [m/s]\\nconst reac    = (reac_l + reac_h)/2           // [1/s] \\nconst Dis     = (disp_l + disp_h)/2           // [m2/s]  \\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = col_len/sep_vel               // [s] VEL oder SEP_VEL?\\nconst c0      = 1;                            // [-] \\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit its range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\nif (rg_AN == 0){ // Analytical model\\n\\n  // Time for analytical model \\n  const tPV       = Math.exp(pore_vol_sl.value);      // [-]\\n  const t         = tPV * PV                          // [s]\\n\\n  const gam     = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2) \\n\\n  // Initializing empty lists\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var cBTX = []\\n\\n  // This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\n  if (1&lt;2){ \\n    [c, cmin, cmax] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP)\\n    cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,Dis) \\n  }\\n\\n  // Update sources\\n  for (let i = 0; i &lt; c.length; i++) {\\n    y[i] = c[i]\\n    ymin[i] = cmin[i]\\n    ymax[i] = cmax[i]\\n  }\\n  for (let i = 0; i &lt; x.length; i++) {\\n    y2[i] = cBTX[i]\\n  }\\n\\n  // Update Sliders\\n  pore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\n  BTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27;m (Drag diamond in upper plot to change)&#x27;\\n  rg_ST.visible = false\\n  computebutton.visible = false\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n  Kads_sl.visible = false\\n  s_max_sl.visible = false\\n  K_Fr_sl.visible = false\\n  Fr_n_sl.visible = false\\n\\n  if (rg_CP==0) {\\n    pulse_inj_sl.visible = false\\n  } else {\\n    pulse_inj_sl.visible = true\\n  }\\n\\n} else {\\n  // Change UI for numerical model -- Computation is preformed in different fiel\\n  // Make sorption type options visible\\n  rg_ST.visible = true\\n  computebutton.visible = true\\n  if (rg_SType == 0) {\\n    rho_s_sl.visible = true\\n    Kd_sl.visible = true\\n    Kads_sl.visible = false\\n    s_max_sl.visible = false\\n    K_Fr_sl.visible = false\\n    Fr_n_sl.visible = false\\n  } else if (rg_SType == 1) {\\n    rho_s_sl.visible = false\\n    Kd_sl.visible = false\\n    Kads_sl.visible = true\\n    s_max_sl.visible = true\\n    K_Fr_sl.visible = false\\n    Fr_n_sl.visible = false\\n  } else if (rg_SType == 2) {\\n    rho_s_sl.visible = false\\n    Kd_sl.visible = false\\n    Kads_sl.visible = false\\n    s_max_sl.visible = false\\n    K_Fr_sl.visible = true\\n    Fr_n_sl.visible = true\\n  }\\n  \\n}\\n\\n\\n//console.log((xBTC-sep_vel*tsp[100]*gam)/math.sqrt(4*Dis*tsp[100]))\\n//console.log(tsp[100])\\n//console.log(sep_vel)\\n//console.log(Dis)\\n\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1151","type":"CustomJS"},{"attributes":{"source":{"id":"1004"}},"id":"1060","type":"CDSView"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1045","type":"Line"},{"attributes":{"end":3000,"format":{"id":"1134"},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1135","type":"Slider"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1109"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1111"},"nonselection_glyph":{"id":"1110"},"view":{"id":"1113"}},"id":"1112","type":"GlyphRenderer"},{"attributes":{"axis":{"id":"1018"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1021","type":"Grid"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1120","type":"FuncTickFormatter"},{"attributes":{},"id":"1006","type":"DataRange1d"},{"attributes":{"tools":[{"id":"1094"},{"id":"1095"},{"id":"1096"},{"id":"1097"},{"id":"1098"},{"id":"1099"}]},"id":"1101","type":"Toolbar"},{"attributes":{"data":{"x":{"__ndarray__":"/Knx0k1icL8iB2GEw15ov5h0vcXW8V+/2LVxBU1MTr8A7LsEnFgaP2xYUAM6cVI/DHkqI3WeYT/ixaxETQRqP1yJF7MSNXE/yK/Yw/5ndT8y1pnU6pp5P5z8WuXWzX0/hBEOe2EAgT+6pG6D1xmDP+83z4tNM4U/JMsvlMNMhz9aXpCcOWaJP5Dx8KSvf4s/xoRRrSWZjT/6F7K1m7KPP5hVCd8I5pA/M58548PykT/N6Gnnfv+SP2gymus5DJQ/A3zK7/QYlT+exfrzryWWPzkPK/hqMpc/01hb/CU/mD9uoosA4UuZPwnsuwScWJo/ozXsCFdlmz8/fxwNEnKcP9nITBHNfp0/cxJ9FYiLnj8PXK0ZQ5ifP9TS7g5/UqA/ovcGkdzYoD9wHB8TOl+hPzxBN5WX5aE/CmZPF/Vroj/YimeZUvKiP6SvfxuweKM/ctSXnQ3/oz9A+a8fa4WkPwweyKHIC6U/2kLgIyaSpT+oZ/ilgximP3aMECjhnqY/QrEoqj4lpz8Q1kAsnKunP976WK75Mag/qh9xMFe4qD94RImytD6pP0ZpoTQSxak/Eo65tm9Lqj/gstE4zdGqP67X6boqWKs/evwBPYjeqz9IIRq/5WSsPxZGMkFD66w/4mpKw6BxrT+wj2JF/vetP360esdbfq4/StmSSbkErz8Y/qrLFouvP3OR4Sa6CLA/2aPt5+hLsD9AtvmoF4+wP6fIBWpG0rA/DdsRK3UVsT907R3so1ixP9v/Ka3Sm7E/QhI2bgHfsT+oJEIvMCKyPw83TvBeZbI/dklasY2osj/cW2ZyvOuyP0NucjPrLrM/qoB+9Blysz8Qk4q1SLWzP3ellnZ3+LM/3reiN6Y7tD9Eyq741H60P6vcurkDwrQ/Eu/GejIFtT94AdM7YUi1P98T3/yPi7U/Ribrvb7OtT+sOPd+7RG2PxNLA0AcVbY/el0PAUuYtj/hbxvCedu2P0eCJ4OoHrc/rpQzRNdhtz8Vpz8FBqW3P3u5S8Y06Lc/4stXh2MruD9J3mNIkm64P6/wbwnBsbg/FgN8yu/0uD99FYiLHji5P+MnlExNe7k/SjqgDXy+uT+xTKzOqgG6PxhfuI/ZRLo/fnHEUAiIuj/lg9ARN8u6P0yW3NJlDrs/sqjok5RRuz8Zu/RUw5S7P4DNABby17s/5t8M1yAbvD9N8hiYT168P7QEJVl+obw/GhcxGq3kvD+BKT3b2ye9P+g7SZwKa70/Tk5VXTmuvT+1YGEeaPG9Pxxzbd+WNL4/goV5oMV3vj/pl4Vh9Lq+P1CqkSIj/r4/tryd41FBvz8ez6mkgIS/P4ThtWWvx78/9flgE28FwD8pA+dzBifAP1wMbdSdSMA/jxXzNDVqwD/DHnmVzIvAP/Yn//VjrcA/KTGFVvvOwD9dOgu3kvDAP5BDkRcqEsE/w0wXeMEzwT/3VZ3YWFXBPypfIznwdsE/XWipmYeYwT+RcS/6HrrBP8R6tVq228E/94M7u039wT8rjcEb5R7CP16WR3x8QMI/kp/N3BNiwj/FqFM9q4PCP/ix2Z1CpcI/LLtf/tnGwj9fxOVecejCP5LNa78ICsM/xtbxH6Arwz/533eAN03DPyzp/eDObsM/YPKDQWaQwz+T+wmi/bHDP8YEkAKV08M/+g0WYyz1wz8tF5zDwxbEP2AgIiRbOMQ/lCmohPJZxD/HMi7liXvEP/o7tEUhncQ/LkU6pri+xD9hTsAGUODEP5RXRmfnAcU/yGDMx34jxT/7aVIoFkXFPy5z2IitZsU/Ynxe6USIxT+VheRJ3KnFP8iOaqpzy8U//JfwCgvtxT8voXZrog7GP2Kq/Ms5MMY/lrOCLNFRxj/JvAiNaHPGP/zFju3/lMY/MM8UTpe2xj9j2JquLtjGP5fhIA/G+cY/yuqmb10bxz/98yzQ9DzHPzH9sjCMXsc/ZAY5kSOAxz+XD7/xuqHHP8sYRVJSw8c//iHLsunkxz8xK1ETgQbIP2U013MYKMg/mD1d1K9JyD/LRuM0R2vIP/9PaZXejMg/Mlnv9XWuyD9lYnVWDdDIP5lr+7ak8cg/zHSBFzwTyT//fQd40zTJPzOHjdhqVsk/ZpATOQJ4yT+amZmZmZnJPw==","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D/jG/gQmv/vP65JQLmG++8/LcTBGmz37z/wq/0lSfPvP/Jg/a4c7+8/gHUZa+Xq7z8U56buoebvP/9Zi6pQ4u8/LVW56e/d7z9EwZXOfdnvP1g4SFD41O8/EwL4N13Q7z+O6vcdqsvvP9h442bcxu8/UmOwQPHB7z8efbef5bzvP9a1uDu2t+8/MybejF+y7z+IhMLI3azvP1K+f98sp+8/KtTKeEih7z/jdCLxK5vvP8gwFlfSlO8/rXasaDaO7z9O4O2QUofvP42hnOUggO8/PTQfJZt47z9AmaW0unDvP5m7kJ54aO8/Rqwjkc1f7z8yi4bdsVbvPw8CI3cdTe8/ZTdi8wdD7z/AEtSJaDjvP1yMxxQ2Le8/fpJbEmch7z/7zA+m8RTvP1ww3JrLB+8/ZurVZer57j8/s2cpQ+vuPwj8IrnK2+4/YM4unnXL7j/kc1gcOLruP70uyTcGqO4/1Wdju9OU7j80xMg/lIDuP5OICTM7a+4/WZz84LtU7j+KVD58CT3uPzX70icXJO4/G47WliYL7j9fDGznrvLtPwJH8ajW2O0/RizBFoy97T8vSGJIvaDtPwO9KUNYgu0/TzcjDUti7T8GLTDBg0DtP/EwTaTwHO0/6ZXoO4D37D/cBzJlIdDsP+83R23Dpuw/FT8eKlZ77D+k/goUyk3sPzWWuV8QHuw/twN1GBvs6z/9Ro463bfrP8Xptc1Kges/K64X/1hI6z81ZQY7/gzrP16TBEYyz+o/DKb1VO6O6j9MB0MkLUzqP7pywA3rBuo/On4bHSa/6T+XY6Mi3nTpP5K+N8QUKOk/IB0vjM3Y6D9L+Aj2DYfoP9blwXjdMug/W46kjkXc5z+KKna6UYPnP23eHAJLK+c/z+2s3OPU5j/n4qYwz3zmP0b0AaAcI+Y/CHPs+9zH5T8umwE8ImvlP1ONYmG+HOU/+cWxyhPi5D9Et0S2CKfkP5Y74vKha+Q/mHavZeQv5D+kFPUI1fPjPzQ63Op4t+M/4qkjLNV64z9XyvOiPD7jP0emIaWqAuM/tpP3T+TG4j8RXh6T7oriP0nCxmjOTuI/k7Rq1IgS4j/If4vhItbhP4xCbaKhmeE/5E7QLgpd4T8e8qiiYSDhP+8r1hyt4+A/99rXvfGm4D8E5oSmNGrgP2TowfZ6LeA/bs5xmJPh3z8i8jMe5GvfPxtOf7vm+d4/vJMBshKI3j+kHzpWcBbeP4AYofAHpd0/eOfWu+Ez3T/AhtniBcPcP+VHQH98Utw/Pq1+l03i2z9z8C4dgXLbP5jKZOseA9s/OA4JxS6U2j+Ynz5TuCXaP7pR0SPDt9k/ciqvp1ZK2T+TiWwxet3YPxar0/M0cdg/WPR/AI4F2D8HeYVGjJrXP1McJZE2MNc/d62NhpPG1j/ZWKqmqV3WP5G//kl/9dU/GAGRoBqO1T8x/OGwgSfVP3YF9Fa6wdQ/fEpgQ8pc1D+3Env6tvjTP4sHh9OFldM/XKb39zsz0z/l+MJi3tHSP1Wowt9xcdI/SXokC/sR0j9kPupQfrPRP7oteez/VdE/CLY46IP50D+VpEAdDp7QP2+dFjOiQ9A/q4z1PofUzz91C4dM6yPPP89gkLJ2dc4/NfW0MC/JzT9a95wiGh/NP4kaIoA8d8w/NJWY3ZrRyz/Q3DNsOS7LP8KShvobjco/rgwd9UXuyT/R2TFnulHJP9Cce/t7t8g/WosT/YwfyD+P23NY74nHP9NgjZyk9sY/YJLz+61lxj9/MB5ODNfFP2y2vxDASsU/fsIvacnAxD95meglKDnEP/bkFsDbs8M/58k6XeMwwz+scNnQPbDCPzcVPp7pMcI/bLRJ+uS1wT+yaFDNLTzBPzWIA7XBxMA/aJVnBp5PwD+FJKqff7m/P8uOBrZH2L4/hSE4Xo37vT/4g68lSSO9P0puQB1zT7w/8U903QKAuz+0q+eK77S6P5pgsNov7rk/chzLFroruT/MO44ihG24P3JjIH+Ds7c/mSfxT639tj9YHTJf9ku2Pxu+TiJTnrU/oo1hvrf0tD+5/aQMGE+0P4eX3p5nrbM/VvzCw5kPsz9hXFGLoXWyPw==","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{},"id":"1073","type":"UnionRenderers"},{"attributes":{},"id":"1074","type":"Selection"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{},"id":"1072","type":"Selection"}],"root_ids":["1005","1156","1077","1157"]},"title":"Bokeh Application","version":"2.4.1"}}';
                const render_items = [{"docid":"779dbf77-b7c3-4888-b7da-32b4a4b0fbfa","root_ids":["1005","1156","1077","1157"],"roots":{"1005":"32aaf79a-632b-4ade-81d7-981c1689084b","1077":"449f42a9-0688-4bf5-91c2-61208a063667","1156":"27f93181-ab9f-4a13-829b-74732a69c662","1157":"32241c5e-73df-4263-a0ea-ad96d4a8a5eb"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();