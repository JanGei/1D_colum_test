    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"91f4b81c-338d-4f22-8d3f-f5a4a5d4d4e1":{"defs":[],"roots":{"references":[{"attributes":{},"id":"1076","type":"ResetTool"},{"attributes":{"code":"return tick.toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1106","type":"FuncTickFormatter"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"6y6wElsolD9axfnVnuCYP1jG59inXZ4/1sYmDJdWoj/DJDm2U+2lP3ByKL9k96k/ZlOEVY13rj+yPTumZbexP1bUPZwabrQ/wX/H7HJetz8gdfLg+oW6P8u3BstB4b0/IOWarPK1wD9eXEPeUZDCPzmS6wO6fMQ/kw8Y+9F3xj8C38MO/X3IPy9dIrpti8o/PPFifjmczD8g9EsxbazOP+/HEpYQXNA/rbuDZMZd0T+tOstTjFnSP9BOd6C3TdM/BYQTssU41D//iGkkYhnVP06WNX1r7tU/97D0eva21j+bYrz0T3LXPwiAHE79H9g/lTiYjLu/2D+XoQUmfVHZP1T62adm1dk/6mTbXspL2j+Z0qwsI7XaP/dUBb0OEts/7lkCT0dj2z+nONJHnanbPwO17cLw5ds/RltHUSsZ3D96nVsUOkTcP2UPE1wIaNw/Lzcx53qF3D9HlObda53cPxalaZWnsNw/2TSgIuq/3D+zkUu53cvcP8fMQM0Z1dw/wxla5CLc3D8uJ1ACa+HcP7cgxJNS5dw/1k6Uuyno3D9fmR/lMercP09BQ3+f69w/midqxpvs3D8i0KeHRu3cPyb8Ncu37dw/PyJfWQHu3D+dXIoRMO7cP2Otag9N7tw/nooCnl7u3D9KeBP7aO7cP5KDnu9u7tw/xv1SQ3Lu3D/ty0QRdO7cP0+xJwR17tw/DBHEf3Xu3D80sY68de7cPywdZtl17tw/u0eT5nXu3D8/blzsde7cPxFGzO517tw/kcjH73Xu3D8AoSjwde7cP6ApTPB17tw/QI5Y8HXu3D9bp1zwde7cP2TvXfB17tw/GVBe8HXu3D/mal7wde7cP91xXvB17tw/jXNe8HXu3D/vc17wde7cPwN0XvB17tw/B3Re8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1147"},"selection_policy":{"id":"1146"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"end":0.0,"format":{"id":"1104"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1105","type":"RangeSlider"},{"attributes":{},"id":"1009","type":"LinearScale"},{"attributes":{"children":[{"id":"1112"},{"id":"1095"},{"id":"1099"},{"id":"1101"},{"id":"1105"},{"id":"1103"},{"id":"1107"},{"id":"1109"},{"id":"1111"},{"id":"1097"}],"sizing_mode":"stretch_width"},"id":"1118","type":"Column"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1102"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1103","type":"RangeSlider"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1036","type":"Line"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1108","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1044","type":"Line"},{"attributes":{"below":[{"id":"1013"}],"center":[{"id":"1016"},{"id":"1020"},{"id":"1053"}],"left":[{"id":"1017"}],"min_height":400,"renderers":[{"id":"1039"},{"id":"1045"},{"id":"1051"}],"sizing_mode":"stretch_both","title":{"id":"1122"},"toolbar":{"id":"1028"},"x_range":{"id":"1005"},"x_scale":{"id":"1009"},"y_range":{"id":"1054"},"y_scale":{"id":"1011"}},"id":"1004","subtype":"Figure","type":"Plot"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1042","type":"Line"},{"attributes":{"end":50,"format":{"id":"1106"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1107","type":"Slider"},{"attributes":{},"id":"1005","type":"DataRange1d"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1110","type":"FuncTickFormatter"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1128"},"group":null,"major_label_policy":{"id":"1129"},"major_label_text_font_size":"12pt","ticker":{"id":"1014"}},"id":"1013","type":"LinearAxis"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1089","type":"Line"},{"attributes":{},"id":"1011","type":"LinearScale"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1038","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1037","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1036"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1038"},"nonselection_glyph":{"id":"1037"},"view":{"id":"1040"}},"id":"1039","type":"GlyphRenderer"},{"attributes":{},"id":"1014","type":"BasicTicker"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1043","type":"Line"},{"attributes":{"axis":{"id":"1013"},"coordinates":null,"group":null,"ticker":null},"id":"1016","type":"Grid"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [m2/h]&#x27;"},"id":"1102","type":"FuncTickFormatter"},{"attributes":{},"id":"1022","type":"WheelZoomTool"},{"attributes":{},"id":"1166","type":"BasicTickFormatter"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1125"},"group":null,"major_label_policy":{"id":"1126"},"major_label_text_font_size":"12pt","ticker":{"id":"1018"}},"id":"1017","type":"LinearAxis"},{"attributes":{"axis":{"id":"1017"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1020","type":"Grid"},{"attributes":{},"id":"1167","type":"AllLabels"},{"attributes":{},"id":"1018","type":"BasicTicker"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1115","type":"CustomJS"},{"attributes":{},"id":"1169","type":"BasicTickFormatter"},{"attributes":{},"id":"1026","type":"HelpTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1087"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1089"},"nonselection_glyph":{"id":"1088"},"view":{"id":"1091"}},"id":"1090","type":"GlyphRenderer"},{"attributes":{},"id":"1021","type":"PanTool"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1100","type":"FuncTickFormatter"},{"attributes":{"overlay":{"id":"1027"}},"id":"1023","type":"BoxZoomTool"},{"attributes":{"end":1.05},"id":"1092","type":"Range1d"},{"attributes":{},"id":"1060","type":"LinearScale"},{"attributes":{},"id":"1024","type":"SaveTool"},{"attributes":{},"id":"1170","type":"AllLabels"},{"attributes":{"end":43200,"format":{"id":"1096"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1097","type":"Slider"},{"attributes":{},"id":"1025","type":"ResetTool"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1096","type":"FuncTickFormatter"},{"attributes":{"end":2.302585092994046,"format":{"id":"1094"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.009210340371976183,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1095","type":"Slider"},{"attributes":{"source":{"id":"1003"}},"id":"1091","type":"CDSView"},{"attributes":{"end":0.5,"format":{"id":"1098"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1099","type":"Slider"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1098","type":"FuncTickFormatter"},{"attributes":{"tools":[{"id":"1072"},{"id":"1073"},{"id":"1074"},{"id":"1075"},{"id":"1076"},{"id":"1077"}]},"id":"1079","type":"Toolbar"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1027","type":"BoxAnnotation"},{"attributes":{"end":1,"format":{"id":"1108"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1109","type":"Slider"},{"attributes":{"end":0.2,"format":{"id":"1110"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"BTC Location","value":0.1},"id":"1111","type":"Slider"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1042"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1044"},"nonselection_glyph":{"id":"1043"},"view":{"id":"1046"}},"id":"1045","type":"GlyphRenderer"},{"attributes":{"tools":[{"id":"1021"},{"id":"1022"},{"id":"1023"},{"id":"1024"},{"id":"1025"},{"id":"1026"}]},"id":"1028","type":"Toolbar"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1049","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1046","type":"CDSView"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1050","type":"Line"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1048","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1088","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1048"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1050"},"nonselection_glyph":{"id":"1049"},"view":{"id":"1052"}},"id":"1051","type":"GlyphRenderer"},{"attributes":{"source":{"id":"1002"}},"id":"1040","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1087","type":"Line"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1169"},"group":null,"major_label_policy":{"id":"1170"},"major_label_text_font_size":"12pt","ticker":{"id":"1065"}},"id":"1064","type":"LinearAxis"},{"attributes":{"source":{"id":"1002"}},"id":"1052","type":"CDSView"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1117","type":"CustomJS"},{"attributes":{"coordinates":null,"dimension":"height","group":null,"line_color":"blue","line_dash":[6],"line_width":3,"location":0.1},"id":"1053","type":"Span"},{"attributes":{"end":1.05},"id":"1054","type":"Range1d"},{"attributes":{"args":{"BTClocation":{"id":"1053"},"Lcube1":[[0.02837317226966152],[0.48804970316404045],[0.4226584068174604],[0.8740640696918491],[0.016448465726377953],[0.9561137124983676],[0.9974043701737328],[0.4983933473062265],[0.8604028062816473],[0.5565706765795937],[0.21564873831173434],[0.8267225305474448],[0.8498547573449428],[0.5607742238009576],[0.2894323087252346],[0.7294203849401382],[0.4773655562687376],[0.6229351289703148],[0.4414184657503798],[0.6805348596573553],[0.7974538325275783],[0.06478316471327399],[0.9481817485252132],[0.5212525141539427],[0.24697169247771167],[0.7549992589903282],[0.2594166435941194],[0.3013206551377121],[0.5334454259403286],[0.706136913371982],[0.7610006775198639],[0.19220585410708932],[0.5986593284508765],[0.16849878263290222],[0.8322579747005243],[0.1490473873950215],[0.1807696829195348],[0.6450982021246539],[0.9717173416388463],[0.6353660290356844],[0.17392838020358614],[0.12060992806460975],[0.6652054585447662],[0.9611461870821613],[0.9080716703782279],[0.4353783492183764],[0.5026909217299785],[0.4526063392445204],[0.4173387231322767],[0.37543765110637894],[0.2901472119839513],[0.22700886105772036],[0.330768809912803],[0.0028589551219334107],[0.3654357760922579],[0.6007198032073239],[0.3861498048508023],[0.9340642144229632],[0.540283884801656],[0.9177540497391098],[0.7317593021281718],[0.07634181479305903],[0.7147847906773991],[0.15807003584778273],[0.3230033145722274],[0.746625935471582],[0.11032482172690018],[0.23135356428785386],[0.7709046444966272],[0.3143806496035961],[0.04284970510154583],[0.4065109313334886],[0.34964146746827757],[0.13184396895880882],[0.5761745326927263],[0.8005926511336093],[0.8881054974778704],[0.6193553714752392],[0.055009354056693945],[0.2727482092511966],[0.2005768400361737],[0.8529158504823517],[0.9287910423946285],[0.8188871013957578],[0.6781885320674556],[0.5861426087611515],[0.09877914310679542],[0.10014834578103861],[0.9892103049133251],[0.6953787348319671],[0.655413011291132],[0.0381817092911392],[0.35762372061443365],[0.3929915289500123],[0.7872463167628109],[0.46292807677642694],[0.8983137661913737],[0.08547006607659588],[0.2613746510527141],[0.5197155043400352]],"Lcube2":[[0.19614278771503613],[0.10577457925098561],[0.6408231834226403],[0.22545678478321693],[0.8352326388273922],[0.2896826650064139],[0.4988140432592331],[0.9887711153153088],[0.00019935384587293825],[0.29859595208539175],[0.5871398704383626],[0.1555842081138111],[0.754255260176365],[0.3860370219414542],[0.5754091511025974],[0.3925396101160784],[0.16051294296091098],[0.7982513838530982],[0.4734632368706334],[0.6157288016148388],[0.8416273424395908],[0.6690557494115968],[0.6576233682396316],[0.9941959740455489],[0.8283246835981934],[0.7692794221892235],[0.4512703135917741],[0.9682549868009928],[0.2763760392587323],[0.7450360317454124],[0.7025982677527871],[0.9531733288963359],[0.025339908201521794],[0.8751406542330747],[0.25863835336972235],[0.9080521571933907],[0.4426868102053153],[0.12479692347498908],[0.593927225403232],[0.1724001185757076],[0.41839043573328316],[0.21806051519088046],[0.3590877314086701],[0.4234516934150588],[0.07095993558695425],[0.18110025183963618],[0.8569998196580518],[0.923026527261042],[0.11513397816761235],[0.6078746578650281],[0.4644703538689788],[0.3438818663471369],[0.5522048591263375],[0.6908001000168924],[0.506613714966847],[0.23616210041759295],[0.9364383221602679],[0.06251575549168134],[0.43558148273593583],[0.7765527612723873],[0.6313738462219],[0.5122292619232708],[0.30030968694322546],[0.32272563085320377],[0.7374879976868854],[0.8857793531042789],[0.867128842410753],[0.5301137771134913],[0.361979639450385],[0.5268643273568601],[0.8002571745945359],[0.5653099080708501],[0.6298274990596185],[0.24046482674343037],[0.9199183495230563],[0.8950723570995396],[0.7825873926543088],[0.015086411029020797],[0.20549898632755087],[0.08439871718447212],[0.3161538487955308],[0.3350881084598504],[0.400688475505841],[0.036272364511241856],[0.7156038729898087],[0.0908986059068336],[0.7223518608584074],[0.6874269674775525],[0.9771553293634584],[0.37379860569348694],[0.9437816456012748],[0.05501799113971724],[0.4834835661336696],[0.6712607276718446],[0.1498433516738611],[0.2664918603577438],[0.5403460225247163],[0.041110008764744646],[0.8178354097204337],[0.1388927019189739]],"col_len_sl":{"id":"1099"},"col_rad_sl":{"id":"1101"},"disp_sl":{"id":"1103"},"flow_sl":{"id":"1107"},"pore_vol_sl":{"id":"1095"},"poros_sl":{"id":"1109"},"pulse_inj_sl":{"id":"1097"},"rbgr":{"id":"1112"},"reac_sl":{"id":"1105"},"source1":{"id":"1002"},"source2":{"id":"1003"},"xBTC_sl":{"id":"1111"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var tau = []\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        c[i] = 1\\n        cmin[i] = 1\\n        cmax[i] = 1\\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg == 1  &amp;&amp; t&gt;t_inj) {\\n              // Pulse injection\\n              if (t&lt;t_inj) {\\n                tau = 0\\n              } else {\\n                tau = t_inj\\n              }\\n              intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-tau))/math.sqrt(4*D_intermed*(t-tau)))));\\n            } else {\\n              // Cotinuous injection\\n              intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n            }\\n          }\\n        c[i]    = math.mean(intlist)\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n    }\\n  }\\n  return [c, cmin, cmax]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D) {\\n  const c = []\\n  var tau = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg==1 &amp;&amp; tsp[i] &gt; t_inj){\\n        // Pulse injection |this produces negative values in the begining\\n        if (tsp[i]&lt;t_inj) {\\n          tau = 0\\n        } else {\\n          tau = t_inj\\n        }\\n        c[i] = 1/2 * ((1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel*(tsp[i]-tau))/math.sqrt(4*D*(tsp[i]-tau)))));\\n      } else {\\n        // Continuous injection\\n        c[i] = 1/2 * Math.exp(xBTC*vel/(2*D))*(Math.exp((-xBTC)*vel*gam/(2*D))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i])))+math.exp(xBTC*vel*gam/(2*D))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i]))));\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(reac,Dis,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)\\n  return res\\n}\\n\\nfunction transport_num(c,disp,dx,dt){\\n  // This function approximates advection and dispersion numerically by a FVM\\n\\n  // Move concentration by 1 cell\\n  for (let i = 0; i &lt; c.length-1; i++) {\\n    c[i+1] = c[i]\\n  }\\n  // First cell gets inlet concentration\\n  c[1] = 1\\n  var Jd = []\\n  // Dispersive fluxes between cells\\n  for (let i = 0; i &lt; c.length+1; i++) {\\n    if (i == 0) {\\n      Jd[i] = 0\\n    } else if (i == c.length) {\\n      Jd[i] = Jd[i-1]\\n    } else {\\n      Jd[i] = (c[i-1] - c[i])/dx*disp\\n    }\\n  }\\n\\n  for (let i = 0; i &lt; Jd.length-1; i++) {\\n    c[i] = c[i] + dt/dx * (Jd[i] - Jd[i+1])\\n  }\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\n\\n// Extracting slider values\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst xBTC      = xBTC_sl.value;                    // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nconst rg        = rbgr.active                       // [false]\\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cBTX = []\\nvar tsp = []\\n\\nconst c0      = 1;                            // [-]\\nconst reac    = (reac_l + reac_h)/2           // [1/s]\\nconst Dis     = (disp_l + disp_h)/2           // [m2/s]\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel * n                       // [m/s]   \\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = PS / (A*vel)                  // [s] VEL oder SEP_VEL?\\nconst t       = tPV * PV                      // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)  \\n\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\nconsole.log(tsp)\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax] = getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,Dis) \\n}\\n\\n    \\n// We have to loop through all indicies\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n}\\n\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nxBTC_sl.end       = col_len_sl.value;\\nBTClocation.location = xBTC\\n\\nif (rg==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\n\\nconsole.log(x2,y2)\\nconsole.log(x,y)\\n\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1113","type":"CustomJS"},{"attributes":{"below":[{"id":"1064"}],"center":[{"id":"1067"},{"id":"1071"}],"left":[{"id":"1068"}],"min_height":400,"renderers":[{"id":"1090"}],"sizing_mode":"stretch_both","title":{"id":"1163"},"toolbar":{"id":"1079"},"x_range":{"id":"1093"},"x_scale":{"id":"1060"},"y_range":{"id":"1092"},"y_scale":{"id":"1062"}},"id":"1055","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1125","type":"BasicTickFormatter"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1117"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1116","type":"Button"},{"attributes":{},"id":"1126","type":"AllLabels"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1113"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1112","type":"RadioButtonGroup"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1094","type":"FuncTickFormatter"},{"attributes":{},"id":"1062","type":"LinearScale"},{"attributes":{},"id":"1128","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"1114"},{"id":"1116"}],"sizing_mode":"stretch_width"},"id":"1119","type":"Column"},{"attributes":{},"id":"1146","type":"UnionRenderers"},{"attributes":{},"id":"1065","type":"BasicTicker"},{"attributes":{"axis":{"id":"1064"},"coordinates":null,"group":null,"ticker":null},"id":"1067","type":"Grid"},{"attributes":{},"id":"1129","type":"AllLabels"},{"attributes":{},"id":"1073","type":"WheelZoomTool"},{"attributes":{},"id":"1147","type":"Selection"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1166"},"group":null,"major_label_policy":{"id":"1167"},"major_label_text_font_size":"12pt","ticker":{"id":"1069"}},"id":"1068","type":"LinearAxis"},{"attributes":{"axis":{"id":"1068"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1071","type":"Grid"},{"attributes":{},"id":"1069","type":"BasicTicker"},{"attributes":{"coordinates":null,"group":null},"id":"1122","type":"Title"},{"attributes":{},"id":"1077","type":"HelpTool"},{"attributes":{},"id":"1072","type":"PanTool"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1131"},"selection_policy":{"id":"1130"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"overlay":{"id":"1078"}},"id":"1074","type":"BoxZoomTool"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [1/h]&#x27;"},"id":"1104","type":"FuncTickFormatter"},{"attributes":{"end":8},"id":"1093","type":"Range1d"},{"attributes":{"coordinates":null,"group":null},"id":"1163","type":"Title"},{"attributes":{},"id":"1130","type":"UnionRenderers"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1078","type":"BoxAnnotation"},{"attributes":{},"id":"1131","type":"Selection"},{"attributes":{"end":0.2,"format":{"id":"1100"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1101","type":"Slider"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1115"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1114","type":"Button"},{"attributes":{},"id":"1075","type":"SaveTool"}],"root_ids":["1004","1118","1055","1119"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"91f4b81c-338d-4f22-8d3f-f5a4a5d4d4e1","root_ids":["1004","1118","1055","1119"],"roots":{"1004":"ac041720-67bc-4582-af50-83c1803f5b9a","1055":"09897668-1674-42fb-b107-8f768ca6ee5b","1118":"0c07f05a-650f-439b-8c13-a9e2042fab06","1119":"20771e34-cdcd-4240-8b1a-2ed5dd22d8bf"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();