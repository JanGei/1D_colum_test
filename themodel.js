    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"fedb8179-f402-48d2-895c-5ec65cb15040":{"defs":[],"roots":{"references":[{"attributes":{"args":{"BTCp":{"id":"1129"},"D_dict":{"m2/d":{"id":"1015"},"m2/h":{"id":"1014"},"m2/min":{"id":"1013"},"m2/s":{"id":"1012"}},"D_us":{"id":"1006"},"Kd_sl":{"id":"1186"},"Lcube1":[[0.818960417669417],[0.8727969253414578],[0.8801182946932171],[0.3556435924745228],[0.3064976481523979],[0.32002880706132003],[0.7962307819218212],[0.4407693174190228],[0.4708749467160406],[0.4694764844070592],[0.22120782233213582],[0.16179692032159437],[0.36496819906885747],[0.42465228508001274],[0.7848524481163781],[0.6527935885418421],[0.19926805675024975],[0.11125699146578903],[0.05572948814044093],[0.8022434906059995],[0.29246734762078586],[0.26297871117114796],[0.45553368893777657],[0.021068941026244875],[0.4118510711199976],[0.6727055564266249],[0.7213655874800706],[0.3935330590258102],[0.03661313885519198],[0.1270532545371037],[0.01941138789856795],[0.1827341949657227],[0.853207876742989],[0.13217812086764413],[0.7758646121243195],[0.8359271838648524],[0.9194276582279778],[0.08555595777790494],[0.5629953265706448],[0.5275285450722237],[0.4993642806834508],[0.8290729819398917],[0.8461934991408213],[0.20239204390844054],[0.48972585384027356],[0.047780859100269434],[0.5512474759840661],[0.8957365305080424],[0.9308462615451443],[0.07159466262630199],[0.954557227299857],[0.6633447464353884],[0.9895192578476262],[0.9004285669853195],[0.7561896741766063],[0.765249509693432],[0.435346641137701],[0.287732526320822],[0.5801899483884823],[0.31936521879224605],[0.10622269150863328],[0.5719791962177496],[0.2481362222890519],[0.9760200914579212],[0.9981179329260819],[0.2569553121691516],[0.2714913077321377],[0.9458759752384114],[0.3774310859218632],[0.1722267954323662],[0.639253253711556],[0.6285463447129778],[0.3466062953855281],[0.6155826065893198],[0.7055933293730622],[0.006399788732917304],[0.7380211250063242],[0.5054295794311723],[0.06457267101178071],[0.8628355015421016],[0.3395601049167839],[0.7101062242461782],[0.14598617973263722],[0.5974714238801551],[0.09808099128775506],[0.64494015039679],[0.5407969190917443],[0.23076350308042293],[0.5127000667632889],[0.15224315029077579],[0.6835065299564935],[0.6069666630370637],[0.9298710352060585],[0.747675353109614],[0.4066045895221657],[0.5344559202639515],[0.6916102210448969],[0.21150594891456267],[0.9631584593575621],[0.38137672995726296]],"Lcube2":[[0.28246552018162824],[0.3457484458562699],[0.039301215330561926],[0.5853639689198817],[0.10402534702168742],[0.05881856358951146],[0.17870696659914537],[0.9174626915362067],[0.7900225854062363],[0.4612462881335923],[0.1463947631415975],[0.9679086881656882],[0.04942282741011215],[0.2719414013727706],[0.3880507721421339],[0.0824761302217966],[0.9975908063730904],[0.8201518739005133],[0.8539970969536448],[0.5305252802010147],[0.7301925056172389],[0.23486712352566944],[0.8099120695039117],[0.7791201103173025],[0.09483637838269794],[0.47757146682290647],[0.8751519519993981],[0.7523487634992684],[0.7002165603687406],[0.15423995331104995],[0.5180336042525809],[0.30683358026607893],[0.9085171750479702],[0.11813288115179889],[0.35990411895590163],[0.31513296811736685],[0.7122614575945141],[0.8805221621875446],[0.54484257745487],[0.36152231884027564],[0.40603379076845814],[0.0007940482895525691],[0.8451369773772793],[0.7830837048561734],[0.9793658356200515],[0.26051228503709484],[0.19744370530161337],[0.7205525459130496],[0.9302345639280566],[0.12052440010010271],[0.02970554607514256],[0.16879589075515117],[0.8926381496145513],[0.6905510893345916],[0.5977762645842066],[0.5535877531971579],[0.6831607266381893],[0.13518635892851968],[0.4827026637953422],[0.7692546790057925],[0.2403313760567662],[0.9539872122359954],[0.41316035386684774],[0.2961463822105556],[0.6279850892875823],[0.5283910389578346],[0.5049384180674394],[0.6455001684583428],[0.21652249662084264],[0.3771115400232694],[0.5623709958951392],[0.013369554756114272],[0.5772412153956288],[0.06070662742813995],[0.2521030057611662],[0.22673552285960796],[0.9270296405479996],[0.18454509662762117],[0.6637003888508854],[0.43357749633175274],[0.6386012879063303],[0.9407749343381825],[0.397572199006232],[0.4487131930331877],[0.4573658817360068],[0.3289518674053085],[0.6517011125699171],[0.7483260769401293],[0.6105192498427665],[0.4220059144144504],[0.49519510935210886],[0.8182393621410735],[0.6759714445929018],[0.6023122502184606],[0.20069323486186602],[0.8651099009198507],[0.8310742449784169],[0.07379094851085882],[0.33806099114329635],[0.9877938203454667]],"col_len_sl":{"id":"1175"},"col_rad_sl":{"id":"1177"},"disp_sl":{"id":"1178"},"fl_dict":{"L/h":{"id":"1017"},"m3/s":{"id":"1016"},"mL/h":{"id":"1019"},"mL/min":{"id":"1018"}},"fl_us":{"id":"1007"},"flow_sl":{"id":"1180"},"pore_vol_sl":{"id":"1171"},"poros_sl":{"id":"1182"},"pulse_inj_sl":{"id":"1173"},"r_dict":{"1/d":{"id":"1011"},"1/h":{"id":"1010"},"1/min":{"id":"1009"},"1/s":{"id":"1008"}},"r_us":{"id":"1005"},"reac_sl":{"id":"1179"},"rg_CP":{"id":"1187"},"rg_ST":{"id":"1188"},"rho_s_sl":{"id":"1184"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"// Function: Compute concentration in column\\nfunction getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean) {\\n  // Initializing empty concentration lists\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var cloQ = []\\n  var cupQ = []\\n\\n  // Seepage velocity\\n  var vel_r = vel/Ret\\n\\n  // Variables needed, if Ogata-Banks (1962) solution is used\\n  //var r_mean = (reac_l+reac_h)/2/Ret\\n  //var D_mean = (disp_l+disp_h)/2/Ret\\n  //var H_mean = 2*r_mean*D_mean/vel_r**2\\n  //var gam_mean = get_gamma(r_mean,D_mean,vel)\\n\\n  for (let i = 0; i &lt; x.length; i++) { \\n      // \\"Behind\\" the column: concentration is either 1 or 0, depending on injction time\\n      if (x[i] &lt;= 0) {\\n        if (rg_CP == 1 &amp;&amp; t &gt; t_inj) {\\n          c[i] = 0\\n          cmin[i] = 0\\n          cmax[i] = 0\\n        } else {\\n          c[i] = 1\\n          cmin[i] = 1\\n          cmax[i] = 1\\n        }\\n\\n      // \\"In\\" the column\\n      } else {\\n        // Intermediate list to store all solutions of the latin hypercube\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            // Computing values associated to the latin hypercube\\n            var r_intermed = (reac_l + (reac_h-reac_l)*Lcube1[j])/Ret\\n            var D_intermed = (disp_l + (disp_h-disp_l)*Lcube2[j])/Ret\\n            var H_intermed = 2*r_intermed*D_intermed/vel_r**2\\n\\n            // Variable needed, if Ogata-Banks (1962) solution is used\\n            // var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n\\n            // Checking for pulse injection\\n            if (rg_CP == 1) {\\n              // Pulse injection\\n              if (t&lt;=t_inj) {\\n                // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * (math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))))\\n                // Ogata-Banks (1962) \\n                // intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n              } else {\\n                // Runkler (1996, Eq. 10, O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * math.exp(-r_intermed*x[i]/vel_r) * ( (1-math.erf((x[i]-vel_r*t*(1+H_intermed))/(2*math.sqrt(D_intermed*t)))) - (1-math.erf((x[i]-vel_r*(t-t_inj)*(1+H_intermed))/(2*math.sqrt(D_intermed*(t-t_inj))))))\\n                // Ogata-Banks (1962) \\n                //intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n              }\\n            } else {\\n              // Cotinuous injection\\n              // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n              intlist[j] = 1/2 * (math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))))\\n              // Ogata-Banks (1962) \\n              //intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n            }\\n          }\\n        \\n        // Obtain median, min, max, upper and lower quartile from intermediate list\\n        c[i]    = math.median(intlist)\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n        cloQ[i] = math.quantileSeq(intlist, 0.25)\\n        cupQ[i] = math.quantileSeq(intlist, 0.75)\\n    }\\n  }\\n  return [c, cmin, cmax, cloQ, cupQ]\\n}\\n\\n// Function: Breakthrough Curve (BTC)\\nfunction getc_BTC(xBTC,vel,tsp,t_inj,D_mean,r_mean,H_mean,Ret) {\\n  // Initializing empty concentration list\\n  const c = []\\n\\n  // Seepage velocity\\n  var vel_r = vel/Ret\\n\\n  // Variables needed, if Ogata-Banks (1962) solution is used\\n  //const gam     = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2) \\n\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n\\n      // Pulse injection \\n      if (rg_CP==1){\\n\\n        if (tsp[i]&lt;=t_inj) {\\n          // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n          c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))))\\n          // Ogata-Banks (1962) \\n          //c[i] = 1/2 * (1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n        } else {\\n          // Runkler (1996, Eq. 10, O&#x27;Loughlin and Bowmer)\\n          c[i] = 1/2 * math.exp(-r_mean*xBTC/vel_r) * ( (1-math.erf((xBTC-vel_r*tsp[i]*(1+H_mean))/(2*math.sqrt(D_mean*tsp[i])))) - (1-math.erf((xBTC-vel_r*(tsp[i]-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(tsp[i]-t_inj))))) )\\n          // Ogata-Banks (1962) \\n          //c[i] = 1/2 * ((1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel_r*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n        }\\n\\n      // Continuous injection\\n      } else {\\n        // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n        c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))))\\n        // Ogata-Banks (1962) \\n        //c[i] = 1/2 * Math.exp(xBTC*vel_r/(2*D_mean))*(Math.exp((-xBTC)*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC-vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i])))+math.exp(xBTC*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC+vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i]))));\\n        }\\n  }\\n  return c\\n}\\n\\n// Function: Obtain gamma for Ogata-Banks solution\\nfunction get_gamma(r_mean,D_mean,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2)\\n  return res\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar yloQ= source1.data[&#x27;yloQ&#x27;]\\nvar yupQ= source1.data[&#x27;yupQ&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n\\n// Extracting values from callback\\n// For variable identification, refer to file 1D_column_test.py\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\nconst Kd        = Kd_sl.value                       // [m3/kg]\\nconst rho_s     = rho_s_sl.value                    // [kg/m3]\\n\\n// Derived values\\nconst A       = math.PI * rad**2;             // [m2]   Area\\nconst vel     = Q/A;                          // [m/s]  Velocity\\nconst sep_vel = vel / n                       // [m/s]  Seepage velocity\\nconst r_mean  = (reac_l+reac_h)/2             // [1/s]  1st order reaction constant\\nconst D_mean  = (disp_l+disp_h)/2             // [m2/s] Dispersion coefficient\\nconst H_mean  = 2*r_mean*D_mean/sep_vel**2    // [m/s]  Variable for Ogata-Banks\\nconst r_med   = reac_l+(reac_h-reac_l)*math.median(Lcube1)   // [1/s]  Median 1st order reaction constant\\nconst D_med   = disp_l+(disp_h-disp_l)*math.median(Lcube2)   // [m2/s] Median Dispersion coefficient\\nconst H_med   = 2*r_med*D_med/sep_vel**2      // [m/s]  Median Variable for Ogata-Banks\\nconst PS      = col_len * A * n               // [m3]   Pore space\\nconst PV      = col_len/sep_vel               // [s]    Time equivalent for one pore volume\\nconst c0      = 1;                            // [-]    Normed inlet concentration\\n\\n// Retardation factor\\nif (rg_SType == 0) {\\n  var Ret = 1\\n} else {\\n  var Ret = 1 + (1-n)/n * Kd * rho_s\\n}\\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\n// Compute time equivalent of selected pore volume \\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t         = tPV * PV                          // [s]\\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cloQ = []\\nvar cupQ = []\\nvar cBTX = []\\n\\n// This if statement has no meaning besides preventing a Type Error\\nif (1&lt;2){ \\n  [c, cmin, cmax, cloQ, cupQ] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,t_inj,D_mean,r_mean,H_mean,Ret) \\n}\\n\\n\\n// Updating sources\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n  yloQ[i] = cloQ[i]\\n  yupQ[i] = cupQ[i]\\n}\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Updating Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27; m (Drag diamond in upper plot to change)&#x27;\\n\\n// Displaying correct sliders\\nif (rg_CP==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\nif (rg_SType == 1) {\\n  rho_s_sl.visible = true\\n  Kd_sl.visible = true\\n} else {\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n}\\n\\n// Displaying correct units\\nvar r_format  = r_dict[r_us.value]\\nvar D_format  = D_dict[D_us.value]\\nvar fl_format = fl_dict[fl_us.value]\\nreac_sl.format = r_format\\ndisp_sl.format = D_format\\nflow_sl.format = fl_format\\n\\nreac_sl.format.change.emit();\\ndisp_sl.format.change.emit();\\nflow_sl.format.change.emit();\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1189","type":"CustomJS"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[201]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[201]},"yloQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[201]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[201]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[201]},"yupQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[201]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{"source":{"id":"1002"}},"id":"1062","type":"CDSView"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1191"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1190","type":"Button"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1059","type":"Line"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1193"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1192","type":"Button"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1191","type":"CustomJS"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAADQ2aQLiqw9PlpqxC0U9Sw/c9KrgsLAfD+TFufri4CjP5g4Hlwx7bk/qEH0AhYdyD+B9rPf8k3SP3pLNnbngtg/O9T6lr873j+C16WP6qDhPybXGOAUw+M/vxuA11OI5T+xmA2nQfrmP+I7E4iIJOg/1lLQwN8S6T8A19G1CNDpPxKcRRJkZeo/GUQ+mdva6j+7LJdZ9zbrP4AXdiYGf+s//8Go50u36z9TvL7ALuPrP2hHEMhfBew/QYxPHP4f7D+KOD5CtDTsP33M4T3QROw/JAqkEldR7D8dseBhFFvsP0rJWNWmYuw/eNhC74lo7D99jvvCHW3sPxcIMgOtcOw/t69tvnFz7D9CQ5ERmXXsP2I8kglGd+w/T47F4ZN47D/Jeo7Cl3nsP8E7kBxieuw/+Epqtv967D90sjV+envsPy+mLyzae+w/disFwSR87D8mDuHnXnzsP+yXjUKMfOw/S0KSpK987D88nRxBy3zsPxpEqc7gfOw/ACW4ovF87D8IvVPH/nzsP8jKzAsJfew/nL68ERF97D8aviNXF33sP41nRz4cfew/PYzSEyB97D9tbJkTI33sP5fCT2wlfew/RKlsQid97D8dA2uyKH3sPyCnitIpfew/MoEutCp97D+Hku1kK33sP8TeZ+8rfew/eIrsWyx97D9CfvuwLH3sPxKZqvMsfew/XrT0Jy197D8eW/dQLX3sP5cAI3Etfew/yK1gii197D+xdC+eLX3sP/h2u60tfew/0ufvuS197D8PIoXDLX3sP5CtC8stfew/dt/00C197D+fmpnVLX3sPw+ZP9ktfew/3I8d3C197D9zbV7eLX3sPxTkI+Atfew/omeI4S197D8vvaDiLX3sPz00feMtfew/cJwq5C197D8iBrPkLX3sP5hZHuUtfew/hs1y5S197D8mRLXlLX3sPzuU6eUtfew/bMIS5i197D9ALjPmLX3sP4C1TOYtfew/9c9g5i197D9EpXDmLX3sP/wdfeYtfew/I/GG5i197D+/ro7mLX3sPyzIlOYtfew/pJaZ5i197D9sYJ3mLX3sP9FcoOYtfew/Zrei5i197D93kqTmLX3sPwgJpuYtfew/ZjCn5i197D9WGajmLX3sPw3RqOYtfew/+GGp5i197D9J1KnmLX3sP3guquYtfew/o3Wq5i197D/IrarmLX3sPxfaquYtfew/EP2q5i197D+qGKvmLX3sP3Quq+Ytfew/pz+r5i197D87TavmLX3sP/NXq+Ytfew/amCr5i197D8aZ6vmLX3sP2Fsq+Ytfew/jnCr5i197D/Zc6vmLX3sP3N2q+Ytfew/gXir5i197D8geqvmLX3sP2l7q+Ytfew/bHyr5i197D85favmLX3sP9t9q+Ytfew/XX6r5i197D/AfqvmLX3sPxB/q+Ytfew/UX+r5i197D+Cf6vmLX3sP6p/q+Ytfew/yH+r5i197D/gf6vmLX3sP/V/q+Ytfew/BICr5i197D8RgKvmLX3sPxuAq+Ytfew/IoCr5i197D8pgKvmLX3sPy6Aq+Ytfew/MICr5i197D80gKvmLX3sPzaAq+Ytfew/N4Cr5i197D86gKvmLX3sPzuAq+Ytfew/PICr5i197D89gKvmLX3sPz2Aq+Ytfew/PYCr5i197D8+gKvmLX3sPz6Aq+Ytfew/PoCr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sP0CAq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1212"},"selection_policy":{"id":"1211"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1163","type":"Line"},{"attributes":{"children":[{"id":"1005"},{"id":"1006"},{"id":"1007"},{"id":"1190"},{"id":"1192"}],"sizing_mode":"stretch_width"},"id":"1195","type":"Column"},{"attributes":{"source":{"id":"1002"}},"id":"1105","type":"CDSView"},{"attributes":{"end":1.05,"start":-0.03},"id":"1106","type":"Range1d"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1102","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1101"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1103"},"nonselection_glyph":{"id":"1102"},"view":{"id":"1105"}},"id":"1104","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1103","type":"Line"},{"attributes":{"num_objects":1,"renderers":[{"id":"1111"}]},"id":"1113","type":"PointDrawTool"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1108","type":"Scatter"},{"attributes":{"children":[{"id":"1187"},{"id":"1188"},{"id":"1171"},{"id":"1175"},{"id":"1177"},{"id":"1179"},{"id":"1178"},{"id":"1180"},{"id":"1182"},{"id":"1173"},{"id":"1184"},{"id":"1186"}],"sizing_mode":"stretch_width"},"id":"1194","type":"Column"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1109","type":"Scatter"},{"attributes":{},"id":"1215","type":"BasicTickFormatter"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1108"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1110"},"nonselection_glyph":{"id":"1109"},"view":{"id":"1112"}},"id":"1111","type":"GlyphRenderer"},{"attributes":{"source":{"id":"1004"}},"id":"1112","type":"CDSView"},{"attributes":{"source":{"id":"1002"}},"id":"1056","type":"CDSView"},{"attributes":{},"id":"1216","type":"AllLabels"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1218"},"group":null,"major_label_policy":{"id":"1219"},"major_label_text_font_size":"12pt","ticker":{"id":"1139"}},"id":"1138","type":"LinearAxis"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1110","type":"Scatter"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1162","type":"Line"},{"attributes":{},"id":"1218","type":"BasicTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1161","type":"Line"},{"attributes":{"tools":[{"id":"1146"},{"id":"1147"},{"id":"1148"},{"id":"1149"},{"id":"1150"},{"id":"1151"}]},"id":"1153","type":"Toolbar"},{"attributes":{},"id":"1219","type":"AllLabels"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1174","type":"FuncTickFormatter"},{"attributes":{"end":1.05},"id":"1166","type":"Range1d"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1168","type":"Title"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1176","type":"FuncTickFormatter"},{"attributes":{"end":2.302585092994046,"format":{"id":"1170"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.009210340371976183,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1171","type":"Slider"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{},"id":"1212","type":"Selection"},{"attributes":{},"id":"1211","type":"UnionRenderers"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{},"id":"1125","type":"UnionRenderers"},{"attributes":{},"id":"1126","type":"Selection"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1058","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1077"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1079"},"nonselection_glyph":{"id":"1078"},"view":{"id":"1081"}},"id":"1080","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1058"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1060"},"nonselection_glyph":{"id":"1059"},"view":{"id":"1062"}},"id":"1061","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"group":null,"items":[{"id":"1075"},{"id":"1099"}]},"id":"1074","type":"Legend"},{"attributes":{"below":[{"id":"1138"}],"center":[{"id":"1141"},{"id":"1145"}],"left":[{"id":"1142"}],"min_height":400,"renderers":[{"id":"1164"}],"sizing_mode":"stretch_both","title":{"id":"1168"},"toolbar":{"id":"1153"},"x_range":{"id":"1167"},"x_scale":{"id":"1134"},"y_range":{"id":"1166"},"y_scale":{"id":"1136"}},"id":"1129","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1134","type":"LinearScale"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1126"},"selection_policy":{"id":"1125"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["1/s","1/min","1/h","1/d"],"sizing_mode":"stretch_width","title":"Reaction Unit:","value":"1/h"},"id":"1005","type":"Select"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1170","type":"FuncTickFormatter"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [m2/s]&#x27;"},"id":"1012","type":"FuncTickFormatter"},{"attributes":{},"id":"1136","type":"LinearScale"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["m2/s","m2/min","m2/h","m2/d"],"sizing_mode":"stretch_width","title":"Dispersion Unit:","value":"m2/h"},"id":"1006","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [1/s]&#x27;"},"id":"1008","type":"FuncTickFormatter"},{"attributes":{},"id":"1139","type":"BasicTicker"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [1/d]&#x27;"},"id":"1011","type":"FuncTickFormatter"},{"attributes":{"axis":{"id":"1138"},"coordinates":null,"group":null,"ticker":null},"id":"1141","type":"Grid"},{"attributes":{},"id":"1147","type":"WheelZoomTool"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["mL/min","m3/s","mL/h","L/h"],"sizing_mode":"stretch_width","title":"Flow Rate Unit:","value":"mL/h"},"id":"1007","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [1/min]&#x27;"},"id":"1009","type":"FuncTickFormatter"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1215"},"group":null,"major_label_policy":{"id":"1216"},"major_label_text_font_size":"12pt","ticker":{"id":"1143"}},"id":"1142","type":"LinearAxis"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1030"}},"id":"1029","type":"LinearAxis"},{"attributes":{"axis":{"id":"1142"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1145","type":"Grid"},{"attributes":{},"id":"1143","type":"BasicTicker"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [m2/min]&#x27;"},"id":"1013","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1053","type":"Line"},{"attributes":{},"id":"1151","type":"HelpTool"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [1/h]&#x27;"},"id":"1010","type":"FuncTickFormatter"},{"attributes":{},"id":"1146","type":"PanTool"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [m2/h]&#x27;"},"id":"1014","type":"FuncTickFormatter"},{"attributes":{"overlay":{"id":"1152"}},"id":"1148","type":"BoxZoomTool"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [m2/d]&#x27;"},"id":"1015","type":"FuncTickFormatter"},{"attributes":{},"id":"1149","type":"SaveTool"},{"attributes":{"code":"  return (tick/3600/1000/1000).toExponential(2)+&#x27; [m3/s]&#x27;"},"id":"1016","type":"FuncTickFormatter"},{"attributes":{},"id":"1150","type":"ResetTool"},{"attributes":{"code":"  return (tick/1000).toFixed(4)+&#x27; [L/h]&#x27;"},"id":"1017","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick/60).toFixed(2)+&#x27; [mL/min]&#x27;"},"id":"1018","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick).toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1019","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1052","type":"Line"},{"attributes":{"below":[{"id":"1029"}],"center":[{"id":"1032"},{"id":"1036"},{"id":"1074"}],"js_event_callbacks":{"pan":[{"id":"1189"}],"tap":[{"id":"1189"}]},"left":[{"id":"1033"}],"min_height":400,"renderers":[{"id":"1055"},{"id":"1061"},{"id":"1080"},{"id":"1086"},{"id":"1104"},{"id":"1111"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1044"},"x_range":{"id":"1021"},"x_scale":{"id":"1025"},"y_range":{"id":"1106"},"y_scale":{"id":"1027"}},"id":"1020","subtype":"Figure","type":"Plot"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1152","type":"BoxAnnotation"},{"attributes":{},"id":"1021","type":"DataRange1d"},{"attributes":{"source":{"id":"1003"}},"id":"1165","type":"CDSView"},{"attributes":{},"id":"1025","type":"LinearScale"},{"attributes":{"end":10.000000000000002},"id":"1167","type":"Range1d"},{"attributes":{},"id":"1027","type":"LinearScale"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1161"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1163"},"nonselection_glyph":{"id":"1162"},"view":{"id":"1165"}},"id":"1164","type":"GlyphRenderer"},{"attributes":{},"id":"1030","type":"BasicTicker"},{"attributes":{"axis":{"id":"1029"},"coordinates":null,"group":null,"ticker":null},"id":"1032","type":"Grid"},{"attributes":{},"id":"1038","type":"WheelZoomTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1034"}},"id":"1033","type":"LinearAxis"},{"attributes":{"axis":{"id":"1033"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1036","type":"Grid"},{"attributes":{"label":{"value":"lower / upper Quartile"},"renderers":[{"id":"1061"}]},"id":"1075","type":"LegendItem"},{"attributes":{},"id":"1034","type":"BasicTicker"},{"attributes":{"end":360000,"format":{"id":"1172"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1173","type":"Slider"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1077","type":"Line"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1172","type":"FuncTickFormatter"},{"attributes":{},"id":"1042","type":"HelpTool"},{"attributes":{},"id":"1037","type":"PanTool"},{"attributes":{"end":0.5,"format":{"id":"1174"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1175","type":"Slider"},{"attributes":{"overlay":{"id":"1043"}},"id":"1039","type":"BoxZoomTool"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1078","type":"Line"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1014"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1178","type":"RangeSlider"},{"attributes":{},"id":"1040","type":"SaveTool"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1084","type":"Line"},{"attributes":{"end":0.2,"format":{"id":"1176"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1177","type":"Slider"},{"attributes":{},"id":"1041","type":"ResetTool"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1079","type":"Line"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1183","type":"FuncTickFormatter"},{"attributes":{"end":0.0,"format":{"id":"1010"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1179","type":"RangeSlider"},{"attributes":{"end":3000,"format":{"id":"1183"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1184","type":"Slider"},{"attributes":{"source":{"id":"1002"}},"id":"1081","type":"CDSView"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1185","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1083","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1087","type":"CDSView"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1043","type":"BoxAnnotation"},{"attributes":{"end":50,"format":{"id":"1019"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1180","type":"Slider"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1083"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1085"},"nonselection_glyph":{"id":"1084"},"view":{"id":"1087"}},"id":"1086","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1054","type":"Line"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1085","type":"Line"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1181","type":"FuncTickFormatter"},{"attributes":{"end":1,"format":{"id":"1181"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1182","type":"Slider"},{"attributes":{"active_multi":{"id":"1113"},"tools":[{"id":"1037"},{"id":"1038"},{"id":"1039"},{"id":"1040"},{"id":"1041"},{"id":"1042"},{"id":"1113"}]},"id":"1044","type":"Toolbar"},{"attributes":{"label":{"value":"Minimum / Maximum"},"renderers":[{"id":"1086"}]},"id":"1099","type":"LegendItem"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1187","type":"RadioButtonGroup"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["No Sorption","Linear Sorption"],"sizing_mode":"stretch_width"},"id":"1188","type":"RadioButtonGroup"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1101","type":"Line"},{"attributes":{"end":0.005,"format":{"id":"1185"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1186","type":"Slider"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1052"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1054"},"nonselection_glyph":{"id":"1053"},"view":{"id":"1056"}},"id":"1055","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1060","type":"Line"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1193","type":"CustomJS"}],"root_ids":["1020","1194","1129","1195"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"fedb8179-f402-48d2-895c-5ec65cb15040","root_ids":["1020","1194","1129","1195"],"roots":{"1020":"c24dce40-7347-47d6-90b8-c7aab02a2c77","1129":"552df4f8-12a3-4ffe-9e57-ef795906952f","1194":"3ac9248d-7c0f-4002-8db2-7e94166ff46c","1195":"0c82e111-9c87-46c7-bbd4-3d4be0901241"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();