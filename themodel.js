    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"bbacf6f7-a113-41fd-8c62-f42978bcd16b":{"defs":[],"roots":{"references":[{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1078","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1084","type":"Line"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1079","type":"Line"},{"attributes":{"source":{"id":"1003"}},"id":"1165","type":"CDSView"},{"attributes":{"source":{"id":"1002"}},"id":"1081","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1083","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1087","type":"CDSView"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1060","type":"Line"},{"attributes":{"end":1.05,"start":-0.03},"id":"1106","type":"Range1d"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1163","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1083"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1085"},"nonselection_glyph":{"id":"1084"},"view":{"id":"1087"}},"id":"1086","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1085","type":"Line"},{"attributes":{"label":{"value":"Minimum / Maximum"},"renderers":[{"id":"1086"}]},"id":"1099","type":"LegendItem"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAADQ2aQLiqw9PlpqxC0U9Sw/c9KrgsLAfD+TFufri4CjP5g4Hlwx7bk/qEH0AhYdyD+B9rPf8k3SP3pLNnbngtg/O9T6lr873j+C16WP6qDhPybXGOAUw+M/vxuA11OI5T+xmA2nQfrmP+I7E4iIJOg/1lLQwN8S6T8A19G1CNDpPxKcRRJkZeo/GUQ+mdva6j+7LJdZ9zbrP4AXdiYGf+s//8Go50u36z9TvL7ALuPrP2hHEMhfBew/QYxPHP4f7D+KOD5CtDTsP33M4T3QROw/JAqkEldR7D8dseBhFFvsP0rJWNWmYuw/eNhC74lo7D99jvvCHW3sPxcIMgOtcOw/t69tvnFz7D9CQ5ERmXXsP2I8kglGd+w/T47F4ZN47D/Jeo7Cl3nsP8E7kBxieuw/+Epqtv967D90sjV+envsPy+mLyzae+w/disFwSR87D8mDuHnXnzsP+yXjUKMfOw/S0KSpK987D88nRxBy3zsPxpEqc7gfOw/ACW4ovF87D8IvVPH/nzsP8jKzAsJfew/nL68ERF97D8aviNXF33sP41nRz4cfew/PYzSEyB97D9tbJkTI33sP5fCT2wlfew/RKlsQid97D8dA2uyKH3sPyCnitIpfew/MoEutCp97D+Hku1kK33sP8TeZ+8rfew/eIrsWyx97D9CfvuwLH3sPxKZqvMsfew/XrT0Jy197D8eW/dQLX3sP5cAI3Etfew/yK1gii197D+xdC+eLX3sP/h2u60tfew/0ufvuS197D8PIoXDLX3sP5CtC8stfew/dt/00C197D+fmpnVLX3sPw+ZP9ktfew/3I8d3C197D9zbV7eLX3sPxTkI+Atfew/omeI4S197D8vvaDiLX3sPz00feMtfew/cJwq5C197D8iBrPkLX3sP5hZHuUtfew/hs1y5S197D8mRLXlLX3sPzuU6eUtfew/bMIS5i197D9ALjPmLX3sP4C1TOYtfew/9c9g5i197D9EpXDmLX3sP/wdfeYtfew/I/GG5i197D+/ro7mLX3sPyzIlOYtfew/pJaZ5i197D9sYJ3mLX3sP9FcoOYtfew/Zrei5i197D93kqTmLX3sPwgJpuYtfew/ZjCn5i197D9WGajmLX3sPw3RqOYtfew/+GGp5i197D9J1KnmLX3sP3guquYtfew/o3Wq5i197D/IrarmLX3sPxfaquYtfew/EP2q5i197D+qGKvmLX3sP3Quq+Ytfew/pz+r5i197D87TavmLX3sP/NXq+Ytfew/amCr5i197D8aZ6vmLX3sP2Fsq+Ytfew/jnCr5i197D/Zc6vmLX3sP3N2q+Ytfew/gXir5i197D8geqvmLX3sP2l7q+Ytfew/bHyr5i197D85favmLX3sP9t9q+Ytfew/XX6r5i197D/AfqvmLX3sPxB/q+Ytfew/UX+r5i197D+Cf6vmLX3sP6p/q+Ytfew/yH+r5i197D/gf6vmLX3sP/V/q+Ytfew/BICr5i197D8RgKvmLX3sPxuAq+Ytfew/IoCr5i197D8pgKvmLX3sPy6Aq+Ytfew/MICr5i197D80gKvmLX3sPzaAq+Ytfew/N4Cr5i197D86gKvmLX3sPzuAq+Ytfew/PICr5i197D89gKvmLX3sPz2Aq+Ytfew/PYCr5i197D8+gKvmLX3sPz6Aq+Ytfew/PoCr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sP0CAq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1212"},"selection_policy":{"id":"1211"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1172","type":"FuncTickFormatter"},{"attributes":{"source":{"id":"1002"}},"id":"1062","type":"CDSView"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1161"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1163"},"nonselection_glyph":{"id":"1162"},"view":{"id":"1165"}},"id":"1164","type":"GlyphRenderer"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1174","type":"FuncTickFormatter"},{"attributes":{"end":1.05},"id":"1166","type":"Range1d"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1168","type":"Title"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1176","type":"FuncTickFormatter"},{"attributes":{"end":2.302585092994046,"format":{"id":"1170"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.009210340371976183,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1171","type":"Slider"},{"attributes":{"end":360000,"format":{"id":"1172"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1173","type":"Slider"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1043","type":"BoxAnnotation"},{"attributes":{"end":0.5,"format":{"id":"1174"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1175","type":"Slider"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1014"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1178","type":"RangeSlider"},{"attributes":{"end":0.2,"format":{"id":"1176"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1177","type":"Slider"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1183","type":"FuncTickFormatter"},{"attributes":{"end":0.0,"format":{"id":"1010"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1179","type":"RangeSlider"},{"attributes":{"end":3000,"format":{"id":"1183"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1184","type":"Slider"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1185","type":"FuncTickFormatter"},{"attributes":{"end":50,"format":{"id":"1019"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1180","type":"Slider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1181","type":"FuncTickFormatter"},{"attributes":{"end":1,"format":{"id":"1181"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1182","type":"Slider"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1187","type":"RadioButtonGroup"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["No Sorption","Linear Sorption"],"sizing_mode":"stretch_width"},"id":"1188","type":"RadioButtonGroup"},{"attributes":{"end":0.005,"format":{"id":"1185"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1186","type":"Slider"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1054","type":"Line"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1193","type":"CustomJS"},{"attributes":{"code":"  return (tick/1000).toFixed(4)+&#x27; [L/h]&#x27;"},"id":"1017","type":"FuncTickFormatter"},{"attributes":{"args":{"BTCp":{"id":"1129"},"D_dict":{"m2/d":{"id":"1015"},"m2/h":{"id":"1014"},"m2/min":{"id":"1013"},"m2/s":{"id":"1012"}},"D_us":{"id":"1006"},"Kd_sl":{"id":"1186"},"Lcube1":[[0.5324362225952448],[0.088654738127953],[0.3518918751392908],[0.3609527274260329],[0.593895166180622],[0.09951094878690453],[0.13872159497913242],[0.8402857327753017],[0.5572278193178486],[0.9675582165472127],[0.7114856583303673],[0.7287933677423852],[0.6120278684944331],[0.6243339857367683],[0.2352117779036222],[0.7963507807751076],[0.7628086568137411],[0.8290115248589516],[0.46684225464576107],[0.7892092948969534],[0.3379331773083375],[0.3172385205806156],[0.026652044331701277],[0.6420480875344547],[0.7793221113197611],[0.4029233736706869],[0.1221129018934694],[0.49062574447956747],[0.28626852127217417],[0.18368711809701935],[0.5605350635926413],[0.27519472958474234],[0.16296902333598826],[0.8160543228892108],[0.6900978075861459],[0.6897043287321803],[0.436699606999471],[0.42856379722339105],[0.03999850964031271],[0.15062526715852978],[0.17878651249080735],[0.25209764695173514],[0.11474850514230267],[0.29838950440527545],[0.10045768514602392],[0.9206107079964956],[0.34544966036350466],[0.3833648259838972],[0.9153380239215991],[0.24984244377373255],[0.514209883787893],[0.19671521481990242],[0.4415523333328877],[0.2607831588840763],[0.058627693397343215],[0.8603109319533544],[0.07870471935417614],[0.5497658062608497],[0.9578846045809993],[0.6049678521206076],[0.20292190909913024],[0.655893440304835],[0.8835673596497241],[0.8537078868542466],[0.5779428672324508],[0.8313364480055531],[0.14674646164806884],[0.3074509260491066],[0.9814190214106135],[0.800842851996566],[0.3972185948028969],[0.227068579646965],[0.902329801534386],[0.8781296890937311],[0.321516830794661],[0.5290698629949917],[0.8988137367477219],[0.45054224273029986],[0.9454758866222641],[0.37687309560483767],[0.9904012367749699],[0.9329738546700524],[0.015591204375674482],[0.4889181515998359],[0.7011593507984518],[0.06753909887007788],[0.5857352357169051],[0.7549841283896512],[0.41604708227338655],[0.009870400781752501],[0.673522253158945],[0.5076007548341456],[0.47864817692277745],[0.6361775846561549],[0.7305066876167379],[0.043427561266387575],[0.216615594451572],[0.746773202634762],[0.9712552004400247],[0.6656764509337328]],"Lcube2":[[0.6343955645673992],[0.509603000269622],[0.34871695591543883],[0.23102814774376998],[0.8766790287495457],[0.512309196922282],[0.22881071103028994],[0.7145304340559904],[0.585026598667936],[0.6956802807865502],[0.8950954386286534],[0.83189894689449],[0.4518004406424504],[0.41909714706627754],[0.0792844361762192],[0.8461208252254621],[0.2982042995786939],[0.9384624946030209],[0.10502934830741857],[0.4253763397347721],[0.75727471522117],[0.6068611563306943],[0.7064088967810446],[0.1453464574455458],[0.9220389617338408],[0.21670483868025164],[0.9826198599986198],[0.8033028181498579],[0.5760982810493827],[0.6678117717270503],[0.7452648569294823],[0.32676545915608257],[0.8227297198803728],[0.43515013163163274],[0.4435798921012912],[0.36530449355700567],[0.7989449527972],[0.7262475603657098],[0.3184538449685997],[0.4950527640484891],[0.5393820543532534],[0.40657501286199205],[0.9196574461125193],[0.8642634518823609],[0.6428447106559456],[0.014138837787374191],[0.5988028813968005],[0.7329672582964432],[0.15278676567450633],[0.11995486202817826],[0.2513339187049593],[0.9446335402880915],[0.7875051802745644],[0.051558714627736375],[0.9771381334437058],[0.6844679133957399],[0.61378094024782],[0.003227811055110178],[0.7798593551265253],[0.48981106304465283],[0.3307886253711029],[0.8893970339273423],[0.6559092647643934],[0.963922053582652],[0.9549694077455638],[0.6712014360173254],[0.37959323142694684],[0.18137795756624647],[0.817883400562839],[0.3067793622036619],[0.1324311386029603],[0.12946515632128813],[0.26604756656522016],[0.5631016820716654],[0.47813675926739063],[0.08531766747704671],[0.2782717968345894],[0.9958040580356783],[0.7662838398145222],[0.19312443667733056],[0.5439602867950116],[0.39029621333268066],[0.048983713909270685],[0.023916433494973032],[0.24750794259493414],[0.1741821282924735],[0.20128141178140296],[0.46623817755425795],[0.06580496452219524],[0.356008462211517],[0.38045574122382647],[0.09060695762195735],[0.559456976652147],[0.16000270125079802],[0.035823424305590615],[0.6202692922478721],[0.2845490623839613],[0.5209013927619014],[0.9027441314626427],[0.8550898486348611]],"col_len_sl":{"id":"1175"},"col_rad_sl":{"id":"1177"},"disp_sl":{"id":"1178"},"fl_dict":{"L/h":{"id":"1017"},"m3/s":{"id":"1016"},"mL/h":{"id":"1019"},"mL/min":{"id":"1018"}},"fl_us":{"id":"1007"},"flow_sl":{"id":"1180"},"pore_vol_sl":{"id":"1171"},"poros_sl":{"id":"1182"},"pulse_inj_sl":{"id":"1173"},"r_dict":{"1/d":{"id":"1011"},"1/h":{"id":"1010"},"1/min":{"id":"1009"},"1/s":{"id":"1008"}},"r_us":{"id":"1005"},"reac_sl":{"id":"1179"},"rg_CP":{"id":"1187"},"rg_ST":{"id":"1188"},"rho_s_sl":{"id":"1184"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var cloQ = []\\n  var cupQ = []\\n  var vel_r = vel/Ret\\n  //var r_mean = (reac_l+reac_h)/2/Ret\\n  //var D_mean = (disp_l+disp_h)/2/Ret\\n  //var H_mean = 2*r_mean*D_mean/vel_r**2\\n  //var gam_mean = get_gamma(r_mean,D_mean,vel)\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        if (rg_CP == 1 &amp;&amp; t &gt; t_inj) {\\n          c[i] = 0\\n          cmin[i] = 0\\n          cmax[i] = 0\\n        } else {\\n          c[i] = 1\\n          cmin[i] = 1\\n          cmax[i] = 1\\n        }\\n        \\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = (reac_l + (reac_h-reac_l)*Lcube1[j])/Ret\\n            var D_intermed = (disp_l + (disp_h-disp_l)*Lcube2[j])/Ret\\n            var H_intermed = 2*r_intermed*D_intermed/vel_r**2\\n            //var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg_CP == 1) {\\n              // Pulse injection\\n              if (t&lt;=t_inj) {\\n                //intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n                // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * ( math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n              } else {\\n                //intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n                // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * math.exp(-r_intermed*x[i]/vel_r) * ( (1-math.erf((x[i]-vel_r*t*(1+H_intermed))/(2*math.sqrt(D_intermed*t)))) - (1-math.erf((x[i]-vel_r*(t-t_inj)*(1+H_intermed))/(2*math.sqrt(D_intermed*(t-t_inj))))) )\\n              }\\n            } else {\\n              // Cotinuous injection\\n              //intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n              // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n              intlist[j] = 1/2 * ( math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        //if (rg_CP==1){\\n          // Pulse injection\\n          //if (t&lt;=t_inj) {\\n            //c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n            // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            //c[i] = 1/2 * ( math.exp(-r_mean*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n          //} else {\\n            //c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))))\\n            // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            //c[i] = 1/2 * math.exp(-r_mean*x[i]/vel_r) * ( (1-math.erf((x[i]-vel_r*t*(1+H_mean))/(2*math.sqrt(D_mean*t)))) - (1-math.erf((x[i]-vel_r*(t-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(t-t_inj))))) )\\n          //}\\n        //} else {\\n          // Continuous injection\\n          // eq 8.66 in hydrogeology script (Ogata Banks)\\n          //c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n          // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n          //c[i] = 1/2 * ( math.exp(-r_mean*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n        //}\\n        c[i]    = math.median(intlist)\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n        cloQ[i] = math.quantileSeq(intlist, 0.25)\\n        cupQ[i] = math.quantileSeq(intlist, 0.75)\\n    }\\n  }\\n  console.log(c,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean)\\n  return [c, cmin, cmax, cloQ, cupQ]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D_mean,r_mean,H_mean,Ret) {\\n  const c = []\\n  var vel_r = vel/Ret\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg_CP==1){\\n        // Pulse injection \\n        if (tsp[i]&lt;=t_inj) {\\n          //c[i] = 1/2 * (1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n          c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        } else {\\n          //c[i] = 1/2 * ((1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel_r*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n          c[i] = 1/2 * math.exp(-r_mean*xBTC/vel_r) * ( (1-math.erf((xBTC-vel_r*tsp[i]*(1+H_mean))/(2*math.sqrt(D_mean*tsp[i])))) - (1-math.erf((xBTC-vel_r*(tsp[i]-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(tsp[i]-t_inj))))) )\\n        }\\n      } else {\\n        // Continuous injection\\n        // eq 8.66 in hydrogeology script (Ogata Banks)\\n        //c[i] = 1/2 * Math.exp(xBTC*vel_r/(2*D_mean))*(Math.exp((-xBTC)*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC-vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i])))+math.exp(xBTC*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC+vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i]))));\\n        // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n        c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(r_mean,D_mean,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2)\\n  return res\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar yloQ= source1.data[&#x27;yloQ&#x27;]\\nvar yupQ= source1.data[&#x27;yupQ&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n\\n// Values needed for all models\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\nconst Kd        = Kd_sl.value                       // [m3/kg]\\nconst rho_s     = rho_s_sl.value                    // [kg/m3]\\n\\n// Derived entities\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel / n                       // [m/s]\\nconst r_mean  = (reac_l+reac_h)/2             // [1/s]\\nconst D_mean  = (disp_l+disp_h)/2             // [m2/s]\\nconst H_mean  = 2*r_mean*D_mean/sep_vel**2    // [m/s]\\nconst r_med   = reac_l+(reac_h-reac_l)*math.median(Lcube1)             // [1/s]\\nconst D_med   = disp_l+(disp_h-disp_l)*math.median(Lcube2)             // [m2/s]\\nconst H_med   = 2*r_med*D_med/sep_vel**2    // [m/s]\\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = col_len/sep_vel               // [s] VEL oder SEP_VEL?\\nconst c0      = 1;                            // [-] \\n\\n// Retardation factor\\nif (rg_SType == 0) {\\n  var Ret = 1\\n} else {\\n  var Ret = 1 + (1-n)/n * Kd * rho_s\\n}\\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit its range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\n// Time \\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t         = tPV * PV                          // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2) \\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cloQ = []\\nvar cupQ = []\\nvar cBTX = []\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax, cloQ, cupQ] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,D_mean,r_mean,H_mean,Ret) \\n}\\n\\n\\n// Update sources\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n  yloQ[i] = cloQ[i]\\n  yupQ[i] = cupQ[i]\\n}\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27; m (Drag diamond in upper plot to change)&#x27;\\n\\n// Displaying correct sliders\\nif (rg_CP==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\nif (rg_SType == 1) {\\n  rho_s_sl.visible = true\\n  Kd_sl.visible = true\\n} else {\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n}\\n\\n// Displaying correct units\\nvar r_format  = r_dict[r_us.value]\\nvar D_format  = D_dict[D_us.value]\\nvar fl_format = fl_dict[fl_us.value]\\nreac_sl.format = r_format\\ndisp_sl.format = D_format\\nflow_sl.format = fl_format\\n\\nreac_sl.format.change.emit();\\ndisp_sl.format.change.emit();\\nflow_sl.format.change.emit();\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1189","type":"CustomJS"},{"attributes":{"code":"  return (tick/60).toFixed(2)+&#x27; [mL/min]&#x27;"},"id":"1018","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick).toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1019","type":"FuncTickFormatter"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1193"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1192","type":"Button"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1052","type":"Line"},{"attributes":{"below":[{"id":"1029"}],"center":[{"id":"1032"},{"id":"1036"},{"id":"1074"}],"js_event_callbacks":{"pan":[{"id":"1189"}],"tap":[{"id":"1189"}]},"left":[{"id":"1033"}],"min_height":400,"renderers":[{"id":"1055"},{"id":"1061"},{"id":"1080"},{"id":"1086"},{"id":"1104"},{"id":"1111"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1044"},"x_range":{"id":"1021"},"x_scale":{"id":"1025"},"y_range":{"id":"1106"},"y_scale":{"id":"1027"}},"id":"1020","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1021","type":"DataRange1d"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1191","type":"CustomJS"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1191"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1190","type":"Button"},{"attributes":{"source":{"id":"1002"}},"id":"1105","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1101","type":"Line"},{"attributes":{},"id":"1126","type":"Selection"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1102","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1101"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1103"},"nonselection_glyph":{"id":"1102"},"view":{"id":"1105"}},"id":"1104","type":"GlyphRenderer"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1103","type":"Line"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1108","type":"Scatter"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1109","type":"Scatter"},{"attributes":{},"id":"1215","type":"BasicTickFormatter"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1110","type":"Scatter"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1108"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1110"},"nonselection_glyph":{"id":"1109"},"view":{"id":"1112"}},"id":"1111","type":"GlyphRenderer"},{"attributes":{},"id":"1216","type":"AllLabels"},{"attributes":{"children":[{"id":"1005"},{"id":"1006"},{"id":"1007"},{"id":"1190"},{"id":"1192"}],"sizing_mode":"stretch_width"},"id":"1195","type":"Column"},{"attributes":{"num_objects":1,"renderers":[{"id":"1111"}]},"id":"1113","type":"PointDrawTool"},{"attributes":{"source":{"id":"1004"}},"id":"1112","type":"CDSView"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1218"},"group":null,"major_label_policy":{"id":"1219"},"major_label_text_font_size":"12pt","ticker":{"id":"1139"}},"id":"1138","type":"LinearAxis"},{"attributes":{},"id":"1218","type":"BasicTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1161","type":"Line"},{"attributes":{},"id":"1219","type":"AllLabels"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1162","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1056","type":"CDSView"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{},"id":"1025","type":"LinearScale"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{},"id":"1212","type":"Selection"},{"attributes":{},"id":"1211","type":"UnionRenderers"},{"attributes":{},"id":"1027","type":"LinearScale"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1059","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1052"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1054"},"nonselection_glyph":{"id":"1053"},"view":{"id":"1056"}},"id":"1055","type":"GlyphRenderer"},{"attributes":{},"id":"1030","type":"BasicTicker"},{"attributes":{"axis":{"id":"1029"},"coordinates":null,"group":null,"ticker":null},"id":"1032","type":"Grid"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1058","type":"Line"},{"attributes":{},"id":"1038","type":"WheelZoomTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1077"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1079"},"nonselection_glyph":{"id":"1078"},"view":{"id":"1081"}},"id":"1080","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1058"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1060"},"nonselection_glyph":{"id":"1059"},"view":{"id":"1062"}},"id":"1061","type":"GlyphRenderer"},{"attributes":{},"id":"1125","type":"UnionRenderers"},{"attributes":{"coordinates":null,"group":null,"items":[{"id":"1075"},{"id":"1099"}]},"id":"1074","type":"Legend"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1126"},"selection_policy":{"id":"1125"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["1/s","1/min","1/h","1/d"],"sizing_mode":"stretch_width","title":"Reaction Unit:","value":"1/h"},"id":"1005","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [m2/s]&#x27;"},"id":"1012","type":"FuncTickFormatter"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["m2/s","m2/min","m2/h","m2/d"],"sizing_mode":"stretch_width","title":"Dispersion Unit:","value":"m2/h"},"id":"1006","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [1/s]&#x27;"},"id":"1008","type":"FuncTickFormatter"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [1/d]&#x27;"},"id":"1011","type":"FuncTickFormatter"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1170","type":"FuncTickFormatter"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["mL/min","m3/s","mL/h","L/h"],"sizing_mode":"stretch_width","title":"Flow Rate Unit:","value":"mL/h"},"id":"1007","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [1/min]&#x27;"},"id":"1009","type":"FuncTickFormatter"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1030"}},"id":"1029","type":"LinearAxis"},{"attributes":{"below":[{"id":"1138"}],"center":[{"id":"1141"},{"id":"1145"}],"left":[{"id":"1142"}],"min_height":400,"renderers":[{"id":"1164"}],"sizing_mode":"stretch_both","title":{"id":"1168"},"toolbar":{"id":"1153"},"x_range":{"id":"1167"},"x_scale":{"id":"1134"},"y_range":{"id":"1166"},"y_scale":{"id":"1136"}},"id":"1129","subtype":"Figure","type":"Plot"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [m2/min]&#x27;"},"id":"1013","type":"FuncTickFormatter"},{"attributes":{},"id":"1134","type":"LinearScale"},{"attributes":{},"id":"1034","type":"BasicTicker"},{"attributes":{"end":10.000000000000002},"id":"1167","type":"Range1d"},{"attributes":{"axis":{"id":"1033"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1036","type":"Grid"},{"attributes":{},"id":"1136","type":"LinearScale"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1053","type":"Line"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [1/h]&#x27;"},"id":"1010","type":"FuncTickFormatter"},{"attributes":{},"id":"1139","type":"BasicTicker"},{"attributes":{"axis":{"id":"1138"},"coordinates":null,"group":null,"ticker":null},"id":"1141","type":"Grid"},{"attributes":{"code":"  return (tick/3600/1000/1000).toExponential(2)+&#x27; [m3/s]&#x27;"},"id":"1016","type":"FuncTickFormatter"},{"attributes":{},"id":"1147","type":"WheelZoomTool"},{"attributes":{},"id":"1037","type":"PanTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1215"},"group":null,"major_label_policy":{"id":"1216"},"major_label_text_font_size":"12pt","ticker":{"id":"1143"}},"id":"1142","type":"LinearAxis"},{"attributes":{"overlay":{"id":"1043"}},"id":"1039","type":"BoxZoomTool"},{"attributes":{"axis":{"id":"1142"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1145","type":"Grid"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [m2/d]&#x27;"},"id":"1015","type":"FuncTickFormatter"},{"attributes":{},"id":"1143","type":"BasicTicker"},{"attributes":{},"id":"1042","type":"HelpTool"},{"attributes":{},"id":"1040","type":"SaveTool"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [m2/h]&#x27;"},"id":"1014","type":"FuncTickFormatter"},{"attributes":{},"id":"1151","type":"HelpTool"},{"attributes":{},"id":"1146","type":"PanTool"},{"attributes":{},"id":"1041","type":"ResetTool"},{"attributes":{"overlay":{"id":"1152"}},"id":"1148","type":"BoxZoomTool"},{"attributes":{},"id":"1149","type":"SaveTool"},{"attributes":{},"id":"1150","type":"ResetTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1034"}},"id":"1033","type":"LinearAxis"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1152","type":"BoxAnnotation"},{"attributes":{"tools":[{"id":"1146"},{"id":"1147"},{"id":"1148"},{"id":"1149"},{"id":"1150"},{"id":"1151"}]},"id":"1153","type":"Toolbar"},{"attributes":{"children":[{"id":"1187"},{"id":"1188"},{"id":"1171"},{"id":"1175"},{"id":"1177"},{"id":"1179"},{"id":"1178"},{"id":"1180"},{"id":"1182"},{"id":"1173"},{"id":"1184"},{"id":"1186"}],"sizing_mode":"stretch_width"},"id":"1194","type":"Column"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D/hac1hG3LvP85a5IndYO8/pmAMWFBP7z+45JsbcT3vP0z7IBo9K+8/hxDsj7EY7z8c9KSwywXvP6Be6qeI8u4/mAX8meXe7j9OTG+k38ruP/uY7t5ztu4/mU4DXJ+h7j8MZOopX4zuP/iJc1Owdu4/KMjq4I9g7j+GcwzZ+knuPwdVA0LuMu4/StFwImcb7j/A136CYgPuP29X+2zd6u0/3O188NTR7T/ie5AgRrjtP6dC7xYunu0/jyG99ImD7T/shM7jVmjtP7eL9ReSTO0/SuFV0Dgw7T81v75YSBPtPyGCCgu+9ew/wzODUJfX7D+TY0uj0bjsP1ifyo9qmew/odQctl957D+w3IPLrljsP5Fs2ptVN+w/pZwHC1IV7D/wM3IWovLrP5rdctZDz+s/rWnEfzWr6z+6NPFkdYbrPxTOvPcBYes/NvCIytk66z/n27SR+xPrPyEk9iRm7Oo/I/epgBjE6j+67x3HEZvqP+B5z0FRceo//dWgYtZG6j9vxwLFoBvqPyb9ES+w7+k/vkWnkgTD6T+ApFkOnpXpP+dgce58Z+k/3S/LraE46T/am6r2DAnpPzHYeqO/2Og/lzN9v7qn6D9sZmSH/3XoPwED3GmPQ+g/2lf7B2wQ6D8bH6M1l9znP+5hxfkSqOc/1gKXjuFy5z8Eb6phBT3nP2sE8xOBBuc/Z8iweVfP5j+LGUSai5fmP50W6a8gX+Y/PYRaJxom5j//Clyfe+zlPye4K+hIsuU/CLzaAoZ35T8Fco0gNzzlP2PPoqFgAOU/f2fDFAfE5D9rRdg1L4fkPx7s6ezdSeQ/NODnTBgM5D/qLlmS483jP4J39iFFj+M/xgwuh0JQ4z/41JJy4RDjP5KeNrgn0eI/9K/wTRuR4j9NZ5FJwlDiP6TOA98iEOI/DRZeXkPP4T9c8+ExKo7hP1/z7dvdTOE/jtTg9GQL4T9ADvAoxsngP5Sx8jUIiOA/wNoh6TFG4D/B8c8cSgTgP7oBMGyvhN8/ydsMRcMA3z8x0Xir3XzeP6bJHo4M+d0/JPVL3l113T9fECeL3/HcP0no53yfbtw/8NcRkKvr2z9++bOQEWnbP1e/sTXf5to/k6MWHCJl2j/Bk3fC5+PZP2S0ZIQ9Y9k/kQrulTDj2D/Viz3/zWPYP5gDSZgi5dc/4iqeBDtn1z/3OkuvI+rWP0ot5sbobdY/dMO0OZby1T++WPexN3jVPwBkWJLY/tQ/knSC8oOG1D+fV96bRA/UPw31egYlmdM/NVMgVi8k0z/UEI9XbbDSPyyD7X3oPdI/eoRj4KnM0T8C3eU3ulzRP7YNMt0h7tA/3iD7xuiA0D8NAkiIFhXQP7p2B55kVc8/3qV/xYWDzj9WwlFHnbTNP+GqWhO36Mw/2XmsR94fzD/KfKMvHVrLP++4XUN9l8o/ZOCTJwfYyT/vXdKtwhvJPyvhENW2Ysg/h5qmyumsxz8bIJnrYPrGP2i+Q8YgS8Y/CcZUHC2fxT9IOB7liPbEPwQHN1A2UcQ/mvNpyDavwz9i8e72ihDDPwzN68YydcI/X7o4aS3dwT/XTGVYeUjBP7xF+lwUt8A/I430kfsowD8lL+vSVjy/P+/VSmM/Lb4/bdOEM6ckvT9EA7ZugyK8P9CtWhfIJrs/rgJSEmgxuj845R0yVUK5P2xAV0KAWbg/pyVPE9l2tz/qDNWFTpq2PwmmGpfOw7U/ZMmtbEbztD9UOYFgoii0P8sN/QzOY7M/CtEPWbSksj+BhDmEP+uxPyv6iTJZN7E/oieMeOqIsD+spzDOt7+vPyZ+Di4reK4/LE+Baf46rT8boT8XAAisPwPvUSL+3qo/LdoV4MW/qT8bntAlJKqoP2tYyF3lnac/ok7cm9Wapj/k8pSxwKClP1wDpUFyr6Q/brjV0rXGoz9/jljiVuaiPwzRefUgDqI/86Gvqt89oT+czAHKXnWgP5GNjqnUaJ8/CqBtKZ31nT+yV5FUsJCcPzL4zzSoOZs/O4nlth/wmT+LQhDDsrOYP3hnSVT+g5c/X4gbjqBglj/JBBjROEmVPyeC7s1nPZQ/1dgpl888kz+Yu5axE0eSPw==","dtype":"float64","order":"little","shape":[200]},"yloQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yupQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"label":{"value":"lower / upper Quartile"},"renderers":[{"id":"1061"}]},"id":"1075","type":"LegendItem"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1077","type":"Line"},{"attributes":{"active_multi":{"id":"1113"},"tools":[{"id":"1037"},{"id":"1038"},{"id":"1039"},{"id":"1040"},{"id":"1041"},{"id":"1042"},{"id":"1113"}]},"id":"1044","type":"Toolbar"}],"root_ids":["1020","1194","1129","1195"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"bbacf6f7-a113-41fd-8c62-f42978bcd16b","root_ids":["1020","1194","1129","1195"],"roots":{"1020":"e01ae92d-1863-4999-ba74-fca22d42f0a1","1129":"9a9320ae-da67-4ecd-8447-a23cc9e0d271","1194":"f9feed22-48de-4e31-8e3b-f461038a06be","1195":"d1373a03-1593-4635-8fa5-7441c5f6d3de"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();