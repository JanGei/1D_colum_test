    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"a5a47000-33fa-40bb-a79f-f0c768392084":{"defs":[],"roots":{"references":[{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1193","type":"CustomJS"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1059","type":"Line"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1193"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1192","type":"Button"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1058","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1077"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1079"},"nonselection_glyph":{"id":"1078"},"view":{"id":"1081"}},"id":"1080","type":"GlyphRenderer"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1191"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1190","type":"Button"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1058"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1060"},"nonselection_glyph":{"id":"1059"},"view":{"id":"1062"}},"id":"1061","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"group":null,"items":[{"id":"1075"},{"id":"1099"}]},"id":"1074","type":"Legend"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1060","type":"Line"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{"source":{"id":"1002"}},"id":"1062","type":"CDSView"},{"attributes":{"children":[{"id":"1187"},{"id":"1188"},{"id":"1171"},{"id":"1175"},{"id":"1177"},{"id":"1179"},{"id":"1178"},{"id":"1180"},{"id":"1182"},{"id":"1173"},{"id":"1184"},{"id":"1186"}],"sizing_mode":"stretch_width"},"id":"1194","type":"Column"},{"attributes":{"source":{"id":"1002"}},"id":"1105","type":"CDSView"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [m2/d]&#x27;"},"id":"1015","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick/3600/1000/1000).toExponential(2)+&#x27; [m3/s]&#x27;"},"id":"1016","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick/1000).toFixed(4)+&#x27; [L/h]&#x27;"},"id":"1017","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick/60).toFixed(2)+&#x27; [mL/min]&#x27;"},"id":"1018","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1101","type":"Line"},{"attributes":{"code":"  return (tick).toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1019","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1052","type":"Line"},{"attributes":{"num_objects":1,"renderers":[{"id":"1111"}]},"id":"1113","type":"PointDrawTool"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1102","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1101"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1103"},"nonselection_glyph":{"id":"1102"},"view":{"id":"1105"}},"id":"1104","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1103","type":"Line"},{"attributes":{},"id":"1215","type":"BasicTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1161","type":"Line"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1108","type":"Scatter"},{"attributes":{},"id":"1216","type":"AllLabels"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1109","type":"Scatter"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1218"},"group":null,"major_label_policy":{"id":"1219"},"major_label_text_font_size":"12pt","ticker":{"id":"1139"}},"id":"1138","type":"LinearAxis"},{"attributes":{"source":{"id":"1004"}},"id":"1112","type":"CDSView"},{"attributes":{},"id":"1218","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"1005"},{"id":"1006"},{"id":"1007"},{"id":"1190"},{"id":"1192"}],"sizing_mode":"stretch_width"},"id":"1195","type":"Column"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1110","type":"Scatter"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1108"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1110"},"nonselection_glyph":{"id":"1109"},"view":{"id":"1112"}},"id":"1111","type":"GlyphRenderer"},{"attributes":{},"id":"1219","type":"AllLabels"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{},"id":"1212","type":"Selection"},{"attributes":{},"id":"1211","type":"UnionRenderers"},{"attributes":{"below":[{"id":"1029"}],"center":[{"id":"1032"},{"id":"1036"},{"id":"1074"}],"js_event_callbacks":{"pan":[{"id":"1189"}],"tap":[{"id":"1189"}]},"left":[{"id":"1033"}],"min_height":400,"renderers":[{"id":"1055"},{"id":"1061"},{"id":"1080"},{"id":"1086"},{"id":"1104"},{"id":"1111"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1044"},"x_range":{"id":"1021"},"x_scale":{"id":"1025"},"y_range":{"id":"1106"},"y_scale":{"id":"1027"}},"id":"1020","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1125","type":"UnionRenderers"},{"attributes":{},"id":"1021","type":"DataRange1d"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{},"id":"1126","type":"Selection"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{},"id":"1025","type":"LinearScale"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yloQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yupQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{},"id":"1027","type":"LinearScale"},{"attributes":{},"id":"1030","type":"BasicTicker"},{"attributes":{"axis":{"id":"1029"},"coordinates":null,"group":null,"ticker":null},"id":"1032","type":"Grid"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1126"},"selection_policy":{"id":"1125"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{"below":[{"id":"1138"}],"center":[{"id":"1141"},{"id":"1145"}],"left":[{"id":"1142"}],"min_height":400,"renderers":[{"id":"1164"}],"sizing_mode":"stretch_both","title":{"id":"1168"},"toolbar":{"id":"1153"},"x_range":{"id":"1167"},"x_scale":{"id":"1134"},"y_range":{"id":"1166"},"y_scale":{"id":"1136"}},"id":"1129","subtype":"Figure","type":"Plot"},{"attributes":{"end":0.005,"format":{"id":"1185"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1186","type":"Slider"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["1/s","1/min","1/h","1/d"],"sizing_mode":"stretch_width","title":"Reaction Unit:","value":"1/h"},"id":"1005","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [m2/s]&#x27;"},"id":"1012","type":"FuncTickFormatter"},{"attributes":{},"id":"1134","type":"LinearScale"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["m2/s","m2/min","m2/h","m2/d"],"sizing_mode":"stretch_width","title":"Dispersion Unit:","value":"m2/h"},"id":"1006","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [1/s]&#x27;"},"id":"1008","type":"FuncTickFormatter"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1170","type":"FuncTickFormatter"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [1/d]&#x27;"},"id":"1011","type":"FuncTickFormatter"},{"attributes":{},"id":"1136","type":"LinearScale"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["mL/min","m3/s","mL/h","L/h"],"sizing_mode":"stretch_width","title":"Flow Rate Unit:","value":"mL/h"},"id":"1007","type":"Select"},{"attributes":{},"id":"1139","type":"BasicTicker"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [1/min]&#x27;"},"id":"1009","type":"FuncTickFormatter"},{"attributes":{"axis":{"id":"1138"},"coordinates":null,"group":null,"ticker":null},"id":"1141","type":"Grid"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1030"}},"id":"1029","type":"LinearAxis"},{"attributes":{},"id":"1147","type":"WheelZoomTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1034"}},"id":"1033","type":"LinearAxis"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1215"},"group":null,"major_label_policy":{"id":"1216"},"major_label_text_font_size":"12pt","ticker":{"id":"1143"}},"id":"1142","type":"LinearAxis"},{"attributes":{"axis":{"id":"1142"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1145","type":"Grid"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [m2/min]&#x27;"},"id":"1013","type":"FuncTickFormatter"},{"attributes":{},"id":"1143","type":"BasicTicker"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [m2/h]&#x27;"},"id":"1014","type":"FuncTickFormatter"},{"attributes":{},"id":"1151","type":"HelpTool"},{"attributes":{},"id":"1146","type":"PanTool"},{"attributes":{"axis":{"id":"1033"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1036","type":"Grid"},{"attributes":{"overlay":{"id":"1152"}},"id":"1148","type":"BoxZoomTool"},{"attributes":{},"id":"1042","type":"HelpTool"},{"attributes":{},"id":"1149","type":"SaveTool"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [1/h]&#x27;"},"id":"1010","type":"FuncTickFormatter"},{"attributes":{},"id":"1150","type":"ResetTool"},{"attributes":{},"id":"1037","type":"PanTool"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1053","type":"Line"},{"attributes":{},"id":"1034","type":"BasicTicker"},{"attributes":{"overlay":{"id":"1043"}},"id":"1039","type":"BoxZoomTool"},{"attributes":{},"id":"1040","type":"SaveTool"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1152","type":"BoxAnnotation"},{"attributes":{},"id":"1041","type":"ResetTool"},{"attributes":{"source":{"id":"1003"}},"id":"1165","type":"CDSView"},{"attributes":{},"id":"1038","type":"WheelZoomTool"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1163","type":"Line"},{"attributes":{"end":0.0,"format":{"id":"1010"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1179","type":"RangeSlider"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1183","type":"FuncTickFormatter"},{"attributes":{"end":3000,"format":{"id":"1183"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1184","type":"Slider"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1014"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1178","type":"RangeSlider"},{"attributes":{"end":0.2,"format":{"id":"1176"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1177","type":"Slider"},{"attributes":{"label":{"value":"lower / upper Quartile"},"renderers":[{"id":"1061"}]},"id":"1075","type":"LegendItem"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1185","type":"FuncTickFormatter"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1172","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1077","type":"Line"},{"attributes":{"end":50,"format":{"id":"1019"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1180","type":"Slider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1181","type":"FuncTickFormatter"},{"attributes":{"end":0.5,"format":{"id":"1174"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1175","type":"Slider"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1078","type":"Line"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1191","type":"CustomJS"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1084","type":"Line"},{"attributes":{"args":{"BTCp":{"id":"1129"},"D_dict":{"m2/d":{"id":"1015"},"m2/h":{"id":"1014"},"m2/min":{"id":"1013"},"m2/s":{"id":"1012"}},"D_us":{"id":"1006"},"Kd_sl":{"id":"1186"},"Lcube1":[[0.059543764614489784],[0.025202463089239003],[0.6784224490633568],[0.7380562381491639],[0.07874162926577583],[0.8561517690308486],[0.25606607263229103],[0.5614423006817211],[0.9621260113515785],[0.11290627241154562],[0.9813047883044177],[0.8811648260262279],[0.27597686453404474],[0.28451940769092837],[0.2979552138509201],[0.6324083036050999],[0.8638013933065196],[0.8495120856860418],[0.80930377457985],[0.6595818211617984],[0.15443205405036856],[0.1614543370590325],[0.5950361441824381],[0.540713828247522],[0.37688787811931135],[0.12276514070783497],[0.7463990916598116],[0.9985283675142733],[0.4656688987672717],[0.30381980609008447],[0.2108601596034729],[0.8955089601387062],[0.916108489596794],[0.3408935552425059],[0.14558622828819354],[0.7002913912300638],[0.6232752434498404],[0.41912691734619784],[0.17726010407141884],[0.5387964108662224],[0.9547145243907099],[0.6834798064222867],[0.33688869345854905],[0.529547130374674],[0.3599424130238382],[0.202001929822395],[0.6445497836757671],[0.009753332137128562],[0.7130979891223678],[0.8363843729038725],[0.970708691627729],[0.7923884902377251],[0.8198099147811562],[0.6070414360392887],[0.47533897818059023],[0.23828156084674823],[0.9233396150794817],[0.691048219924507],[0.7870324857111654],[0.4451692162749483],[0.6646187817420233],[0.03419462143931933],[0.08280233222582561],[0.3134973182034675],[0.13730283383712405],[0.22436950994489627],[0.5812180507643725],[0.5109606903227963],[0.43245377003448576],[0.575150709853823],[0.36689664273666195],[0.9404650900609173],[0.10505891052144804],[0.4924998675822609],[0.42652957608782893],[0.4881419022849031],[0.04252289805785911],[0.32773880676876815],[0.380532247221711],[0.5020237552341752],[0.3915603157118415],[0.7513374021752921],[0.2638368020155238],[0.40055242185413653],[0.72323574999046],[0.8209509377422173],[0.19551042050691184],[0.619440361931177],[0.8744159525503633],[0.24234383520682104],[0.5521193753826147],[0.09183290390230801],[0.18623538621547575],[0.7690078315154695],[0.014063588632357986],[0.7768458871094494],[0.9349311793449302],[0.9052427921111257],[0.4550494802160239],[0.06479892713791001]],"Lcube2":[[0.8042191655228896],[0.20993652585658804],[0.7143528561712658],[0.9573508566176347],[0.7792661990047882],[0.7540094414527939],[0.11782359189653782],[0.44544067742682825],[0.8789992105664781],[0.9031835033254842],[0.6889706530832603],[0.49595586085063176],[0.9834748529512606],[0.27139751851718663],[0.5701126270475463],[0.8249479971153809],[0.9345323184457864],[0.2817174037289995],[0.7814381130574536],[0.021856458267654845],[0.6616114281306884],[0.23150859202302979],[0.3989558769495158],[0.5067286508309412],[0.5839335638129439],[0.34881251871357194],[0.9229763668384089],[0.6591206034628709],[0.010867661371101615],[0.3035857364607918],[0.3218164654479401],[0.41166491722374204],[0.37547247254035476],[0.3842323359507996],[0.5233467327398911],[0.06479761907239388],[0.6112420107982297],[0.1647768755973447],[0.9998877282764809],[0.8312692652193121],[0.5636032998978252],[0.7085744220981366],[0.404561965622363],[0.5172445234281018],[0.18400195021794297],[0.9133478506123721],[0.5447982293313671],[0.85420806256314],[0.1472076331353297],[0.0900052169899665],[0.42114394090525253],[0.07353110947467897],[0.9622026095510812],[0.973630712242738],[0.31757492040190566],[0.22690012194647463],[0.7660547567945032],[0.557840198085843],[0.7432673614971012],[0.8421825126937093],[0.8682369097512543],[0.5368245248690362],[0.8844063623155642],[0.29809107941036944],[0.13927730756070247],[0.04251836147029885],[0.6449955099308853],[0.8131908311770846],[0.057265879745621466],[0.2535638602933651],[0.036056781153816914],[0.6770194233745745],[0.5910228714388135],[0.15105746654478394],[0.8906980425853327],[0.6032268648923371],[0.24087547502233198],[0.3579631326285908],[0.10737754995428705],[0.7906594649519364],[0.7389620198805698],[0.08015304219921317],[0.3382617426819723],[0.45417252401187463],[0.005168417731784844],[0.6915663959605439],[0.63804384788801],[0.4395163306507046],[0.3651607418499635],[0.48992519246511707],[0.2170870493873304],[0.7268538533141023],[0.12985862863334485],[0.17010907159461905],[0.477743514622463],[0.6272693637283089],[0.9467211541771268],[0.4670849837810031],[0.26505795765931955],[0.19202561936900964]],"col_len_sl":{"id":"1175"},"col_rad_sl":{"id":"1177"},"disp_sl":{"id":"1178"},"fl_dict":{"L/h":{"id":"1017"},"m3/s":{"id":"1016"},"mL/h":{"id":"1019"},"mL/min":{"id":"1018"}},"fl_us":{"id":"1007"},"flow_sl":{"id":"1180"},"pore_vol_sl":{"id":"1171"},"poros_sl":{"id":"1182"},"pulse_inj_sl":{"id":"1173"},"r_dict":{"1/d":{"id":"1011"},"1/h":{"id":"1010"},"1/min":{"id":"1009"},"1/s":{"id":"1008"}},"r_us":{"id":"1005"},"reac_sl":{"id":"1179"},"rg_CP":{"id":"1187"},"rg_ST":{"id":"1188"},"rho_s_sl":{"id":"1184"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var cloQ = []\\n  var cupQ = []\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        if (rg_CP == 1 &amp;&amp; t &gt; t_inj) {\\n          c[i] = 0\\n          cmin[i] = 0\\n          cmax[i] = 0\\n        } else {\\n          c[i] = 1\\n          cmin[i] = 1\\n          cmax[i] = 1\\n        }\\n        \\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var H_intermed = 2*r_intermed*D_intermed/sep_vel**2\\n            //var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg_CP == 1) {\\n              // Pulse injection\\n              if (t&lt;=t_inj) {\\n                //intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n                // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2/Ret * ( math.exp(-r_intermed*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n              } else {\\n                //intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n                // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2/Ret * math.exp(-r_intermed*x[i]/sep_vel) * ( (1-math.erf((x[i]-sep_vel*t*(1+H_intermed))/(2*math.sqrt(D_intermed*t)))) - (1-math.erf((x[i]-sep_vel*(t-t_inj)*(1+H_intermed))/(2*math.sqrt(D_intermed*(t-t_inj))))) )\\n              }\\n            } else {\\n              // Cotinuous injection\\n              //intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n              // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n              intlist[j] = 1/2/Ret * ( math.exp(-r_intermed*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        if (rg_CP==1){\\n          // Pulse injection\\n          if (t&lt;=t_inj) {\\n            //c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n            // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            c[i] = 1/2/Ret * ( math.exp(-r_mean*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n          } else {\\n            //c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))))\\n            // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            c[i] = 1/2/Ret * math.exp(-r_mean*x[i]/sep_vel) * ( (1-math.erf((x[i]-sep_vel*t*(1+H_mean))/(2*math.sqrt(D_mean*t)))) - (1-math.erf((x[i]-sep_vel*(t-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(t-t_inj))))) )\\n          }\\n        } else {\\n          // Continuous injection\\n          // eq 8.66 in hydrogeology script (Ogata Banks)\\n          //c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n          // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n          c[i] = 1/2/Ret * ( math.exp(-r_mean*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n        }\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n        cloQ[i] = math.quantileSeq(intlist, 0.25)\\n        cupQ[i] = math.quantileSeq(intlist, 0.75)\\n    }\\n  }\\n  console.log(c,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean)\\n  return [c, cmin, cmax, cloQ, cupQ]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D_mean,r_mean,H_mean) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg_CP==1){\\n        // Pulse injection \\n        if (tsp[i]&lt;=t_inj) {\\n          //c[i] = 1/2 * (1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n          c[i] = 1/2/Ret * ( math.exp(-r_mean*xBTC/vel) * (1-math.erf((xBTC - vel*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        } else {\\n          //c[i] = 1/2 * ((1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n          c[i] = 1/2/Ret * math.exp(-r_mean*xBTC/vel) * ( (1-math.erf((xBTC-vel*tsp[i]*(1+H_mean))/(2*math.sqrt(D_mean*tsp[i])))) - (1-math.erf((xBTC-vel*(tsp[i]-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(tsp[i]-t_inj))))) )\\n        }\\n      } else {\\n        // Continuous injection\\n        // eq 8.66 in hydrogeology script (Ogata Banks)\\n        //c[i] = 1/2 * Math.exp(xBTC*vel/(2*D_mean))*(Math.exp((-xBTC)*vel*gam/(2*D_mean))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i])))+math.exp(xBTC*vel*gam/(2*D_mean))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i]))));\\n        // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n        c[i] = 1/2/Ret * ( math.exp(-r_mean*xBTC/vel) * (1-math.erf((xBTC - vel*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(r_mean,D_mean,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2)\\n  return res\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar yloQ= source1.data[&#x27;yloQ&#x27;]\\nvar yupQ= source1.data[&#x27;yupQ&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n\\n// Values needed for all models\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\nconst Kd        = Kd_sl.value                       // [m3/kg]\\nconst rho_s     = rho_s_sl.value                    // [kg/m3]\\n\\n// Derived entities\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel / n                       // [m/s]\\nconst r_mean  = (reac_l+reac_h)/2             // [1/s]\\nconst D_mean  = (disp_l+disp_h)/2             // [m2/s]\\nconst H_mean  = 2*r_mean*D_mean/sep_vel**2    // [m/s]\\nconst r_med   = reac_l+(reac_h-reac_l)*math.median(Lcube1)             // [1/s]\\nconst D_med   = disp_l+(disp_h-disp_l)*math.median(Lcube2)             // [m2/s]\\nconst H_med   = 2*r_med*D_med/sep_vel**2    // [m/s]\\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = col_len/sep_vel               // [s] VEL oder SEP_VEL?\\nconst c0      = 1;                            // [-] \\n\\n// Retardation factor\\nif (rg_SType == 0) {\\n  var Ret = 1\\n} else {\\n  var Ret = 1 + (1-n)/n * Kd * rho_s\\n}\\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit its range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\n// Time \\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t         = tPV * PV                          // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2) \\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cloQ = []\\nvar cupQ = []\\nvar cBTX = []\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax, cloQ, cupQ] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,D_mean,r_mean,H_mean,Ret) \\n}\\n\\n\\n// Update sources\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n  yloQ[i] = cloQ[i]\\n  yupQ[i] = cupQ[i]\\n}\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27; m (Drag diamond in upper plot to change)&#x27;\\n\\n// Displaying correct sliders\\nif (rg_CP==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\nif (rg_SType == 1) {\\n  rho_s_sl.visible = true\\n  Kd_sl.visible = true\\n} else {\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n}\\n\\n// Displaying correct units\\nvar r_format  = r_dict[r_us.value]\\nvar D_format  = D_dict[D_us.value]\\nvar fl_format = fl_dict[fl_us.value]\\nreac_sl.format = r_format\\ndisp_sl.format = D_format\\nflow_sl.format = fl_format\\n\\nreac_sl.format.change.emit();\\ndisp_sl.format.change.emit();\\nflow_sl.format.change.emit();\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1189","type":"CustomJS"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1079","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1162","type":"Line"},{"attributes":{"end":43200,"format":{"id":"1172"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1173","type":"Slider"},{"attributes":{"source":{"id":"1002"}},"id":"1081","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1083","type":"Line"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1187","type":"RadioButtonGroup"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1043","type":"BoxAnnotation"},{"attributes":{"source":{"id":"1002"}},"id":"1087","type":"CDSView"},{"attributes":{"end":1.05,"start":-0.03},"id":"1106","type":"Range1d"},{"attributes":{"source":{"id":"1002"}},"id":"1056","type":"CDSView"},{"attributes":{"end":1.9459101490553132,"format":{"id":"1170"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.008853665428037451,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1171","type":"Slider"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1083"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1085"},"nonselection_glyph":{"id":"1084"},"view":{"id":"1087"}},"id":"1086","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1085","type":"Line"},{"attributes":{"label":{"value":"Minimum / Maximum"},"renderers":[{"id":"1086"}]},"id":"1099","type":"LegendItem"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1176","type":"FuncTickFormatter"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1052"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1054"},"nonselection_glyph":{"id":"1053"},"view":{"id":"1056"}},"id":"1055","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1168","type":"Title"},{"attributes":{"end":1.05},"id":"1166","type":"Range1d"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1174","type":"FuncTickFormatter"},{"attributes":{"end":1,"format":{"id":"1181"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1182","type":"Slider"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAACMVwXXNZBzPSFi7JesUsU+wrox0ZvFNz82nBZ5+ZlxP0Vwf5RdApM/zY2j+tCyqD/f8azjj/m3P2wW63K8ZMM/foMra+DKyz/7/3aHdk3SP3EafvbcrtY/JIqQpWDf2j8VR49qXcTeP6U8NEXFJ+E/yUFXq8294j8KxpPzrSTkP0Rl++q4XuU/dHrOpFtv5j/ioVOailrnP9kmeJpfJOg/r8VVetvQ6D9Dj30OwWPpP6XaWHuB4Ok/SxyQDDRK6j+B77xvlaPqP6Mns3AL7+o/LlbcQKsu6z+9jT/7QGTrP5PI5IxXkes/QCjjekC36z/ZPOw2G9frP7HxN9jb8es/C+znJlEI7D/pGE33KRvsPyvrw9v5Kuw/B2EYOT047D/0avTLXEPsP+PYta6wTOw/1RXT7oJU7D+Y/x/AEVvsP/efGFuRYOw/UPoGki1l7D99NoInC2nsP17Oeu9IbOw/cZDTwgBv7D+NgW9MSHHsPya4orUxc+w/muQXN8x07D9jyHuSJHbsPz4kmXhFd+w/kxYA3zd47D8X5thHA3nsPwZDGf6teew/+sr5Rz167D+d6z2RtXrsPxg3oI4ae+w//Cd/W2977D/hubiStnvsP+XWfGPye+w/xE++oiR87D/Z8c7ZTnzsP46GnFJyfOw/AmrxIZB87D9tXwswqXzsP5zZzT++fOw/ZazJ9M987D/grErY3nzsPwXhk13rfOw/KkJs5fV87D9bjBjB/nzsP5Ly2TQGfew/Rq4Fegx97D/vIcbAEX3sP/iNkzEWfew/hBFw7hl97D/XyPATHX3sP+pCHLoffew/dTIl9SF97D9AIAfWI33sP3z1CWslfew//GswwCZ97D9uypTfJ33sP/LFttEofew/dOy8nSl97D/BmKtJKn3sP0Uek9oqfew/KJW2VCt97D+Hday7K33sP4n/eRIsfew/jEWqWyx97D8ai2GZLH3sP8+Obc0sfew/TT1T+Sx97D/aNloeLX3sP8mAlj0tfew/Bq3wVy197D+/tixuLX3sP6PI74Atfew/EhnFkC197D9yASKeLX3sP9Jvaaktfew/S83usi197D8Zb/i6LX3sPwulwcEtfew/7nR8xy197D8GEFPMLX3sP7sNadAtfew/wHTc0y197D9mmsbWLX3sP/XePNktfew/TUxR2y197D+tGxPdLX3sP28mj94tfew/HUXQ3y197D+Zn9/gLX3sP67wxOEtfew/Gr+G4i197D+cjSrjLX3sP4cDteMtfew/9Q4q5C197D+oAY3kLX3sP1+p4OQtfew/amQn5S197D/+MmPlLX3sP9zFleUtfew/pYrA5S197D9RtuTlLX3sP/RNA+Ytfew/Ni4d5i197D+UETPmLX3sP6+VReYtfew/wj9V5i197D9xgGLmLX3sP/e2beYtfew/1DN35i197D8bO3/mLX3sP1wGhuYtfew/RcaL5i197D8ApJDmLX3sP1vClOYtfew/yz6Y5i197D84MpvmLX3sP7SxneYtfew/EM+f5i197D9hmaHmLX3sP2wdo+Ytfew/+GWk5i197D8rfKXmLX3sP71npuYtfew/OS+n5i197D8q2KfmLX3sPz1nqOYtfew/auCo5i197D8NR6nmLX3sP/udqeYtfew/n+ep5i197D//JarmLX3sP9haquYtfew/nIeq5i197D+LrarmLX3sP67NquYtfew/5+iq5i197D/6/6rmLX3sP4cTq+Ytfew/FySr5i197D8hMqvmLX3sPwg+q+Ytfew/HUir5i197D+pUKvmLX3sP+hXq+Ytfew/C16r5i197D8/Y6vmLX3sP6hnq+Ytfew/Zmur5i197D+RbqvmLX3sP0Fxq+Ytfew/iXOr5i197D94davmLX3sPxt3q+Ytfew/fnir5i197D+reavmLX3sP6p6q+Ytfew/g3ur5i197D88fKvmLX3sP9h8q+Ytfew/XH2r5i197D/NfavmLX3sPyx+q+Ytfew/fH6r5i197D/AfqvmLX3sP/t+q+Ytfew/LH+r5i197D9Wf6vmLX3sP3l/q+Ytfew/l3+r5i197D+vf6vmLX3sP8Z/q+Ytfew/2H+r5i197D/of6vmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1212"},"selection_policy":{"id":"1211"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["No Sorption","Linear Sorption"],"sizing_mode":"stretch_width"},"id":"1188","type":"RadioButtonGroup"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1161"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1163"},"nonselection_glyph":{"id":"1162"},"view":{"id":"1165"}},"id":"1164","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1054","type":"Line"},{"attributes":{"end":7},"id":"1167","type":"Range1d"},{"attributes":{"active_multi":{"id":"1113"},"tools":[{"id":"1037"},{"id":"1038"},{"id":"1039"},{"id":"1040"},{"id":"1041"},{"id":"1042"},{"id":"1113"}]},"id":"1044","type":"Toolbar"},{"attributes":{"tools":[{"id":"1146"},{"id":"1147"},{"id":"1148"},{"id":"1149"},{"id":"1150"},{"id":"1151"}]},"id":"1153","type":"Toolbar"}],"root_ids":["1020","1194","1129","1195"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"a5a47000-33fa-40bb-a79f-f0c768392084","root_ids":["1020","1194","1129","1195"],"roots":{"1020":"61537b5d-1b0e-452e-b17d-85cbd56f200a","1129":"9f952638-34aa-40d7-9a39-e7d9769b02af","1194":"35c82e9f-8d8a-42c8-ba71-5e7648730151","1195":"af9f7ed3-cfef-48ec-86c2-d3007106226b"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();