    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"efbf95c4-3984-4331-974e-4e995cc3f498":{"defs":[],"roots":{"references":[{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1100","type":"FuncTickFormatter"},{"attributes":{},"id":"1169","type":"BasicTickFormatter"},{"attributes":{"end":1.05},"id":"1092","type":"Range1d"},{"attributes":{},"id":"1170","type":"AllLabels"},{"attributes":{"source":{"id":"1003"}},"id":"1091","type":"CDSView"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1096","type":"FuncTickFormatter"},{"attributes":{"end":2.302585092994046,"format":{"id":"1094"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.009210340371976183,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1095","type":"Slider"},{"attributes":{"end":0.5,"format":{"id":"1098"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1099","type":"Slider"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1098","type":"FuncTickFormatter"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1131"},"selection_policy":{"id":"1130"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"end":43200,"format":{"id":"1096"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1097","type":"Slider"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1027","type":"BoxAnnotation"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [m2/h]&#x27;"},"id":"1102","type":"FuncTickFormatter"},{"attributes":{"end":0.2,"format":{"id":"1100"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1101","type":"Slider"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [1/h]&#x27;"},"id":"1104","type":"FuncTickFormatter"},{"attributes":{"tools":[{"id":"1072"},{"id":"1073"},{"id":"1074"},{"id":"1075"},{"id":"1076"},{"id":"1077"}]},"id":"1079","type":"Toolbar"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1102"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1103","type":"RangeSlider"},{"attributes":{"code":"return tick.toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1106","type":"FuncTickFormatter"},{"attributes":{"end":0.0,"format":{"id":"1104"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1105","type":"RangeSlider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1108","type":"FuncTickFormatter"},{"attributes":{"end":50,"format":{"id":"1106"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1107","type":"Slider"},{"attributes":{},"id":"1025","type":"ResetTool"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1110","type":"FuncTickFormatter"},{"attributes":{},"id":"1024","type":"SaveTool"},{"attributes":{"end":1,"format":{"id":"1108"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1109","type":"Slider"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1089","type":"Line"},{"attributes":{"overlay":{"id":"1027"}},"id":"1023","type":"BoxZoomTool"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1113"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1112","type":"RadioButtonGroup"},{"attributes":{},"id":"1021","type":"PanTool"},{"attributes":{"end":0.2,"format":{"id":"1110"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"BTC Location","value":0.1},"id":"1111","type":"Slider"},{"attributes":{},"id":"1125","type":"BasicTickFormatter"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1078","type":"BoxAnnotation"},{"attributes":{},"id":"1026","type":"HelpTool"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1117","type":"CustomJS"},{"attributes":{},"id":"1076","type":"ResetTool"},{"attributes":{},"id":"1018","type":"BasicTicker"},{"attributes":{},"id":"1126","type":"AllLabels"},{"attributes":{},"id":"1075","type":"SaveTool"},{"attributes":{"args":{"BTClocation":{"id":"1053"},"Lcube1":[[0.4877171637640413],[0.11835243285513332],[0.7886399726679203],[0.5283458038306019],[0.5654391236340836],[0.5158534976047828],[0.4680480724155842],[0.274498923111937],[0.37351876352699676],[0.4498793026744806],[0.5436984114282684],[0.12808601046393384],[0.6433287570998985],[0.9604468384992004],[0.014591408324116642],[0.6893354054651862],[0.5880169098818687],[0.6109034585067485],[0.6587357575732373],[0.45458578464159033],[0.8065577519359982],[0.20245525205359347],[0.048411949965622945],[0.5378168836481367],[0.8828549445928706],[0.4225042423075616],[0.05052648517071759],[0.7102944229115331],[0.5931728542215344],[0.624512086711622],[0.7546887867038424],[0.2473144286831112],[0.2976682256183484],[0.9582044514353615],[0.3667922112428385],[0.3241103123073269],[0.3897208626545996],[0.22705532816933485],[0.8749004931233749],[0.0922486196222444],[0.2680157257129315],[0.8357131399978815],[0.43251629211084264],[0.13665420788654783],[0.8562527893603764],[0.23587821037078566],[0.5792060572172513],[0.02256069839592969],[0.7747440584523284],[0.06357614000599979],[0.08224904313759146],[0.6741082274805682],[0.17452423532186817],[0.9398290308571078],[0.39724153400702106],[0.4725277069282987],[0.8178586691349551],[0.1590285083311853],[0.8617586268973497],[0.2838276611651306],[0.9425145192330074],[0.9182561818367411],[0.724669657893955],[0.030552546314997233],[0.8474711246218513],[0.18948081892604043],[0.5067680992666174],[0.7602265259992759],[0.6659159314920045],[0.6967526854542114],[0.14216830608273],[0.9721895780735563],[0.41697001931622846],[0.1971374650319503],[0.16604299511205448],[0.5548167139777983],[0.3326197953523631],[0.10833813456433865],[0.2189831223065345],[0.307332905569647],[0.35662530755127153],[0.7028654229860709],[0.7934905325215769],[0.49828214095287904],[0.2516406697929605],[0.008269701744238474],[0.6087191008763577],[0.7480595303166409],[0.7381673951555072],[0.6333347263722706],[0.988597646038593],[0.9073287564162036],[0.8258895593375807],[0.9997226872087575],[0.3471182587146965],[0.9282429437901476],[0.07835066517408931],[0.40645243552893995],[0.3142349474799991],[0.8958648804791524]],"Lcube2":[[0.14129761009799593],[0.3381595039338602],[0.8990275746997725],[0.9208816546177103],[0.11970120542856824],[0.818801111954341],[0.46651024342649705],[0.6743698071037595],[0.9699068981506176],[0.49465111015030205],[0.7544564274536918],[0.012509771361327084],[0.6469671102565527],[0.866523698691976],[0.6100936048971025],[0.69232905327797],[0.8554771008270127],[0.41362699566124855],[0.4521475114751762],[0.15886972889237017],[0.27711818022703566],[0.9042108851052773],[0.9171086585404165],[0.688112241534101],[0.9953023283891512],[0.7734959826807624],[0.764176110022744],[0.17259043156267956],[0.8208119733588077],[0.3107418810606631],[0.8472353517971867],[0.21898073839168986],[0.5258095291863977],[0.32520040267031425],[0.6241514035630766],[0.0728520685272333],[0.6587587667137238],[0.5765228157580402],[0.04318189887938444],[0.971578344156477],[0.43836782072483355],[0.05312889392080826],[0.3506520040329709],[0.4483760078082017],[0.030224169636259485],[0.10273163639563274],[0.9873281606125204],[0.40170318945412625],[0.19274115742587072],[0.22150706436206746],[0.8818043701713697],[0.4834635799961726],[0.295359108437921],[0.512462300819103],[0.5365021029985498],[0.5678035913236538],[0.6633726986152918],[0.9385564916150522],[0.18282407044997506],[0.7099785580628282],[0.09548552292141017],[0.25251496295072823],[0.16104015630700172],[0.7379334711919117],[0.9428875609384652],[0.26555130027662566],[0.23407087651335318],[0.7176480956338414],[0.8351343810510565],[0.7898247331827021],[0.3762354309159337],[0.021880114400572182],[0.28150757551097594],[0.5521693585275523],[0.542957031849447],[0.47009416830294515],[0.3803246782805341],[0.06351468222559822],[0.8777628591838229],[0.8018359186970743],[0.5980200433698692],[0.0003899854339296793],[0.7497983975611922],[0.5091349780588091],[0.7280220652386972],[0.36733611273722133],[0.13731184894935328],[0.6030559119716985],[0.3429872041834383],[0.587088958302374],[0.20098975976875252],[0.4268255736483222],[0.2457682195745439],[0.08375056934744936],[0.12629806967979276],[0.303514552052436],[0.7924969921700422],[0.3981177275401322],[0.6329067393071299],[0.9572409320031077]],"col_len_sl":{"id":"1099"},"col_rad_sl":{"id":"1101"},"disp_sl":{"id":"1103"},"flow_sl":{"id":"1107"},"pore_vol_sl":{"id":"1095"},"poros_sl":{"id":"1109"},"pulse_inj_sl":{"id":"1097"},"rbgr":{"id":"1112"},"reac_sl":{"id":"1105"},"source1":{"id":"1002"},"source2":{"id":"1003"},"xBTC_sl":{"id":"1111"}},"code":"function getc_cont(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        c[i] = 1\\n        cmin[i] = 1\\n        cmax[i] = 1\\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n\\n            intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n          }\\n        c[i]    = math.mean(intlist)\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n    }\\n  }\\n  return [c, cmin, cmax]\\n}\\n\\nfunction getc_pulse(x,vel,t,w,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        c[i] = 1\\n        cmin[i] = 1\\n        cmax[i] = 1\\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n\\n            intlist[j] = 1/2 * (math.erf((x[i] + w/2 - vel*t)/(math.sqrt(4*D_intermed*t))) - math.erf((x[i]- w/2 - vel*t)/(math.sqrt(4*D_intermed*t))))*math.exp(-r_intermed*x[i]/vel);\\n          }\\n        c[i]    = math.mean(intlist)\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n    }\\n  }\\n  return [c, cmin, cmax]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_cont_BTC(xBTC,vel,tsp,gam,D) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      c[i] = 1/2 * Math.exp(xBTC*vel/(2*D))*(Math.exp((-xBTC)*vel*gam/(2*D))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i])))+math.exp(xBTC*vel*gam/(2*D))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i]))));\\n  }\\n  return c\\n}\\n\\nfunction getc_pulse_BTC(xBTC,vel,tsp,reac,w,D) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      c[i] = 1/2 * (math.erf((xBTC + w/2 - vel*tsp[i])/(math.sqrt(4*D*tsp[i]))) - math.erf((xBTC- w/2 - vel*tsp[i])/(math.sqrt(4*D*tsp[i]))))*math.exp(-reac*xBTC/vel);\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(reac,Dis,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)\\n  return res\\n}\\n\\nfunction transport_num(c,disp,dx,dt){\\n  // This function approximates advection and dispersion numerically by a FVM\\n\\n  // Move concentration by 1 cell\\n  for (let i = 0; i &lt; c.length-1; i++) {\\n    c[i+1] = c[i]\\n  }\\n  // First cell gets inlet concentration\\n  c[1] = 1\\n  var Jd = []\\n  // Dispersive fluxes between cells\\n  for (let i = 0; i &lt; c.length+1; i++) {\\n    if (i == 0) {\\n      Jd[i] = 0\\n    } else if (i == c.length) {\\n      Jd[i] = Jd[i-1]\\n    } else {\\n      Jd[i] = (c[i-1] - c[i])/dx*disp\\n    }\\n  }\\n\\n  for (let i = 0; i &lt; Jd.length-1; i++) {\\n    c[i] = c[i] + dt/dx * (Jd[i] - Jd[i+1])\\n  }\\n}\\n\\n\\n// Extracting slider values\\nconst col_len   = col_len_sl.value;\\nconst xBTC      = xBTC_sl.value;\\nconst rad       = col_rad_sl.value;\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;\\nconst Q         = flow_sl.value;\\nconst n         = poros_sl.value;\\nconst tPV       = Math.exp(pore_vol_sl.value);\\nconst t_w       = pulse_inj_sl.value\\nconst rg        = rbgr.active\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\n\\n// Concentration lists for different parameter combinations\\nvar c_ll= []\\nvar c_lh= []\\nvar c_hl= []\\nvar c_hh= []\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cBTX = []\\n\\n// List for timespan (needed for BTC)\\nconst tsp = []\\nconst c0  = 1;\\n\\nconst reac= (reac_l + reac_h)/2\\nconst Dis = (disp_l + disp_h)/2\\n\\nconst A       = math.PI * rad**2;            \\nconst vel     = Q/1000/1000/3600/A;\\nconst sep_vel = vel * n  \\nconst PS      = col_len * A * n \\nconst PV      = PS / (A*vel) //normal velocity is needed, not seepage velocity tp obtain flux \\nconst t       = tPV * PV\\nconst w       = sep_vel * t_w\\n\\nconst gam     = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)  \\nconst gam_ll  = Math.sqrt(1 + 4 * reac_l * disp_l / sep_vel**2)  \\nconst gam_lh  = Math.sqrt(1 + 4 * reac_l * disp_h / sep_vel**2)  \\nconst gam_hl  = Math.sqrt(1 + 4 * reac_h * disp_l / sep_vel**2)  \\nconst gam_hh  = Math.sqrt(1 + 4 * reac_h * disp_h / sep_vel**2)  \\n\\n\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n\\nif (rg==0) {\\n  // Continuous Injection\\n  [c, cmin, cmax] = getc_cont(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h)\\n  cBTX = getc_cont_BTC(xBTC,sep_vel,tsp,gam,Dis)\\n  pulse_inj_sl.visible = false \\n} else {\\n  // Pulse Injection\\n  [c, cmin, cmax] = getc_pulse(x,vel,t,w,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h)\\n  cBTX = getc_pulse_BTC(xBTC,sep_vel,tsp,reac,w,Dis)\\n  pulse_inj_sl.visible = true\\n}\\n    \\n// We have to loop through all indicies\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n}\\n\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nxBTC_sl.end       = col_len_sl.value;\\nBTClocation.location = xBTC\\n\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1113","type":"CustomJS"},{"attributes":{"axis":{"id":"1017"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1020","type":"Grid"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1038","type":"Line"},{"attributes":{},"id":"1128","type":"BasicTickFormatter"},{"attributes":{"tools":[{"id":"1021"},{"id":"1022"},{"id":"1023"},{"id":"1024"},{"id":"1025"},{"id":"1026"}]},"id":"1028","type":"Toolbar"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1117"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1116","type":"Button"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1125"},"group":null,"major_label_policy":{"id":"1126"},"major_label_text_font_size":"12pt","ticker":{"id":"1018"}},"id":"1017","type":"LinearAxis"},{"attributes":{},"id":"1129","type":"AllLabels"},{"attributes":{"source":{"id":"1002"}},"id":"1040","type":"CDSView"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1115","type":"CustomJS"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1087"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1089"},"nonselection_glyph":{"id":"1088"},"view":{"id":"1091"}},"id":"1090","type":"GlyphRenderer"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1115"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1114","type":"Button"},{"attributes":{},"id":"1146","type":"UnionRenderers"},{"attributes":{"overlay":{"id":"1078"}},"id":"1074","type":"BoxZoomTool"},{"attributes":{},"id":"1009","type":"LinearScale"},{"attributes":{},"id":"1072","type":"PanTool"},{"attributes":{},"id":"1147","type":"Selection"},{"attributes":{"axis":{"id":"1013"},"coordinates":null,"group":null,"ticker":null},"id":"1016","type":"Grid"},{"attributes":{},"id":"1077","type":"HelpTool"},{"attributes":{"children":[{"id":"1112"},{"id":"1095"},{"id":"1099"},{"id":"1101"},{"id":"1105"},{"id":"1103"},{"id":"1107"},{"id":"1109"},{"id":"1111"},{"id":"1097"}],"sizing_mode":"stretch_width"},"id":"1118","type":"Column"},{"attributes":{},"id":"1014","type":"BasicTicker"},{"attributes":{"data":{"x2":{"__ndarray__":"/anx0k1iUD+G87Yt8jyqP94sa/Zo+7k//G/9aixswz+KScVapNrJP4yRRiWOJNA/Un4qHcpb0z8Zaw4VBpPWP+BX8gxCytk/p0TWBH4B3T+3GF3+XBzgPxoPT/r6t+E/fQVB9phT4z/h+zLyNu/kP0TyJO7UiuY/qOgW6nIm6D8L3wjmEMLpP27V+uGuXes/0svs3Uz57D81wt7Z6pTuP0xc6GpEGPA/fVfhaBPm8D+vUtpm4rPxP+FN02SxgfI/EknMYoBP8z9ERMVgTx30P3Y/vl4e6/Q/qDq3XO249T/ZNbBavIb2PwsxqViLVPc/PSyiVloi+D9uJ5tUKfD4P6AilFL4vfk/0h2NUMeL+j8DGYZOlln7PzUUf0xlJ/w/Zw94SjT1/D+YCnFIA8P9P8oFakbSkP4//ABjRKFe/z8X/i0hOBYAQLB7KqAffQBASPkmHwfkAEDhdiOe7koBQHr0Hx3WsQFAE3IcnL0YAkCs7xgbpX8CQEVtFZqM5gJA3eoRGXRNA0B2aA6YW7QDQA/mChdDGwRAqGMHliqCBEBB4QMVEukEQNpeAJT5TwVAc9z8EuG2BUALWvmRyB0GQKTX9RCwhAZAPVXyj5frBkDW0u4Of1IHQG9Q641muQdACM7nDE4gCECgS+SLNYcIQDnJ4Aod7ghA0kbdiQRVCUBrxNkI7LsJQARC1ofTIgpAnb/SBruJCkA2Pc+FovAKQM66ywSKVwtAZzjIg3G+C0AAtsQCWSUMQJkzwYFAjAxAMrG9ACjzDEDLLrp/D1oNQGOstv72wA1A/Cmzfd4nDkCVp6/8xY4OQC4lrHut9Q5Ax6Ko+pRcD0BgIKV5fMMPQP3OUPwxFRBAyQ3Pu6VIEECWTE17GXwQQGKLyzqNrxBALspJ+gDjEED7CMi5dBYRQMdHRnnoSRFAlIbEOFx9EUBgxUL4z7ARQC0EwbdD5BFA+UI/d7cXEkDFgb02K0sSQJLAO/aefhJAXv+5tRKyEkArPjh1huUSQPd8tjT6GBNAw7s09G1ME0CQ+rKz4X8TQFw5MXNVsxNAKXivMsnmE0D1ti3yPBoUQML1q7GwTRRAjjQqcSSBFEBac6gwmLQUQCeyJvAL6BRA8/Ckr38bFUDALyNv804VQIxuoS5nghVAWa0f7tq1FUAl7J2tTukVQPEqHG3CHBZAvmmaLDZQFkCKqBjsqYMWQFfnlqsdtxZAIyYVa5HqFkDwZJMqBR4XQLyjEep4URdAiOKPqeyEF0BVIQ5pYLgXQCFgjCjU6xdA7p4K6EcfGEC63Yinu1IYQIYcB2cvhhhAU1uFJqO5GEAfmgPmFu0YQOzYgaWKIBlAuBcAZf5TGUCFVn4kcocZQFGV/OPluhlAHdR6o1nuGUDqEvlizSEaQLZRdyJBVRpAg5D14bSIGkBPz3OhKLwaQBwO8mCc7xpA6ExwIBAjG0C0i+7fg1YbQIHKbJ/3iRtATQnrXmu9G0AaSGke3/AbQOaG591SJBxAssVlncZXHEB/BORcOoscQEtDYhyuvhxAGILg2yHyHEDkwF6blSUdQLH/3FoJWR1AfT5bGn2MHUBJfdnZ8L8dQBa8V5lk8x1A4vrVWNgmHkCvOVQYTFoeQHt40te/jR5ASLdQlzPBHkAU9s5Wp/QeQOA0TRYbKB9ArXPL1Y5bH0B5skmVAo8fQEbxx1R2wh9AEjBGFOr1H0BvN+LprhQgQNVWocloLiBAO3ZgqSJIIEChlR+J3GEgQAi13miWeyBAbtSdSFCVIEDU81woCq8gQDoTHAjEyCBAoDLb533iIEAHUprHN/wgQG1xWafxFSFA05AYh6svIUA5sNdmZUkhQJ/PlkYfYyFABu9VJtl8IUBsDhUGk5YhQNIt1OVMsCFAOE2TxQbKIUCfbFKlwOMhQAWMEYV6/SFAa6vQZDQXIkDRyo9E7jAiQDfqTiSoSiJAngkOBGJkIkAEKc3jG34iQGpIjMPVlyJA0GdLo4+xIkA2hwqDScsiQJ2myWID5SJAA8aIQr3+IkBp5UcidxgjQM8EBwIxMiNANSTG4epLI0CcQ4XBpGUjQAJjRKFefyNAaIIDgRiZI0DOocJg0rIjQDXBgUCMzCNAm+BAIEbmI0ABAAAAAAAkQA==","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"6y6wElsolD9axfnVnuCYP1jG59inXZ4/1sYmDJdWoj/DJDm2U+2lP3ByKL9k96k/ZlOEVY13rj+yPTumZbexP1bUPZwabrQ/wX/H7HJetz8gdfLg+oW6P8u3BstB4b0/IOWarPK1wD9eXEPeUZDCPzmS6wO6fMQ/kw8Y+9F3xj8C38MO/X3IPy9dIrpti8o/PPFifjmczD8g9EsxbazOP+/HEpYQXNA/rbuDZMZd0T+tOstTjFnSP9BOd6C3TdM/BYQTssU41D//iGkkYhnVP06WNX1r7tU/97D0eva21j+bYrz0T3LXPwiAHE79H9g/lTiYjLu/2D+XoQUmfVHZP1T62adm1dk/6mTbXspL2j+Z0qwsI7XaP/dUBb0OEts/7lkCT0dj2z+nONJHnanbPwO17cLw5ds/RltHUSsZ3D96nVsUOkTcP2UPE1wIaNw/Lzcx53qF3D9HlObda53cPxalaZWnsNw/2TSgIuq/3D+zkUu53cvcP8fMQM0Z1dw/wxla5CLc3D8uJ1ACa+HcP7cgxJNS5dw/1k6Uuyno3D9fmR/lMercP09BQ3+f69w/midqxpvs3D8i0KeHRu3cPyb8Ncu37dw/PyJfWQHu3D+dXIoRMO7cP2Otag9N7tw/nooCnl7u3D9KeBP7aO7cP5KDnu9u7tw/xv1SQ3Lu3D/ty0QRdO7cP0+xJwR17tw/DBHEf3Xu3D80sY68de7cPywdZtl17tw/u0eT5nXu3D8/blzsde7cPxFGzO517tw/kcjH73Xu3D8AoSjwde7cP6ApTPB17tw/QI5Y8HXu3D9bp1zwde7cP2TvXfB17tw/GVBe8HXu3D/mal7wde7cP91xXvB17tw/jXNe8HXu3D/vc17wde7cPwN0XvB17tw/B3Re8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1147"},"selection_policy":{"id":"1146"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{},"id":"1069","type":"BasicTicker"},{"attributes":{"axis":{"id":"1068"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1071","type":"Grid"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1166"},"group":null,"major_label_policy":{"id":"1167"},"major_label_text_font_size":"12pt","ticker":{"id":"1069"}},"id":"1068","type":"LinearAxis"},{"attributes":{},"id":"1073","type":"WheelZoomTool"},{"attributes":{"axis":{"id":"1064"},"coordinates":null,"group":null,"ticker":null},"id":"1067","type":"Grid"},{"attributes":{},"id":"1130","type":"UnionRenderers"},{"attributes":{},"id":"1065","type":"BasicTicker"},{"attributes":{},"id":"1022","type":"WheelZoomTool"},{"attributes":{"coordinates":null,"group":null},"id":"1163","type":"Title"},{"attributes":{},"id":"1062","type":"LinearScale"},{"attributes":{"children":[{"id":"1114"},{"id":"1116"}],"sizing_mode":"stretch_width"},"id":"1119","type":"Column"},{"attributes":{},"id":"1131","type":"Selection"},{"attributes":{"end":8},"id":"1093","type":"Range1d"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1094","type":"FuncTickFormatter"},{"attributes":{"below":[{"id":"1064"}],"center":[{"id":"1067"},{"id":"1071"}],"left":[{"id":"1068"}],"min_height":400,"renderers":[{"id":"1090"}],"sizing_mode":"stretch_both","title":{"id":"1163"},"toolbar":{"id":"1079"},"x_range":{"id":"1093"},"x_scale":{"id":"1060"},"y_range":{"id":"1092"},"y_scale":{"id":"1062"}},"id":"1055","subtype":"Figure","type":"Plot"},{"attributes":{"end":1.05},"id":"1054","type":"Range1d"},{"attributes":{"coordinates":null,"dimension":"height","group":null,"line_color":"blue","line_dash":[6],"line_width":3,"location":0.1},"id":"1053","type":"Span"},{"attributes":{"source":{"id":"1002"}},"id":"1052","type":"CDSView"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1169"},"group":null,"major_label_policy":{"id":"1170"},"major_label_text_font_size":"12pt","ticker":{"id":"1065"}},"id":"1064","type":"LinearAxis"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1050","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1048"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1050"},"nonselection_glyph":{"id":"1049"},"view":{"id":"1052"}},"id":"1051","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1088","type":"Line"},{"attributes":{"below":[{"id":"1013"}],"center":[{"id":"1016"},{"id":"1020"},{"id":"1053"}],"left":[{"id":"1017"}],"min_height":400,"renderers":[{"id":"1039"},{"id":"1045"},{"id":"1051"}],"sizing_mode":"stretch_both","title":{"id":"1122"},"toolbar":{"id":"1028"},"x_range":{"id":"1005"},"x_scale":{"id":"1009"},"y_range":{"id":"1054"},"y_scale":{"id":"1011"}},"id":"1004","subtype":"Figure","type":"Plot"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1048","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1046","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1036","type":"Line"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1043","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1036"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1038"},"nonselection_glyph":{"id":"1037"},"view":{"id":"1040"}},"id":"1039","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"group":null},"id":"1122","type":"Title"},{"attributes":{},"id":"1060","type":"LinearScale"},{"attributes":{},"id":"1011","type":"LinearScale"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1042","type":"Line"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1087","type":"Line"},{"attributes":{},"id":"1166","type":"BasicTickFormatter"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1128"},"group":null,"major_label_policy":{"id":"1129"},"major_label_text_font_size":"12pt","ticker":{"id":"1014"}},"id":"1013","type":"LinearAxis"},{"attributes":{},"id":"1005","type":"DataRange1d"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1042"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1044"},"nonselection_glyph":{"id":"1043"},"view":{"id":"1046"}},"id":"1045","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1049","type":"Line"},{"attributes":{},"id":"1167","type":"AllLabels"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1044","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1037","type":"Line"}],"root_ids":["1004","1118","1055","1119"]},"title":"Bokeh Application","version":"2.4.1"}}';
                const render_items = [{"docid":"efbf95c4-3984-4331-974e-4e995cc3f498","root_ids":["1004","1118","1055","1119"],"roots":{"1004":"6647e7ae-2b83-4791-a5a8-c9918a214625","1055":"a6475b9b-b600-47e6-9b68-685c67ea63db","1118":"bfa01e31-7f38-432a-9d0f-f2a93cdae3ea","1119":"faefb2ff-ae6b-4ecd-bda8-3ad43ab2a9f9"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();