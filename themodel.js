    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"71be995f-a7d0-4308-be1b-e4d43ade1db0":{"defs":[],"roots":{"references":[{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1167"},"group":null,"major_label_policy":{"id":"1168"},"major_label_text_font_size":"12pt","ticker":{"id":"1087"}},"id":"1086","type":"LinearAxis"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1110","type":"Line"},{"attributes":{},"id":"1082","type":"LinearScale"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1118","type":"FuncTickFormatter"},{"attributes":{},"id":"1084","type":"LinearScale"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1043"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1045"},"nonselection_glyph":{"id":"1044"},"view":{"id":"1047"}},"id":"1046","type":"GlyphRenderer"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1132","type":"FuncTickFormatter"},{"attributes":{},"id":"1087","type":"BasicTicker"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{"axis":{"id":"1086"},"coordinates":null,"group":null,"ticker":null},"id":"1089","type":"Grid"},{"attributes":{},"id":"1095","type":"WheelZoomTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1164"},"group":null,"major_label_policy":{"id":"1165"},"major_label_text_font_size":"12pt","ticker":{"id":"1091"}},"id":"1090","type":"LinearAxis"},{"attributes":{"axis":{"id":"1090"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1093","type":"Grid"},{"attributes":{},"id":"1091","type":"BasicTicker"},{"attributes":{},"id":"1099","type":"HelpTool"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{},"id":"1094","type":"PanTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1056"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1058"},"nonselection_glyph":{"id":"1057"},"view":{"id":"1060"}},"id":"1059","type":"GlyphRenderer"},{"attributes":{"overlay":{"id":"1100"}},"id":"1096","type":"BoxZoomTool"},{"attributes":{},"id":"1097","type":"SaveTool"},{"attributes":{},"id":"1098","type":"ResetTool"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1043","type":"Line"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1161"},"selection_policy":{"id":"1160"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1037","type":"Line"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1074"},"selection_policy":{"id":"1073"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1100","type":"BoxAnnotation"},{"attributes":{"source":{"id":"1003"}},"id":"1113","type":"CDSView"},{"attributes":{"tools":[{"id":"1094"},{"id":"1095"},{"id":"1096"},{"id":"1097"},{"id":"1098"},{"id":"1099"}]},"id":"1101","type":"Toolbar"},{"attributes":{"overlay":{"id":"1028"}},"id":"1024","type":"BoxZoomTool"},{"attributes":{"end":7},"id":"1115","type":"Range1d"},{"attributes":{},"id":"1012","type":"LinearScale"},{"attributes":{"end":50,"format":{"id":"1130"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1131","type":"Slider"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1038","type":"Line"},{"attributes":{},"id":"1025","type":"SaveTool"},{"attributes":{"axis":{"id":"1014"},"coordinates":null,"group":null,"ticker":null},"id":"1017","type":"Grid"},{"attributes":{},"id":"1026","type":"ResetTool"},{"attributes":{},"id":"1015","type":"BasicTicker"},{"attributes":{"end":43200,"format":{"id":"1120"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1121","type":"Slider"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1049","type":"Line"},{"attributes":{"end":0.5,"format":{"id":"1122"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1123","type":"Slider"},{"attributes":{"code":"return tick.toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1130","type":"FuncTickFormatter"},{"attributes":{"source":{"id":"1002"}},"id":"1053","type":"CDSView"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1126"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1127","type":"RangeSlider"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1056","type":"Scatter"},{"attributes":{"source":{"id":"1004"}},"id":"1060","type":"CDSView"},{"attributes":{"end":0.0,"format":{"id":"1128"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1129","type":"RangeSlider"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [1/h]&#x27;"},"id":"1128","type":"FuncTickFormatter"},{"attributes":{"end":0.2,"format":{"id":"1124"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1125","type":"Slider"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1028","type":"BoxAnnotation"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1120","type":"FuncTickFormatter"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1138"}]},"labels":["Analytical Model","Numerical Model"],"sizing_mode":"stretch_width"},"id":"1137","type":"RadioButtonGroup"},{"attributes":{"end":1.05,"start":-0.03},"id":"1054","type":"Range1d"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{},"id":"1164","type":"BasicTickFormatter"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1142","type":"CustomJS"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{},"id":"1165","type":"AllLabels"},{"attributes":{"args":{"BTCp":{"id":"1077"},"Lcube1":[[0.043936769472215496],[0.3843307486456195],[0.5865249358672178],[0.502585705179541],[0.4561176440083406],[0.9095581043128699],[0.8910806313110536],[0.31242830284928347],[0.23519009217356412],[0.9943286810381256],[0.13520797928435202],[0.9334516016775773],[0.2814498850216104],[0.4191973530702932],[0.6369157383335105],[0.39622155586699637],[0.6495044396538083],[0.6620520591355143],[0.6008981230859645],[0.29876422192453583],[0.14236124795440883],[0.5660881154994394],[0.022737830702770023],[0.9816903894756993],[0.7053040889987733],[0.5407785137956218],[0.7792954256944131],[0.7474942260054562],[0.2033448000119803],[0.5739977807356488],[0.8575573283749375],[0.5260060862768948],[0.08604598626834951],[0.4012595028759021],[0.922976656001898],[0.7391657889684764],[0.36605211854895187],[0.2701661834367916],[0.2202888699416786],[0.9638730152419026],[0.015641085268306064],[0.33435859842792703],[0.7915950608320727],[0.24190449018879234],[0.030172210272049936],[0.6141885461556709],[0.7178895721353272],[0.1888543186378752],[0.44119622731208225],[0.8643192454128471],[0.06910784540545463],[0.5374685601251039],[0.30208877896750336],[0.8358955227484475],[0.4290151985710373],[0.8140630906002445],[0.0916159318934188],[0.11826888272564105],[0.8074048368038246],[0.26815085342056677],[0.9142141849082077],[0.5550868378294199],[0.48668407704311756],[0.055525045910459286],[0.43830036915549614],[0.9738474588714005],[0.46798143180142],[0.16006126559051947],[0.17730607940623724],[0.10768299847322586],[0.8427593609386874],[0.1259254514948499],[0.2549182629580183],[0.3478083666880874],[0.6215697956322098],[0.75005933164745],[0.8250307740774242],[0.7876373405096632],[0.37709053625046307],[0.7654138788619186],[0.9434713674914681],[0.15319886324239765],[0.6812780655023581],[0.6563133774042947],[0.07956416144157441],[0.514839474646986],[0.47001947635613134],[0.8767864884963552],[0.21938216844944264],[0.4965258838472069],[0.6798146029496733],[0.35568813363630125],[0.9588462443393516],[0.7299889887885908],[0.32091445415023],[0.6981089998828583],[0.8891622066104847],[0.19050650226016613],[0.00952131847128008],[0.5942178113624513]],"Lcube2":[[0.7824221359560029],[0.651732405799402],[0.9979150075547955],[0.9145052996230786],[0.11182893810053159],[0.15186799010531624],[0.7555229931828427],[0.8911271689044729],[0.14963487659714236],[0.49874426865511445],[0.959787429510187],[0.013185416325588546],[0.8162894022649596],[0.23595122176351072],[0.21395468550506408],[0.39221647771436774],[0.40217462454915776],[0.1983166731611043],[0.42677396324914324],[0.2765835953562871],[0.024360114419741858],[0.3006866427067488],[0.3157263948909551],[0.7692412006446571],[0.4397615233175828],[0.2831871474525255],[0.35105946610979033],[0.46144533728755016],[0.18480135569788292],[0.05277045496804745],[0.2559914244765168],[0.5163067377709569],[0.9353721123894491],[0.7989491032904015],[0.36710841377679143],[0.3444044665068066],[0.5261293873656796],[0.7062711683716303],[0.8646090511163552],[0.8418570270939186],[0.38453555858789246],[0.13318080091052625],[0.7442554886385782],[0.3337784262777524],[0.6945897056174298],[0.12721492896429482],[0.2662171253141434],[0.88025828688559],[0.9050549056654767],[0.8259960052270527],[0.5866605804708239],[0.2287937552742005],[0.6777911468279246],[0.2958046462016492],[0.9747404923636026],[0.9821162646177811],[0.5368371634039178],[0.8769238647964501],[0.16826498316435504],[0.4478687538173463],[0.0777534244578722],[0.5452030106921185],[0.45720462249618704],[0.4714416158403801],[0.735929190109142],[0.3230849587398297],[0.8515095003039737],[0.6186534360187114],[0.37497051594488584],[0.7708831253274805],[0.06793633579807624],[0.17102543953673643],[0.48198619279106786],[0.7225756460364369],[0.41135674865644345],[0.8348480720800293],[0.048781266735790335],[0.5512176140910799],[0.20055185752968582],[0.9623582855263016],[0.6235914417484163],[0.03211234730411507],[0.6052213829232465],[0.5946793006533526],[0.6654091858171559],[0.009916108845487503],[0.10882005518338164],[0.24503251153812777],[0.7136084244256861],[0.5036348933514622],[0.6877037630984212],[0.9462353478569311],[0.5686990749060565],[0.5712662451074816],[0.6422710990295504],[0.08387356042476628],[0.8033323578661908],[0.09112171407412875],[0.9254661854272888],[0.6377127340224206]],"col_len_sl":{"id":"1123"},"col_rad_sl":{"id":"1125"},"disp_sl":{"id":"1127"},"flow_sl":{"id":"1131"},"pore_vol_sl":{"id":"1119"},"poros_sl":{"id":"1133"},"pulse_inj_sl":{"id":"1121"},"reac_sl":{"id":"1129"},"rg_AN":{"id":"1137"},"rg_CP":{"id":"1136"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"},"xBTC_sl":{"id":"1135"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var r_mean = (reac_l+reac_h)/2\\n  var D_mean = (disp_l+disp_h)/2\\n  var gam_mean = get_gamma(r_mean,D_mean,vel)\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        c[i] = 1\\n        cmin[i] = 1\\n        cmax[i] = 1\\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg == 1) {\\n              // Pulse injection\\n              if (t&lt;t_inj) {\\n                intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n              } else {\\n                intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n              }\\n            } else {\\n              // Cotinuous injection\\n              intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        if (rg==1){\\n          // Pulse injection\\n          if (t&lt;t_inj) {\\n            c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n          } else {\\n            c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))));\\n          }\\n        } else {\\n          // Continuous injection\\n          c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n        }\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n    }\\n  }\\n  return [c, cmin, cmax]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg==1){\\n        // Pulse injection |this produces negative values in the begining\\n        if (tsp[i]&lt;t_inj) {\\n          c[i] = 1/2 * (1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n        } else {\\n          c[i] = 1/2 * ((1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n        }\\n      } else {\\n        // Continuous injection\\n        c[i] = 1/2 * Math.exp(xBTC*vel/(2*D))*(Math.exp((-xBTC)*vel*gam/(2*D))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i])))+math.exp(xBTC*vel*gam/(2*D))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i]))));\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(reac,Dis,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)\\n  return res\\n}\\n\\nfunction transport_num(c,disp,dx,dt){\\n  // This function approximates advection and dispersion numerically by a FVM\\n\\n  // Move concentration by 1 cell\\n  for (let i = 0; i &lt; c.length-1; i++) {\\n    c[i+1] = c[i]\\n  }\\n  // First cell gets inlet concentration\\n  c[1] = 1\\n  var Jd = []\\n  // Dispersive fluxes between cells\\n  for (let i = 0; i &lt; c.length+1; i++) {\\n    if (i == 0) {\\n      Jd[i] = 0\\n    } else if (i == c.length) {\\n      Jd[i] = Jd[i-1]\\n    } else {\\n      Jd[i] = (c[i-1] - c[i])/dx*disp\\n    }\\n  }\\n\\n  for (let i = 0; i &lt; Jd.length-1; i++) {\\n    c[i] = c[i] + dt/dx * (Jd[i] - Jd[i+1])\\n  }\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\n// Extracting slider values\\nconst col_len   = col_len_sl.value;                 // [m]\\nvar xBTC      = x3[0];                         // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nconst rg        = rg_CP.active                      // [false]\\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cBTX = []\\nvar tsp = []\\n\\nconst c0      = 1;                            // [-]\\nconst reac    = (reac_l + reac_h)/2           // [1/s]\\nconst Dis     = (disp_l + disp_h)/2           // [m2/s]\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel * n                       // [m/s]   \\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = PS / (A*vel)                  // [s] VEL oder SEP_VEL?\\nconst t       = tPV * PV                      // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)  \\n\\n// Fix Point draw tool to x-axis and limit to y-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.005) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,Dis) \\n}\\n\\n    \\n// We have to loop through all indicies\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n}\\n\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nxBTC_sl.end       = col_len_sl.value;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27;m (Drag diamond in upper plot to change)&#x27;\\n\\n\\nif (rg==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\n\\nconsole.log((xBTC-sep_vel*tsp[100]*gam)/math.sqrt(4*Dis*tsp[100]))\\nconsole.log(tsp[100])\\n//console.log(sep_vel)\\n//console.log(Dis)\\n\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1138","type":"CustomJS"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1142"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1141","type":"Button"},{"attributes":{},"id":"1167","type":"BasicTickFormatter"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1057","type":"Scatter"},{"attributes":{"num_objects":1,"renderers":[{"id":"1059"}]},"id":"1061","type":"PointDrawTool"},{"attributes":{},"id":"1168","type":"AllLabels"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1140","type":"CustomJS"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1140"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1139","type":"Button"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1051","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1041","type":"CDSView"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1049"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1051"},"nonselection_glyph":{"id":"1050"},"view":{"id":"1053"}},"id":"1052","type":"GlyphRenderer"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1058","type":"Scatter"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1111","type":"Line"},{"attributes":{"active_multi":{"id":"1061"},"tools":[{"id":"1022"},{"id":"1023"},{"id":"1024"},{"id":"1025"},{"id":"1026"},{"id":"1027"},{"id":"1061"}]},"id":"1029","type":"Toolbar"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1134","type":"FuncTickFormatter"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1138"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1136","type":"RadioButtonGroup"},{"attributes":{"end":1,"format":{"id":"1132"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1133","type":"Slider"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1039","type":"Line"},{"attributes":{},"id":"1073","type":"UnionRenderers"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1037"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1039"},"nonselection_glyph":{"id":"1038"},"view":{"id":"1041"}},"id":"1040","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1044","type":"Line"},{"attributes":{},"id":"1074","type":"Selection"},{"attributes":{"below":[{"id":"1014"}],"center":[{"id":"1017"},{"id":"1021"}],"js_event_callbacks":{"pan":[{"id":"1138"}],"tap":[{"id":"1138"}]},"left":[{"id":"1018"}],"min_height":400,"renderers":[{"id":"1040"},{"id":"1046"},{"id":"1052"},{"id":"1059"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1029"},"x_range":{"id":"1006"},"x_scale":{"id":"1010"},"y_range":{"id":"1054"},"y_scale":{"id":"1012"}},"id":"1005","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1010","type":"LinearScale"},{"attributes":{"end":0.2,"format":{"id":"1134"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"BTC Location","value":0.1},"id":"1135","type":"Slider"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1045","type":"Line"},{"attributes":{"children":[{"id":"1139"},{"id":"1141"}],"sizing_mode":"stretch_width"},"id":"1144","type":"Column"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1015"}},"id":"1014","type":"LinearAxis"},{"attributes":{},"id":"1006","type":"DataRange1d"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1109","type":"Line"},{"attributes":{"below":[{"id":"1086"}],"center":[{"id":"1089"},{"id":"1093"}],"left":[{"id":"1090"}],"min_height":400,"renderers":[{"id":"1112"}],"sizing_mode":"stretch_both","title":{"id":"1116"},"toolbar":{"id":"1101"},"x_range":{"id":"1115"},"x_scale":{"id":"1082"},"y_range":{"id":"1114"},"y_scale":{"id":"1084"}},"id":"1077","subtype":"Figure","type":"Plot"},{"attributes":{"children":[{"id":"1137"},{"id":"1136"},{"id":"1119"},{"id":"1123"},{"id":"1125"},{"id":"1129"},{"id":"1127"},{"id":"1131"},{"id":"1133"},{"id":"1135"},{"id":"1121"}],"sizing_mode":"stretch_width"},"id":"1143","type":"Column"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{},"id":"1023","type":"WheelZoomTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1109"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1111"},"nonselection_glyph":{"id":"1110"},"view":{"id":"1113"}},"id":"1112","type":"GlyphRenderer"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1122","type":"FuncTickFormatter"},{"attributes":{"end":1.05},"id":"1114","type":"Range1d"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1019"}},"id":"1018","type":"LinearAxis"},{"attributes":{"axis":{"id":"1018"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1021","type":"Grid"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1116","type":"Title"},{"attributes":{},"id":"1019","type":"BasicTicker"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [m2/h]&#x27;"},"id":"1126","type":"FuncTickFormatter"},{"attributes":{"end":1.9459101490553132,"format":{"id":"1118"},"js_property_callbacks":{"change:value":[{"id":"1138"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.008853665428037451,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1119","type":"Slider"},{"attributes":{},"id":"1161","type":"Selection"},{"attributes":{"source":{"id":"1002"}},"id":"1047","type":"CDSView"},{"attributes":{},"id":"1160","type":"UnionRenderers"},{"attributes":{},"id":"1027","type":"HelpTool"},{"attributes":{},"id":"1022","type":"PanTool"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1124","type":"FuncTickFormatter"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1050","type":"Line"}],"root_ids":["1005","1143","1077","1144"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"71be995f-a7d0-4308-be1b-e4d43ade1db0","root_ids":["1005","1143","1077","1144"],"roots":{"1005":"0378eca7-5c93-4ddd-819d-6437a23da323","1077":"35d384e3-c6e1-4d7a-8e2e-d06657bd03fc","1143":"f51f2a20-d326-45fa-b265-b71551377087","1144":"8bd7c91f-0824-470d-8986-45de612487c0"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();