    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"63e6d83d-90e0-4890-81e8-b64983358614":{"defs":[],"roots":{"references":[{"attributes":{"below":[{"id":"1014"}],"center":[{"id":"1017"},{"id":"1021"}],"js_event_callbacks":{"pan":[{"id":"1140"}],"tap":[{"id":"1140"}]},"left":[{"id":"1018"}],"min_height":400,"renderers":[{"id":"1040"},{"id":"1046"},{"id":"1052"},{"id":"1059"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1029"},"x_range":{"id":"1006"},"x_scale":{"id":"1010"},"y_range":{"id":"1054"},"y_scale":{"id":"1012"}},"id":"1005","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1074"},"selection_policy":{"id":"1073"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{},"id":"1019","type":"BasicTicker"},{"attributes":{},"id":"1027","type":"HelpTool"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1015"}},"id":"1014","type":"LinearAxis"},{"attributes":{},"id":"1006","type":"DataRange1d"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1038","type":"Line"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{},"id":"1012","type":"LinearScale"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1056","type":"Scatter"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1057","type":"Scatter"},{"attributes":{},"id":"1015","type":"BasicTicker"},{"attributes":{"axis":{"id":"1014"},"coordinates":null,"group":null,"ticker":null},"id":"1017","type":"Grid"},{"attributes":{},"id":"1023","type":"WheelZoomTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1019"}},"id":"1018","type":"LinearAxis"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1037","type":"Line"},{"attributes":{},"id":"1026","type":"ResetTool"},{"attributes":{},"id":"1022","type":"PanTool"},{"attributes":{"overlay":{"id":"1028"}},"id":"1024","type":"BoxZoomTool"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1058","type":"Scatter"},{"attributes":{},"id":"1025","type":"SaveTool"},{"attributes":{"axis":{"id":"1018"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1021","type":"Grid"},{"attributes":{"axis":{"id":"1090"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1093","type":"Grid"},{"attributes":{},"id":"1010","type":"LinearScale"},{"attributes":{},"id":"1091","type":"BasicTicker"},{"attributes":{},"id":"1073","type":"UnionRenderers"},{"attributes":{"children":[{"id":"1138"},{"id":"1139"},{"id":"1119"},{"id":"1123"},{"id":"1125"},{"id":"1129"},{"id":"1127"},{"id":"1131"},{"id":"1133"},{"id":"1121"},{"id":"1135"},{"id":"1137"}],"sizing_mode":"stretch_width"},"id":"1145","type":"Column"},{"attributes":{},"id":"1074","type":"Selection"},{"attributes":{},"id":"1095","type":"WheelZoomTool"},{"attributes":{"below":[{"id":"1086"}],"center":[{"id":"1089"},{"id":"1093"}],"left":[{"id":"1090"}],"min_height":400,"renderers":[{"id":"1112"}],"sizing_mode":"stretch_both","title":{"id":"1116"},"toolbar":{"id":"1101"},"x_range":{"id":"1115"},"x_scale":{"id":"1082"},"y_range":{"id":"1114"},"y_scale":{"id":"1084"}},"id":"1077","subtype":"Figure","type":"Plot"},{"attributes":{"active_multi":{"id":"1061"},"tools":[{"id":"1022"},{"id":"1023"},{"id":"1024"},{"id":"1025"},{"id":"1026"},{"id":"1027"},{"id":"1061"}]},"id":"1029","type":"Toolbar"},{"attributes":{},"id":"1099","type":"HelpTool"},{"attributes":{"overlay":{"id":"1100"}},"id":"1096","type":"BoxZoomTool"},{"attributes":{},"id":"1097","type":"SaveTool"},{"attributes":{},"id":"1098","type":"ResetTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1037"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1039"},"nonselection_glyph":{"id":"1038"},"view":{"id":"1041"}},"id":"1040","type":"GlyphRenderer"},{"attributes":{"source":{"id":"1004"}},"id":"1060","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1043","type":"Line"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1100","type":"BoxAnnotation"},{"attributes":{"source":{"id":"1003"}},"id":"1113","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1109","type":"Line"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1111","type":"Line"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1045","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1053","type":"CDSView"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1044","type":"Line"},{"attributes":{"children":[{"id":"1141"},{"id":"1143"}],"sizing_mode":"stretch_width"},"id":"1146","type":"Column"},{"attributes":{"num_objects":1,"renderers":[{"id":"1059"}]},"id":"1061","type":"PointDrawTool"},{"attributes":{"tools":[{"id":"1094"},{"id":"1095"},{"id":"1096"},{"id":"1097"},{"id":"1098"},{"id":"1099"}]},"id":"1101","type":"Toolbar"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1056"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1058"},"nonselection_glyph":{"id":"1057"},"view":{"id":"1060"}},"id":"1059","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1050","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1109"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1111"},"nonselection_glyph":{"id":"1110"},"view":{"id":"1113"}},"id":"1112","type":"GlyphRenderer"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1122","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1049","type":"Line"},{"attributes":{},"id":"1163","type":"Selection"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1051","type":"Line"},{"attributes":{},"id":"1162","type":"UnionRenderers"},{"attributes":{"end":1.05},"id":"1114","type":"Range1d"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1043"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1045"},"nonselection_glyph":{"id":"1044"},"view":{"id":"1047"}},"id":"1046","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1116","type":"Title"},{"attributes":{"source":{"id":"1002"}},"id":"1047","type":"CDSView"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1144","type":"CustomJS"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1124","type":"FuncTickFormatter"},{"attributes":{"end":1.9459101490553132,"format":{"id":"1118"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.008853665428037451,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1119","type":"Slider"},{"attributes":{"args":{"BTCp":{"id":"1077"},"Kd_sl":{"id":"1137"},"Lcube1":[[0.6175242536335389],[0.22259201984350785],[0.8397789356826031],[0.08175335681141864],[0.9555356225139575],[0.869698258994048],[0.07695690696629756],[0.09879595736333387],[0.6330972409795416],[0.26254697887127226],[0.28993490933616345],[0.45195077758370905],[0.7346638453528429],[0.20732997912829784],[0.6964634773218886],[0.8061332432372303],[0.7939658475978653],[0.9824969942785852],[0.4301798917885026],[0.9685361484877845],[0.3538654892787968],[0.3086921160302831],[0.9248232411552412],[0.5547235707042263],[0.028320844967263902],[0.440715050122766],[0.04992211153583401],[0.5757788521024719],[0.5440107740027692],[0.3843487982834908],[0.48805360776899215],[0.18516527802009555],[0.4690180634188292],[0.10595958388936856],[0.5684985374449076],[0.3104631921608814],[0.7229422458107548],[0.3218099891893526],[0.9015333961671388],[0.27651046032037896],[0.29711740951293153],[0.12560298670905415],[0.6008629692667508],[0.49461132531017094],[0.8735936610721072],[0.15840872458965582],[0.580017193244045],[0.9180024551503178],[0.6555651732793949],[0.349046099591803],[0.25176295269316745],[0.3925788429104687],[0.7650243274470138],[0.5159072471069914],[0.6763690265184004],[0.9933224672040976],[0.011097088330375995],[0.93646515265357],[0.36487397706650165],[0.23602238584981594],[0.942364979093516],[0.4230489039406464],[0.534178691896277],[0.8409591715269947],[0.7747748196827965],[0.17918119197274787],[0.16818712405299419],[0.7403911383420645],[0.8941788262036087],[0.509881880004491],[0.37082077379728723],[0.823009660925068],[0.19005892012664438],[0.6879912345847485],[0.9796733771492186],[0.13390052819294287],[0.05270018714197921],[0.002079165520677566],[0.4767441921544436],[0.1474573672338944],[0.1123423297358488],[0.41796760216948853],[0.5979155400729808],[0.8162234337202112],[0.7543869531524912],[0.703994019532168],[0.8526702001418254],[0.6255740929808595],[0.06557033843958132],[0.782012923354118],[0.03443336954536218],[0.4018694289913735],[0.7177925407912078],[0.2190331901512741],[0.33893064846316306],[0.8873877023298623],[0.24481278211398128],[0.6628852262805296],[0.525376534609308],[0.6454713399274508]],"Lcube2":[[0.39924047198829266],[0.8592403927350476],[0.4405851859648772],[0.9525796411599851],[0.07351157581972045],[0.8272654181466844],[0.34485935108998356],[0.3532466463158026],[0.9638322033192434],[0.5712199054580243],[0.9368043595816471],[0.913104547191327],[0.2306676335317433],[0.15769189092860292],[0.8074060178929635],[0.08417308858925412],[0.5125454680372611],[0.3373595104709667],[0.7927193830277156],[0.5683663527347771],[0.46674517175969377],[0.03371757784556326],[0.7251539352517078],[0.9291157473897755],[0.22427231677700715],[0.17836572171392798],[0.023743319065783548],[0.4188708429651079],[0.842765094231736],[0.2554399724486452],[0.7392000957957718],[0.5378219370870196],[0.09418722679264321],[0.6358124646893945],[0.6209487332472429],[0.8884334407009097],[0.5265658299781231],[0.10193311095053695],[0.45421214196567766],[0.37822893060185414],[0.21365317503534512],[0.7569661367279624],[0.7013902815628553],[0.9427188858227976],[0.13787427157713547],[0.659017655912827],[0.7760399349911056],[0.3177297597009083],[0.8301147304774414],[0.8974856340728833],[0.2642565685547919],[0.8658507040390349],[0.678928506176695],[0.7134242619600338],[0.12759157657189854],[0.40695802926349045],[0.271574498891051],[0.11230507493231004],[0.2936299581354225],[0.7839881952638957],[0.617944097772995],[0.289254276259441],[0.24642960419644294],[0.3803922057659048],[0.3646669813517328],[0.6013887995940632],[0.5862040094233528],[0.765926820832632],[0.14382639634561054],[0.489324720259814],[0.6460561558270476],[0.9734244097796376],[0.5052796127479493],[0.559967701903425],[0.05300505696592478],[0.43175667219323716],[0.06389272627562625],[0.3242493879537425],[0.9994831132895673],[0.8731594317483783],[0.16806802488997577],[0.49439526130305816],[0.013102243645898222],[0.5452418941620752],[0.42972942280772],[0.5999527449321393],[0.7482264009215589],[0.47776644444785815],[0.6951901167807205],[0.20865231316939348],[0.6625320346117912],[0.19961464866428166],[0.04161714708498927],[0.18377601598688462],[0.6816906767567568],[0.9845991339894627],[0.9015836346053543],[0.8181733956322713],[0.30690866396463057],[0.000631504657267813]],"col_len_sl":{"id":"1123"},"col_rad_sl":{"id":"1125"},"disp_sl":{"id":"1127"},"flow_sl":{"id":"1131"},"pore_vol_sl":{"id":"1119"},"poros_sl":{"id":"1133"},"pulse_inj_sl":{"id":"1121"},"reac_sl":{"id":"1129"},"rg_CP":{"id":"1138"},"rg_ST":{"id":"1139"},"rho_s_sl":{"id":"1135"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var r_mean = (reac_l+reac_h)/2\\n  var D_mean = (disp_l+disp_h)/2\\n  var H_mean = 2*r_mean*D_mean/sep_vel**2\\n  var gam_mean = get_gamma(r_mean,D_mean,vel)\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        if (rg_CP == 1 &amp;&amp; t &gt; t_inj) {\\n          c[i] = 0\\n          cmin[i] = 0\\n          cmax[i] = 0\\n        } else {\\n          c[i] = 1\\n          cmin[i] = 1\\n          cmax[i] = 1\\n        }\\n        \\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var H_intermed = 2*r_intermed*D_intermed/sep_vel**2\\n            //var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg_CP == 1) {\\n              // Pulse injection\\n              if (t&lt;=t_inj) {\\n                //intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n                // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * ( math.exp(-r_intermed*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n              } else {\\n                //intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n                // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * math.exp(-r_intermed*x[i]/sep_vel) * ( (1-math.erf((x[i]-sep_vel*t*(1+H_intermed))/(2*math.sqrt(D_intermed*t)))) - (1-math.erf((x[i]-sep_vel*(t-t_inj)*(1+H_intermed))/(2*math.sqrt(D_intermed*(t-t_inj))))) )\\n              }\\n            } else {\\n              // Cotinuous injection\\n              //intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n              // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n              intlist[j] = 1/2 * ( math.exp(-r_intermed*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        if (rg_CP==1){\\n          // Pulse injection\\n          if (t&lt;=t_inj) {\\n            //c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n            // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            c[i] = 1/2 * ( math.exp(-r_mean*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n          } else {\\n            //c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))))\\n            // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            c[i] = 1/2 * math.exp(-r_mean*x[i]/sep_vel) * ( (1-math.erf((x[i]-sep_vel*t*(1+H_mean))/(2*math.sqrt(D_mean*t)))) - (1-math.erf((x[i]-sep_vel*(t-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(t-t_inj))))) )\\n          }\\n        } else {\\n          // Continuous injection\\n          // eq 8.66 in hydrogeology script (Ogata Banks)\\n          //c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n          // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n          c[i] = 1/2 * ( math.exp(-r_mean*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n        }\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n    }\\n  }\\n  return [c, cmin, cmax]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D_mean,r_mean,H_mean) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg_CP==1){\\n        // Pulse injection \\n        if (tsp[i]&lt;=t_inj) {\\n          //c[i] = 1/2 * (1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n          c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel) * (1-math.erf((xBTC - vel*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        } else {\\n          //c[i] = 1/2 * ((1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n          c[i] = 1/2 * math.exp(-r_mean*xBTC/vel) * ( (1-math.erf((xBTC-vel*tsp[i]*(1+H_mean))/(2*math.sqrt(D_mean*tsp[i])))) - (1-math.erf((xBTC-vel*(tsp[i]-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(tsp[i]-t_inj))))) )\\n        }\\n      } else {\\n        // Continuous injection\\n        // eq 8.66 in hydrogeology script (Ogata Banks)\\n        //c[i] = 1/2 * Math.exp(xBTC*vel/(2*D_mean))*(Math.exp((-xBTC)*vel*gam/(2*D_mean))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i])))+math.exp(xBTC*vel*gam/(2*D_mean))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i]))));\\n        // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n        c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel) * (1-math.erf((xBTC - vel*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(r_mean,D_mean,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2)\\n  return res\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n// Values needed for all models\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\n\\n// Derived entities\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel / n                       // [m/s]\\nconst r_mean  = (reac_l+reac_h)/2             // [1/s]\\nconst D_mean  = (disp_l+disp_h)/2             // [m2/s]\\nconst H_mean  = 2*r_mean*D_mean/sep_vel**2    // [m/s]\\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = col_len/sep_vel               // [s] VEL oder SEP_VEL?\\nconst c0      = 1;                            // [-] \\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit its range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\n// Time \\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t         = tPV * PV                          // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2) \\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cBTX = []\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,D_mean,r_mean,H_mean) \\n}\\n\\n// Update sources\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n}\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27; m (Drag diamond in upper plot to change)&#x27;\\n\\nif (rg_CP==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\nif (rg_SType == 1) {\\n  rho_s_sl.visible = true\\n  Kd_sl.visible = true\\n} else {\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n}\\n\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1140","type":"CustomJS"},{"attributes":{"end":43200,"format":{"id":"1120"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1121","type":"Slider"},{"attributes":{"source":{"id":"1002"}},"id":"1041","type":"CDSView"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1144"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1143","type":"Button"},{"attributes":{"end":0.5,"format":{"id":"1122"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1123","type":"Slider"},{"attributes":{},"id":"1166","type":"BasicTickFormatter"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [m2/h]&#x27;"},"id":"1126","type":"FuncTickFormatter"},{"attributes":{"end":0.2,"format":{"id":"1124"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1125","type":"Slider"},{"attributes":{"end":1.05,"start":-0.03},"id":"1054","type":"Range1d"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [1/h]&#x27;"},"id":"1128","type":"FuncTickFormatter"},{"attributes":{},"id":"1167","type":"AllLabels"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1049"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1051"},"nonselection_glyph":{"id":"1050"},"view":{"id":"1053"}},"id":"1052","type":"GlyphRenderer"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1126"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1127","type":"RangeSlider"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1028","type":"BoxAnnotation"},{"attributes":{},"id":"1169","type":"BasicTickFormatter"},{"attributes":{"end":0.005,"format":{"id":"1136"},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1137","type":"Slider"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1039","type":"Line"},{"attributes":{},"id":"1170","type":"AllLabels"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1169"},"group":null,"major_label_policy":{"id":"1170"},"major_label_text_font_size":"12pt","ticker":{"id":"1087"}},"id":"1086","type":"LinearAxis"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1140"}]},"labels":["No Sorption","Linear Sorption"],"sizing_mode":"stretch_width"},"id":"1139","type":"RadioButtonGroup"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1110","type":"Line"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1140"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1138","type":"RadioButtonGroup"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1118","type":"FuncTickFormatter"},{"attributes":{"end":3000,"format":{"id":"1134"},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1135","type":"Slider"},{"attributes":{},"id":"1082","type":"LinearScale"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1136","type":"FuncTickFormatter"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{"end":1,"format":{"id":"1132"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1133","type":"Slider"},{"attributes":{"end":7},"id":"1115","type":"Range1d"},{"attributes":{},"id":"1084","type":"LinearScale"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1142","type":"CustomJS"},{"attributes":{},"id":"1094","type":"PanTool"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1142"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1141","type":"Button"},{"attributes":{},"id":"1087","type":"BasicTicker"},{"attributes":{"axis":{"id":"1086"},"coordinates":null,"group":null,"ticker":null},"id":"1089","type":"Grid"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1134","type":"FuncTickFormatter"},{"attributes":{"code":"return tick.toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1130","type":"FuncTickFormatter"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAACMVwXXNZBzPSFi7JesUsU+wrox0ZvFNz82nBZ5+ZlxP0Vwf5RdApM/zY2j+tCyqD/f8azjj/m3P2wW63K8ZMM/foMra+DKyz/7/3aHdk3SP3EafvbcrtY/JIqQpWDf2j8VR49qXcTeP6U8NEXFJ+E/yUFXq8294j8KxpPzrSTkP0Rl++q4XuU/dHrOpFtv5j/ioVOailrnP9kmeJpfJOg/r8VVetvQ6D9Dj30OwWPpP6XaWHuB4Ok/SxyQDDRK6j+B77xvlaPqP6Mns3AL7+o/LlbcQKsu6z+9jT/7QGTrP5PI5IxXkes/QCjjekC36z/ZPOw2G9frP7HxN9jb8es/C+znJlEI7D/pGE33KRvsPyvrw9v5Kuw/B2EYOT047D/0avTLXEPsP+PYta6wTOw/1RXT7oJU7D+Y/x/AEVvsP/efGFuRYOw/UPoGki1l7D99NoInC2nsP17Oeu9IbOw/cZDTwgBv7D+NgW9MSHHsPya4orUxc+w/muQXN8x07D9jyHuSJHbsPz4kmXhFd+w/kxYA3zd47D8X5thHA3nsPwZDGf6teew/+sr5Rz167D+d6z2RtXrsPxg3oI4ae+w//Cd/W2977D/hubiStnvsP+XWfGPye+w/xE++oiR87D/Z8c7ZTnzsP46GnFJyfOw/AmrxIZB87D9tXwswqXzsP5zZzT++fOw/ZazJ9M987D/grErY3nzsPwXhk13rfOw/KkJs5fV87D9bjBjB/nzsP5Ly2TQGfew/Rq4Fegx97D/vIcbAEX3sP/iNkzEWfew/hBFw7hl97D/XyPATHX3sP+pCHLoffew/dTIl9SF97D9AIAfWI33sP3z1CWslfew//GswwCZ97D9uypTfJ33sP/LFttEofew/dOy8nSl97D/BmKtJKn3sP0Uek9oqfew/KJW2VCt97D+Hday7K33sP4n/eRIsfew/jEWqWyx97D8ai2GZLH3sP8+Obc0sfew/TT1T+Sx97D/aNloeLX3sP8mAlj0tfew/Bq3wVy197D+/tixuLX3sP6PI74Atfew/EhnFkC197D9yASKeLX3sP9Jvaaktfew/S83usi197D8Zb/i6LX3sPwulwcEtfew/7nR8xy197D8GEFPMLX3sP7sNadAtfew/wHTc0y197D9mmsbWLX3sP/XePNktfew/TUxR2y197D+tGxPdLX3sP28mj94tfew/HUXQ3y197D+Zn9/gLX3sP67wxOEtfew/Gr+G4i197D+cjSrjLX3sP4cDteMtfew/9Q4q5C197D+oAY3kLX3sP1+p4OQtfew/amQn5S197D/+MmPlLX3sP9zFleUtfew/pYrA5S197D9RtuTlLX3sP/RNA+Ytfew/Ni4d5i197D+UETPmLX3sP6+VReYtfew/wj9V5i197D9xgGLmLX3sP/e2beYtfew/1DN35i197D8bO3/mLX3sP1wGhuYtfew/RcaL5i197D8ApJDmLX3sP1vClOYtfew/yz6Y5i197D84MpvmLX3sP7SxneYtfew/EM+f5i197D9hmaHmLX3sP2wdo+Ytfew/+GWk5i197D8rfKXmLX3sP71npuYtfew/OS+n5i197D8q2KfmLX3sPz1nqOYtfew/auCo5i197D8NR6nmLX3sP/udqeYtfew/n+ep5i197D//JarmLX3sP9haquYtfew/nIeq5i197D+LrarmLX3sP67NquYtfew/5+iq5i197D/6/6rmLX3sP4cTq+Ytfew/FySr5i197D8hMqvmLX3sPwg+q+Ytfew/HUir5i197D+pUKvmLX3sP+hXq+Ytfew/C16r5i197D8/Y6vmLX3sP6hnq+Ytfew/Zmur5i197D+RbqvmLX3sP0Fxq+Ytfew/iXOr5i197D94davmLX3sPxt3q+Ytfew/fnir5i197D+reavmLX3sP6p6q+Ytfew/g3ur5i197D88fKvmLX3sP9h8q+Ytfew/XH2r5i197D/NfavmLX3sPyx+q+Ytfew/fH6r5i197D/AfqvmLX3sP/t+q+Ytfew/LH+r5i197D9Wf6vmLX3sP3l/q+Ytfew/l3+r5i197D+vf6vmLX3sP8Z/q+Ytfew/2H+r5i197D/of6vmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1163"},"selection_policy":{"id":"1162"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1120","type":"FuncTickFormatter"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1166"},"group":null,"major_label_policy":{"id":"1167"},"major_label_text_font_size":"12pt","ticker":{"id":"1091"}},"id":"1090","type":"LinearAxis"},{"attributes":{"end":50,"format":{"id":"1130"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1131","type":"Slider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1132","type":"FuncTickFormatter"},{"attributes":{"end":0.0,"format":{"id":"1128"},"js_property_callbacks":{"change:value":[{"id":"1140"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1129","type":"RangeSlider"}],"root_ids":["1005","1145","1077","1146"]},"title":"Bokeh Application","version":"2.4.1"}}';
                const render_items = [{"docid":"63e6d83d-90e0-4890-81e8-b64983358614","root_ids":["1005","1145","1077","1146"],"roots":{"1005":"e67e133a-00fe-4403-86d2-6e50a9772893","1077":"c345b30a-f056-4ee4-bed9-447732dc8693","1145":"1e3fe32f-4aba-4784-a18d-faaefdd73209","1146":"2188974b-32d5-4a40-9f47-0eabe05fa316"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();