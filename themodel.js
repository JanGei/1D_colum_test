    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"31ef9bf7-72be-482d-9ad0-573afaff2fcb":{"defs":[],"roots":{"references":[{"attributes":{"end":1.05},"id":"1166","type":"Range1d"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1174","type":"FuncTickFormatter"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1172","type":"FuncTickFormatter"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1168","type":"Title"},{"attributes":{"source":{"id":"1002"}},"id":"1062","type":"CDSView"},{"attributes":{"data":{"x2":{"__ndarray__":"/anx0k1iUD+G87Yt8jyqP94sa/Zo+7k//G/9aixswz+KScVapNrJP4yRRiWOJNA/Un4qHcpb0z8Zaw4VBpPWP+BX8gxCytk/p0TWBH4B3T+3GF3+XBzgPxoPT/r6t+E/fQVB9phT4z/h+zLyNu/kP0TyJO7UiuY/qOgW6nIm6D8L3wjmEMLpP27V+uGuXes/0svs3Uz57D81wt7Z6pTuP0xc6GpEGPA/fVfhaBPm8D+vUtpm4rPxP+FN02SxgfI/EknMYoBP8z9ERMVgTx30P3Y/vl4e6/Q/qDq3XO249T/ZNbBavIb2PwsxqViLVPc/PSyiVloi+D9uJ5tUKfD4P6AilFL4vfk/0h2NUMeL+j8DGYZOlln7PzUUf0xlJ/w/Zw94SjT1/D+YCnFIA8P9P8oFakbSkP4//ABjRKFe/z8X/i0hOBYAQLB7KqAffQBASPkmHwfkAEDhdiOe7koBQHr0Hx3WsQFAE3IcnL0YAkCs7xgbpX8CQEVtFZqM5gJA3eoRGXRNA0B2aA6YW7QDQA/mChdDGwRAqGMHliqCBEBB4QMVEukEQNpeAJT5TwVAc9z8EuG2BUALWvmRyB0GQKTX9RCwhAZAPVXyj5frBkDW0u4Of1IHQG9Q641muQdACM7nDE4gCECgS+SLNYcIQDnJ4Aod7ghA0kbdiQRVCUBrxNkI7LsJQARC1ofTIgpAnb/SBruJCkA2Pc+FovAKQM66ywSKVwtAZzjIg3G+C0AAtsQCWSUMQJkzwYFAjAxAMrG9ACjzDEDLLrp/D1oNQGOstv72wA1A/Cmzfd4nDkCVp6/8xY4OQC4lrHut9Q5Ax6Ko+pRcD0BgIKV5fMMPQP3OUPwxFRBAyQ3Pu6VIEECWTE17GXwQQGKLyzqNrxBALspJ+gDjEED7CMi5dBYRQMdHRnnoSRFAlIbEOFx9EUBgxUL4z7ARQC0EwbdD5BFA+UI/d7cXEkDFgb02K0sSQJLAO/aefhJAXv+5tRKyEkArPjh1huUSQPd8tjT6GBNAw7s09G1ME0CQ+rKz4X8TQFw5MXNVsxNAKXivMsnmE0D1ti3yPBoUQML1q7GwTRRAjjQqcSSBFEBac6gwmLQUQCeyJvAL6BRA8/Ckr38bFUDALyNv804VQIxuoS5nghVAWa0f7tq1FUAl7J2tTukVQPEqHG3CHBZAvmmaLDZQFkCKqBjsqYMWQFfnlqsdtxZAIyYVa5HqFkDwZJMqBR4XQLyjEep4URdAiOKPqeyEF0BVIQ5pYLgXQCFgjCjU6xdA7p4K6EcfGEC63Yinu1IYQIYcB2cvhhhAU1uFJqO5GEAfmgPmFu0YQOzYgaWKIBlAuBcAZf5TGUCFVn4kcocZQFGV/OPluhlAHdR6o1nuGUDqEvlizSEaQLZRdyJBVRpAg5D14bSIGkBPz3OhKLwaQBwO8mCc7xpA6ExwIBAjG0C0i+7fg1YbQIHKbJ/3iRtATQnrXmu9G0AaSGke3/AbQOaG591SJBxAssVlncZXHEB/BORcOoscQEtDYhyuvhxAGILg2yHyHEDkwF6blSUdQLH/3FoJWR1AfT5bGn2MHUBJfdnZ8L8dQBa8V5lk8x1A4vrVWNgmHkCvOVQYTFoeQHt40te/jR5ASLdQlzPBHkAU9s5Wp/QeQOA0TRYbKB9ArXPL1Y5bH0B5skmVAo8fQEbxx1R2wh9AEjBGFOr1H0BvN+LprhQgQNVWocloLiBAO3ZgqSJIIEChlR+J3GEgQAi13miWeyBAbtSdSFCVIEDU81woCq8gQDoTHAjEyCBAoDLb533iIEAHUprHN/wgQG1xWafxFSFA05AYh6svIUA5sNdmZUkhQJ/PlkYfYyFABu9VJtl8IUBsDhUGk5YhQNIt1OVMsCFAOE2TxQbKIUCfbFKlwOMhQAWMEYV6/SFAa6vQZDQXIkDRyo9E7jAiQDfqTiSoSiJAngkOBGJkIkAEKc3jG34iQGpIjMPVlyJA0GdLo4+xIkA2hwqDScsiQJ2myWID5SJAA8aIQr3+IkBp5UcidxgjQM8EBwIxMiNANSTG4epLI0CcQ4XBpGUjQAJjRKFefyNAaIIDgRiZI0DOocJg0rIjQDXBgUCMzCNAm+BAIEbmI0ABAAAAAAAkQA==","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAADQ2aQLiqw9PlpqxC0U9Sw/c9KrgsLAfD+TFufri4CjP5g4Hlwx7bk/qEH0AhYdyD+B9rPf8k3SP3pLNnbngtg/O9T6lr873j+C16WP6qDhPybXGOAUw+M/vxuA11OI5T+xmA2nQfrmP+I7E4iIJOg/1lLQwN8S6T8A19G1CNDpPxKcRRJkZeo/GUQ+mdva6j+7LJdZ9zbrP4AXdiYGf+s//8Go50u36z9TvL7ALuPrP2hHEMhfBew/QYxPHP4f7D+KOD5CtDTsP33M4T3QROw/JAqkEldR7D8dseBhFFvsP0rJWNWmYuw/eNhC74lo7D99jvvCHW3sPxcIMgOtcOw/t69tvnFz7D9CQ5ERmXXsP2I8kglGd+w/T47F4ZN47D/Jeo7Cl3nsP8E7kBxieuw/+Epqtv967D90sjV+envsPy+mLyzae+w/disFwSR87D8mDuHnXnzsP+yXjUKMfOw/S0KSpK987D88nRxBy3zsPxpEqc7gfOw/ACW4ovF87D8IvVPH/nzsP8jKzAsJfew/nL68ERF97D8aviNXF33sP41nRz4cfew/PYzSEyB97D9tbJkTI33sP5fCT2wlfew/RKlsQid97D8dA2uyKH3sPyCnitIpfew/MoEutCp97D+Hku1kK33sP8TeZ+8rfew/eIrsWyx97D9CfvuwLH3sPxKZqvMsfew/XrT0Jy197D8eW/dQLX3sP5cAI3Etfew/yK1gii197D+xdC+eLX3sP/h2u60tfew/0ufvuS197D8PIoXDLX3sP5CtC8stfew/dt/00C197D+fmpnVLX3sPw+ZP9ktfew/3I8d3C197D9zbV7eLX3sPxTkI+Atfew/omeI4S197D8vvaDiLX3sPz00feMtfew/cJwq5C197D8iBrPkLX3sP5hZHuUtfew/hs1y5S197D8mRLXlLX3sPzuU6eUtfew/bMIS5i197D9ALjPmLX3sP4C1TOYtfew/9c9g5i197D9EpXDmLX3sP/wdfeYtfew/I/GG5i197D+/ro7mLX3sPyzIlOYtfew/pJaZ5i197D9sYJ3mLX3sP9FcoOYtfew/Zrei5i197D93kqTmLX3sPwgJpuYtfew/ZjCn5i197D9WGajmLX3sPw3RqOYtfew/+GGp5i197D9J1KnmLX3sP3guquYtfew/o3Wq5i197D/IrarmLX3sPxfaquYtfew/EP2q5i197D+qGKvmLX3sP3Quq+Ytfew/pz+r5i197D87TavmLX3sP/NXq+Ytfew/amCr5i197D8aZ6vmLX3sP2Fsq+Ytfew/jnCr5i197D/Zc6vmLX3sP3N2q+Ytfew/gXir5i197D8geqvmLX3sP2l7q+Ytfew/bHyr5i197D85favmLX3sP9t9q+Ytfew/XX6r5i197D/AfqvmLX3sPxB/q+Ytfew/UX+r5i197D+Cf6vmLX3sP6p/q+Ytfew/yH+r5i197D/gf6vmLX3sP/V/q+Ytfew/BICr5i197D8RgKvmLX3sPxuAq+Ytfew/IoCr5i197D8pgKvmLX3sPy6Aq+Ytfew/MICr5i197D80gKvmLX3sPzaAq+Ytfew/N4Cr5i197D86gKvmLX3sPzuAq+Ytfew/PICr5i197D89gKvmLX3sPz2Aq+Ytfew/PYCr5i197D8+gKvmLX3sPz6Aq+Ytfew/PoCr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8+gKvmLX3sPz6Aq+Ytfew/P4Cr5i197D8/gKvmLX3sP0CAq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPz+Aq+Ytfew/P4Cr5i197D8/gKvmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1212"},"selection_policy":{"id":"1211"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1176","type":"FuncTickFormatter"},{"attributes":{"end":2.302585092994046,"format":{"id":"1170"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.009210340371976183,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1171","type":"Slider"},{"attributes":{"end":360000,"format":{"id":"1172"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1173","type":"Slider"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{"end":0.5,"format":{"id":"1174"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1175","type":"Slider"},{"attributes":{"coordinates":null,"group":null,"items":[{"id":"1075"},{"id":"1099"}]},"id":"1074","type":"Legend"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1014"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1178","type":"RangeSlider"},{"attributes":{"end":0.2,"format":{"id":"1176"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1177","type":"Slider"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1183","type":"FuncTickFormatter"},{"attributes":{"end":0.0,"format":{"id":"1010"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1179","type":"RangeSlider"},{"attributes":{"end":3000,"format":{"id":"1183"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1184","type":"Slider"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1193","type":"CustomJS"},{"attributes":{"end":50,"format":{"id":"1019"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1180","type":"Slider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1181","type":"FuncTickFormatter"},{"attributes":{"end":1,"format":{"id":"1181"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1182","type":"Slider"},{"attributes":{"args":{"BTCp":{"id":"1129"},"D_dict":{"m2/d":{"id":"1015"},"m2/h":{"id":"1014"},"m2/min":{"id":"1013"},"m2/s":{"id":"1012"}},"D_us":{"id":"1006"},"Kd_sl":{"id":"1186"},"Lcube1":[[0.5486533214649227],[0.4618911234318814],[0.9092625767637641],[0.7153428746432948],[0.8908805532508893],[0.5800524538053008],[0.6803207402535493],[0.14226834280759604],[0.4122036670817085],[0.535772717254945],[0.884056284452608],[0.22250464151666996],[0.9375863175107103],[0.5125578351619937],[0.5667505248591752],[0.4702368496493284],[0.9565451620229182],[0.8140551833544956],[0.5718218959522826],[0.019686480459833913],[0.29068973327989284],[0.5289042800889419],[0.17494457874155248],[0.9200382494064666],[0.7257873882854766],[0.3441619185526653],[0.9743993217329767],[0.26930460847665627],[0.27572924414307476],[0.09256608994300775],[0.37163210085772563],[0.339417261433181],[0.6710731603013881],[0.6440421863313748],[0.6932604523690309],[0.05807815829908028],[0.3238171203491772],[0.16448660910662152],[0.8491519209093843],[0.12102383818081072],[0.31837736117725435],[0.3087260604726112],[0.8294404700149322],[0.8624765177864149],[0.7092783193665919],[0.6248183849415937],[0.03768869098800419],[0.04909454897453738],[0.06179625012924987],[0.9165370067907088],[0.4938050416014825],[0.6551372343861135],[0.9976038274536596],[0.18827173249419107],[0.45720955365873467],[0.9448620610293237],[0.15198102018902263],[0.7799738013620657],[0.6661044123261424],[0.4087632053144434],[0.8335139966312493],[0.4858367775322962],[0.6323922695335519],[0.38619127277557586],[0.20611450595360645],[0.07899475896177763],[0.8545799156372023],[0.4201123625133926],[0.6118743629926848],[0.13060599884062332],[0.982589049576801],[0.23371163342206647],[0.3500912588205916],[0.2857356391634289],[0.5990197304038261],[0.21712501603002415],[0.43836713352410556],[0.08857853931748401],[0.7682918538474639],[0.7450395122236978],[0.0050653265646705605],[0.6022928482651186],[0.7385362370704363],[0.7590976014335271],[0.8051872118536656],[0.9663009205886177],[0.3901699813303233],[0.8766314477077661],[0.5085766852677116],[0.7809249506421156],[0.02405885569260188],[0.1168784496684109],[0.5596324140404403],[0.4407428950229453],[0.19530458996978628],[0.10393098627666536],[0.2405740362726582],[0.36109742426524244],[0.25323295786335964],[0.7911360084286667]],"Lcube2":[[0.9111478292205106],[0.8496256059128485],[0.9096765919002933],[0.8614713794961416],[0.7580909517881723],[0.7992574646070146],[0.5810613005171694],[0.45268121325729843],[0.5166848167597017],[0.42894150034436684],[0.6650427148348842],[0.3408646602556747],[0.8297728972832051],[0.8139628009223824],[0.0740541714278422],[0.5395049548658297],[0.6949214432294119],[0.08141490506480159],[0.7856322281405997],[0.30829313184243146],[0.18996477425211672],[0.873703132142488],[0.12860246618018742],[0.8331416660265125],[0.5984496756297297],[0.567652160048604],[0.1642777687082721],[0.6071857050571101],[0.970289172328405],[0.9285895612896724],[0.7682491475358433],[0.32060692341238506],[0.739991549884764],[0.14516559215365857],[0.4819340719243144],[0.8091954028464023],[0.5718446367904882],[0.5240565917867449],[0.7178404114911103],[0.6234332520365253],[0.8914157601106357],[0.2827546448644438],[0.2582462794995195],[0.10549452194978881],[0.1575547212294769],[0.38083427820280086],[0.998542477633028],[0.7478251722061036],[0.13150778687134893],[0.4373675703439086],[0.6743744823126541],[0.6313990408912291],[0.4168216055058802],[0.2119051503279093],[0.03298595481859913],[0.062247093510828376],[0.20033034787644743],[0.23251378027996628],[0.0436658946692503],[0.4069070868021661],[0.22095931869300744],[0.2457687981973976],[0.33016673987789813],[0.6127021690776132],[0.9464340650371098],[0.7031102726452889],[0.17563558467366946],[0.5012078253453225],[0.7220639050924805],[0.024164766157113337],[0.8814083488050432],[0.3171569413061974],[0.35124036594403785],[0.3709036852718894],[0.2605775183222002],[0.557166483302436],[0.3955400988988359],[0.11090555717524428],[0.00638118492350944],[0.6489340133038857],[0.6854962090787288],[0.1915538071324212],[0.5478241323840678],[0.4496957106833878],[0.36361464289846657],[0.0989385654076552],[0.4644817334755827],[0.9372009750611167],[0.05220526694735341],[0.9886008725939354],[0.7741055436913926],[0.9528220220447399],[0.013637339396192223],[0.8568247771727832],[0.6583797246904295],[0.29912059983267497],[0.9629144713373923],[0.4719520400173295],[0.2716465098756913],[0.49399514040224274]],"col_len_sl":{"id":"1175"},"col_rad_sl":{"id":"1177"},"disp_sl":{"id":"1178"},"fl_dict":{"L/h":{"id":"1017"},"m3/s":{"id":"1016"},"mL/h":{"id":"1019"},"mL/min":{"id":"1018"}},"fl_us":{"id":"1007"},"flow_sl":{"id":"1180"},"pore_vol_sl":{"id":"1171"},"poros_sl":{"id":"1182"},"pulse_inj_sl":{"id":"1173"},"r_dict":{"1/d":{"id":"1011"},"1/h":{"id":"1010"},"1/min":{"id":"1009"},"1/s":{"id":"1008"}},"r_us":{"id":"1005"},"reac_sl":{"id":"1179"},"rg_CP":{"id":"1187"},"rg_ST":{"id":"1188"},"rho_s_sl":{"id":"1184"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"// Function: Compute concentration in column\\nfunction getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean) {\\n  // Initializing empty concentration lists\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var cloQ = []\\n  var cupQ = []\\n\\n  // Seepage velocity\\n  var vel_r = vel/Ret\\n\\n  // Variables needed, if Ogata-Banks (1962) solution is used\\n  //var r_mean = (reac_l+reac_h)/2/Ret\\n  //var D_mean = (disp_l+disp_h)/2/Ret\\n  //var H_mean = 2*r_mean*D_mean/vel_r**2\\n  //var gam_mean = get_gamma(r_mean,D_mean,vel)\\n\\n  for (let i = 0; i &lt; x.length; i++) { \\n      // \\"Behind\\" the column: concentration is either 1 or 0, depending on injction time\\n      if (x[i] &lt;= 0) {\\n        if (rg_CP == 1 &amp;&amp; t &gt; t_inj) {\\n          c[i] = 0\\n          cmin[i] = 0\\n          cmax[i] = 0\\n        } else {\\n          c[i] = 1\\n          cmin[i] = 1\\n          cmax[i] = 1\\n        }\\n\\n      // \\"In\\" the column\\n      } else {\\n        // Intermediate list to store all solutions of the latin hypercube\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            // Computing values associated to the latin hypercube\\n            var r_intermed = (reac_l + (reac_h-reac_l)*Lcube1[j])/Ret\\n            var D_intermed = (disp_l + (disp_h-disp_l)*Lcube2[j])/Ret\\n            var H_intermed = 2*r_intermed*D_intermed/vel_r**2\\n\\n            // Variable needed, if Ogata-Banks (1962) solution is used\\n            // var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n\\n            // Checking for pulse injection\\n            if (rg_CP == 1) {\\n              // Pulse injection\\n              if (t&lt;=t_inj) {\\n                // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * (math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))))\\n                // Ogata-Banks (1962) \\n                // intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n              } else {\\n                // Runkler (1996, Eq. 10, O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2 * math.exp(-r_intermed*x[i]/vel_r) * ( (1-math.erf((x[i]-vel_r*t*(1+H_intermed))/(2*math.sqrt(D_intermed*t)))) - (1-math.erf((x[i]-vel_r*(t-t_inj)*(1+H_intermed))/(2*math.sqrt(D_intermed*(t-t_inj))))))\\n                // Ogata-Banks (1962) \\n                //intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n              }\\n            } else {\\n              // Cotinuous injection\\n              // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n              intlist[j] = 1/2 * (math.exp(-r_intermed*x[i]/vel_r) * (1-math.erf((x[i] - vel_r*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))))\\n              // Ogata-Banks (1962) \\n              //intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n            }\\n          }\\n        \\n        // Obtain median, min, max, upper and lower quartile from intermediate list\\n        c[i]    = math.median(intlist)\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n        cloQ[i] = math.quantileSeq(intlist, 0.25)\\n        cupQ[i] = math.quantileSeq(intlist, 0.75)\\n    }\\n  }\\n  return [c, cmin, cmax, cloQ, cupQ]\\n}\\n\\n// Function: Breakthrough Curve (BTC)\\nfunction getc_BTC(xBTC,vel,tsp,t_inj,D_mean,r_mean,H_mean,Ret) {\\n  // Initializing empty concentration list\\n  const c = []\\n\\n  // Seepage velocity\\n  var vel_r = vel/Ret\\n\\n  // Variables needed, if Ogata-Banks (1962) solution is used\\n  //const gam     = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2) \\n\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n\\n      // Pulse injection \\n      if (rg_CP==1){\\n\\n        if (tsp[i]&lt;=t_inj) {\\n          // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n          c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))))\\n          // Ogata-Banks (1962) \\n          //c[i] = 1/2 * (1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n        } else {\\n          // Runkler (1996, Eq. 10, O&#x27;Loughlin and Bowmer)\\n          c[i] = 1/2 * math.exp(-r_mean*xBTC/vel_r) * ( (1-math.erf((xBTC-vel_r*tsp[i]*(1+H_mean))/(2*math.sqrt(D_mean*tsp[i])))) - (1-math.erf((xBTC-vel_r*(tsp[i]-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(tsp[i]-t_inj))))) )\\n          // Ogata-Banks (1962) \\n          //c[i] = 1/2 * ((1-math.erf((xBTC-vel_r*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel_r*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n        }\\n\\n      // Continuous injection\\n      } else {\\n        // Runkler (1996, Eq. 8, O&#x27;Loughlin and Bowmer)\\n        c[i] = 1/2 * ( math.exp(-r_mean*xBTC/vel_r) * (1-math.erf((xBTC - vel_r*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))))\\n        // Ogata-Banks (1962) \\n        //c[i] = 1/2 * Math.exp(xBTC*vel_r/(2*D_mean))*(Math.exp((-xBTC)*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC-vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i])))+math.exp(xBTC*vel_r*gam/(2*D_mean))*(1-math.erf((xBTC+vel_r*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i]))));\\n        }\\n  }\\n  return c\\n}\\n\\n// Function: Obtain gamma for Ogata-Banks solution\\nfunction get_gamma(r_mean,D_mean,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2)\\n  return res\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar yloQ= source1.data[&#x27;yloQ&#x27;]\\nvar yupQ= source1.data[&#x27;yupQ&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n\\n// Extracting values from callback\\n// For variable identification, refer to file 1D_column_test.py\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\nconst Kd        = Kd_sl.value                       // [m3/kg]\\nconst rho_s     = rho_s_sl.value                    // [kg/m3]\\n\\n// Derived values\\nconst A       = math.PI * rad**2;             // [m2]   Area\\nconst vel     = Q/A;                          // [m/s]  Velocity\\nconst sep_vel = vel / n                       // [m/s]  Seepage velocity\\nconst r_mean  = (reac_l+reac_h)/2             // [1/s]  1st order reaction constant\\nconst D_mean  = (disp_l+disp_h)/2             // [m2/s] Dispersion coefficient\\nconst H_mean  = 2*r_mean*D_mean/sep_vel**2    // [m/s]  Variable for Ogata-Banks\\nconst r_med   = reac_l+(reac_h-reac_l)*math.median(Lcube1)   // [1/s]  Median 1st order reaction constant\\nconst D_med   = disp_l+(disp_h-disp_l)*math.median(Lcube2)   // [m2/s] Median Dispersion coefficient\\nconst H_med   = 2*r_med*D_med/sep_vel**2      // [m/s]  Median Variable for Ogata-Banks\\nconst PS      = col_len * A * n               // [m3]   Pore space\\nconst PV      = col_len/sep_vel               // [s]    Time equivalent for one pore volume\\nconst c0      = 1;                            // [-]    Normed inlet concentration\\n\\n// Retardation factor\\nif (rg_SType == 0) {\\n  var Ret = 1\\n} else {\\n  var Ret = 1 + (1-n)/n * Kd * rho_s\\n}\\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\n// Compute time equivalent of selected pore volume \\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t         = tPV * PV                          // [s]\\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cloQ = []\\nvar cupQ = []\\nvar cBTX = []\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax, cloQ, cupQ] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret,r_mean,D_mean,H_mean)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,t_inj,D_mean,r_mean,H_mean,Ret) \\n}\\n\\n\\n// Update sources\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n  yloQ[i] = cloQ[i]\\n  yupQ[i] = cupQ[i]\\n}\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27; m (Drag diamond in upper plot to change)&#x27;\\n\\n// Displaying correct sliders\\nif (rg_CP==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\nif (rg_SType == 1) {\\n  rho_s_sl.visible = true\\n  Kd_sl.visible = true\\n} else {\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n}\\n\\n// Displaying correct units\\nvar r_format  = r_dict[r_us.value]\\nvar D_format  = D_dict[D_us.value]\\nvar fl_format = fl_dict[fl_us.value]\\nreac_sl.format = r_format\\ndisp_sl.format = D_format\\nflow_sl.format = fl_format\\n\\nreac_sl.format.change.emit();\\ndisp_sl.format.change.emit();\\nflow_sl.format.change.emit();\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1189","type":"CustomJS"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1193"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1192","type":"Button"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1191","type":"CustomJS"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1191"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1190","type":"Button"},{"attributes":{"children":[{"id":"1187"},{"id":"1188"},{"id":"1171"},{"id":"1175"},{"id":"1177"},{"id":"1179"},{"id":"1178"},{"id":"1180"},{"id":"1182"},{"id":"1173"},{"id":"1184"},{"id":"1186"}],"sizing_mode":"stretch_width"},"id":"1194","type":"Column"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1054","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1105","type":"CDSView"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [m2/d]&#x27;"},"id":"1015","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick/3600/1000/1000).toExponential(2)+&#x27; [m3/s]&#x27;"},"id":"1016","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick/1000).toFixed(4)+&#x27; [L/h]&#x27;"},"id":"1017","type":"FuncTickFormatter"},{"attributes":{"code":"  return (tick/60).toFixed(2)+&#x27; [mL/min]&#x27;"},"id":"1018","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1101","type":"Line"},{"attributes":{"code":"  return (tick).toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1019","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1052","type":"Line"},{"attributes":{"source":{"id":"1004"}},"id":"1112","type":"CDSView"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1102","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1101"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1103"},"nonselection_glyph":{"id":"1102"},"view":{"id":"1105"}},"id":"1104","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1103","type":"Line"},{"attributes":{},"id":"1215","type":"BasicTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1161","type":"Line"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1108","type":"Scatter"},{"attributes":{},"id":"1216","type":"AllLabels"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1109","type":"Scatter"},{"attributes":{"num_objects":1,"renderers":[{"id":"1111"}]},"id":"1113","type":"PointDrawTool"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1108"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1110"},"nonselection_glyph":{"id":"1109"},"view":{"id":"1112"}},"id":"1111","type":"GlyphRenderer"},{"attributes":{},"id":"1218","type":"BasicTickFormatter"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1218"},"group":null,"major_label_policy":{"id":"1219"},"major_label_text_font_size":"12pt","ticker":{"id":"1139"}},"id":"1138","type":"LinearAxis"},{"attributes":{"children":[{"id":"1005"},{"id":"1006"},{"id":"1007"},{"id":"1190"},{"id":"1192"}],"sizing_mode":"stretch_width"},"id":"1195","type":"Column"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1110","type":"Scatter"},{"attributes":{},"id":"1219","type":"AllLabels"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{"source":{"id":"1002"}},"id":"1056","type":"CDSView"},{"attributes":{},"id":"1212","type":"Selection"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{"below":[{"id":"1029"}],"center":[{"id":"1032"},{"id":"1036"},{"id":"1074"}],"js_event_callbacks":{"pan":[{"id":"1189"}],"tap":[{"id":"1189"}]},"left":[{"id":"1033"}],"min_height":400,"renderers":[{"id":"1055"},{"id":"1061"},{"id":"1080"},{"id":"1086"},{"id":"1104"},{"id":"1111"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1044"},"x_range":{"id":"1021"},"x_scale":{"id":"1025"},"y_range":{"id":"1106"},"y_scale":{"id":"1027"}},"id":"1020","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1125","type":"UnionRenderers"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{},"id":"1021","type":"DataRange1d"},{"attributes":{},"id":"1211","type":"UnionRenderers"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{},"id":"1126","type":"Selection"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1025","type":"LinearScale"},{"attributes":{},"id":"1027","type":"LinearScale"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1059","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1052"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1054"},"nonselection_glyph":{"id":"1053"},"view":{"id":"1056"}},"id":"1055","type":"GlyphRenderer"},{"attributes":{},"id":"1030","type":"BasicTicker"},{"attributes":{"axis":{"id":"1029"},"coordinates":null,"group":null,"ticker":null},"id":"1032","type":"Grid"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1058","type":"Line"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1060","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1058"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1060"},"nonselection_glyph":{"id":"1059"},"view":{"id":"1062"}},"id":"1061","type":"GlyphRenderer"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1170","type":"FuncTickFormatter"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1126"},"selection_policy":{"id":"1125"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{"below":[{"id":"1138"}],"center":[{"id":"1141"},{"id":"1145"}],"left":[{"id":"1142"}],"min_height":400,"renderers":[{"id":"1164"}],"sizing_mode":"stretch_both","title":{"id":"1168"},"toolbar":{"id":"1153"},"x_range":{"id":"1167"},"x_scale":{"id":"1134"},"y_range":{"id":"1166"},"y_scale":{"id":"1136"}},"id":"1129","subtype":"Figure","type":"Plot"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["1/s","1/min","1/h","1/d"],"sizing_mode":"stretch_width","title":"Reaction Unit:","value":"1/h"},"id":"1005","type":"Select"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1185","type":"FuncTickFormatter"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [m2/s]&#x27;"},"id":"1012","type":"FuncTickFormatter"},{"attributes":{},"id":"1134","type":"LinearScale"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["m2/s","m2/min","m2/h","m2/d"],"sizing_mode":"stretch_width","title":"Dispersion Unit:","value":"m2/h"},"id":"1006","type":"Select"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [1/s]&#x27;"},"id":"1008","type":"FuncTickFormatter"},{"attributes":{"end":10.000000000000002},"id":"1167","type":"Range1d"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [1/d]&#x27;"},"id":"1011","type":"FuncTickFormatter"},{"attributes":{},"id":"1136","type":"LinearScale"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1187","type":"RadioButtonGroup"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["mL/min","m3/s","mL/h","L/h"],"sizing_mode":"stretch_width","title":"Flow Rate Unit:","value":"mL/h"},"id":"1007","type":"Select"},{"attributes":{},"id":"1139","type":"BasicTicker"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [1/min]&#x27;"},"id":"1009","type":"FuncTickFormatter"},{"attributes":{"axis":{"id":"1138"},"coordinates":null,"group":null,"ticker":null},"id":"1141","type":"Grid"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1030"}},"id":"1029","type":"LinearAxis"},{"attributes":{},"id":"1147","type":"WheelZoomTool"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1034"}},"id":"1033","type":"LinearAxis"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1215"},"group":null,"major_label_policy":{"id":"1216"},"major_label_text_font_size":"12pt","ticker":{"id":"1143"}},"id":"1142","type":"LinearAxis"},{"attributes":{"axis":{"id":"1142"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1145","type":"Grid"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [m2/min]&#x27;"},"id":"1013","type":"FuncTickFormatter"},{"attributes":{},"id":"1143","type":"BasicTicker"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [m2/h]&#x27;"},"id":"1014","type":"FuncTickFormatter"},{"attributes":{},"id":"1151","type":"HelpTool"},{"attributes":{},"id":"1146","type":"PanTool"},{"attributes":{"axis":{"id":"1033"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1036","type":"Grid"},{"attributes":{"overlay":{"id":"1152"}},"id":"1148","type":"BoxZoomTool"},{"attributes":{},"id":"1042","type":"HelpTool"},{"attributes":{},"id":"1149","type":"SaveTool"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [1/h]&#x27;"},"id":"1010","type":"FuncTickFormatter"},{"attributes":{},"id":"1150","type":"ResetTool"},{"attributes":{},"id":"1037","type":"PanTool"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1053","type":"Line"},{"attributes":{},"id":"1034","type":"BasicTicker"},{"attributes":{"overlay":{"id":"1043"}},"id":"1039","type":"BoxZoomTool"},{"attributes":{},"id":"1040","type":"SaveTool"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1152","type":"BoxAnnotation"},{"attributes":{},"id":"1041","type":"ResetTool"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1163","type":"Line"},{"attributes":{},"id":"1038","type":"WheelZoomTool"},{"attributes":{"end":0.005,"format":{"id":"1185"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1186","type":"Slider"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1161"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1163"},"nonselection_glyph":{"id":"1162"},"view":{"id":"1165"}},"id":"1164","type":"GlyphRenderer"},{"attributes":{"label":{"value":"lower / upper Quartile"},"renderers":[{"id":"1061"}]},"id":"1075","type":"LegendItem"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1079","type":"Line"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1077","type":"Line"},{"attributes":{"source":{"id":"1003"}},"id":"1165","type":"CDSView"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1078","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1077"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1079"},"nonselection_glyph":{"id":"1078"},"view":{"id":"1081"}},"id":"1080","type":"GlyphRenderer"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yloQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D+5zh0IMv3vP02p4ouX9+8/E2UT0y/y7z8hjU+VvOzvP+w123Q85+8/KFFc8q3h7z8+w0JqD9zvP4pIEBJf1u8/Nc2A9ZrQ7z9pLJTzwMrvP0elervOxO8/JLVlycG+7z/kbj9jl7jvPx3XSpVMsu8/20KwLt6r7z/ZM/m9SKXvP2Wvf42Inu8/zJTVn5mX7z8pBCmsd5DvP0l1qxoeie8/2K8BAYiB7z/eZ8MesHnvP0PTEdqQce8/exxNPCRp7z/7IfHuY2DvP2x4ojhJV+8/3SN1+sxN7z+O8Xat50PvPxTFh2CROe8/jYeKtsEu7z8ms/nkbyPvP7Su6rKSF+8/QlKLeCAL7z/X+yQfD/7uP4ORsCFU8O4/lKgGjuTh7j9syLYGtdLuPyNfkMW5wu4/jX7nnuax7j/71p4FL6DuP1Ci/w+Gje4/rktnfd557j9ll9G8KmXuP3XiRPRcT+4/LcIkCWc47j/1222pOiDuPz483FXJBu4/qcP7bATs7T9pdSA33c/tP7+LQvNEsu0/xjq45CyT7T+V+sRhhnLtP/US9OJCUO0/1voxE1Qs7T8275XgqwbtP5T3yo083+w/JmUFxPi17D8hvW+l04rsP2ry99/AXew/Gd9jwLQu7D+sF5JFpP3rP+1/yjOFyus/boEAKE6V6z/8a+eq9l3rPwxnuEN3JOs/wHSIisno6j/BYQw66KrqP1wcqEDPauo/odWm0Hso6j94g3lv7OPpP+nd2QMhnek/VcWw4hpU6T9HJKDa3AjpP2rWET5ru+g/GOWu68tr6D9xgCRVBhroPzN+HoQjxuc/tNJhHS5w5z91Z/RhMhjnP1TgQi4+vuY/1EY492Bi5j+gKT/FqwTmP45/Jy0xpeU/vH7wRgVE5T+9kXmiPeHkP7ycITrxfOQ/2NBfYzgX5D9OUmW9LLDjP2ft2h3pR+M/ePLRe4ne4j8aCgPZKnTiP1NdeSnrCOI/H8DLOemc4T/7nwiURDDhP8dAfGMdw+A/Hfon0pxX4D9i/eJU4/7fP+Zq0Uuufd8/Zx0sI7AM3z8nQTnk06LeP9377gwPOd4/d+2vmWjP3T8cG1+C52XdP9yn8biS/Nw/LHgCKHGT3D97PGixiSrcP21ezizjwds/NUpRZoRZ2z+5jB4ddPHaP9U8GQK5ido/OCSDtlki2j8tGqvKXLvZPwUAobzIVNk/Y8zv9qPu2D+TD17P9IjYP1RYtYXBI9g/Hd2QQhC/1z9jyjMW51rXP0CTZ/dL99Y/nZ1iwkSU1j+Jn7c31zHWP1f/TfsI0NU/ooNjk99u1T+rnJdnYA7VP7SLAMCQrtQ/bqhKxHVP1D+hAOJ6FPHTP8mIJshxk9M/KRCrbZI20z/iJX8Je9rSP/oXhBUwf9I/6C/N5rUk0j8HTAutEMvRP8fvA3JEctE/198TGVUa0T+nWr1eRsPQP4b4QdgbbdA/3zlI89gX0D9tihnrAYfPP7ejPvkt4M4/b25W+zs7zj/XKJeKMZjNP3n91e4T98w/00JdHuhXzD83adm9srrLP9dZXCB4H8s/7QF3RzyGyj8svGjjAu/JP6ZCZFPPWck/X8zppaTGyD9I8TWZhTXIP9boxJt0psc/gbDpzHMZxz+/oHj9hI7GP6zwhLCpBcY/IKMwHON+xT/tUY4qMvrEP7JGlHqXd8Q/bUwgYRP3wz+SnwvqpXjDP7ZeTtlO/MI/FtoxrA2Cwj+aHJGa4QnCP5kFJ5jJk8E/oEjpVcQfwT9epW9D0K3APxeoZpDrPcA/JYMaXCigvz+fB3mhj8i+P+if8eIH9b0/DIMXn4slvT8NRUzkFFq8Pw1oElSdkrs/NC9tJh7Puj8CTUwtkA+6P40IAtjrU7k/PnnCNimcuD8aeir+P+i3P3P7zIonOLc/61zF5NaLtj9lf03DROO1PypEVpBnPrU/JjQhbDWdtD/gENowpP+zP9UXL3apZbM/XsjmlDrPsj9aA3KqTDyyP09leZzUrLE/6MJkHMcgsT83uduqGJiwP2JMPpu9ErA/uzApLlQhrz8xQulCpCOuP2SzujRTLK0/ygcMhEg7rD+gJkJ4a1CrPw==","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yupQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"source":{"id":"1002"}},"id":"1081","type":"CDSView"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1162","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1084","type":"Line"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1083","type":"Line"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1043","type":"BoxAnnotation"},{"attributes":{"tools":[{"id":"1146"},{"id":"1147"},{"id":"1148"},{"id":"1149"},{"id":"1150"},{"id":"1151"}]},"id":"1153","type":"Toolbar"},{"attributes":{"source":{"id":"1002"}},"id":"1087","type":"CDSView"},{"attributes":{"end":1.05,"start":-0.03},"id":"1106","type":"Range1d"},{"attributes":{"active_multi":{"id":"1113"},"tools":[{"id":"1037"},{"id":"1038"},{"id":"1039"},{"id":"1040"},{"id":"1041"},{"id":"1042"},{"id":"1113"}]},"id":"1044","type":"Toolbar"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1083"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1085"},"nonselection_glyph":{"id":"1084"},"view":{"id":"1087"}},"id":"1086","type":"GlyphRenderer"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["No Sorption","Linear Sorption"],"sizing_mode":"stretch_width"},"id":"1188","type":"RadioButtonGroup"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1085","type":"Line"},{"attributes":{"label":{"value":"Minimum / Maximum"},"renderers":[{"id":"1086"}]},"id":"1099","type":"LegendItem"}],"root_ids":["1020","1194","1129","1195"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"31ef9bf7-72be-482d-9ad0-573afaff2fcb","root_ids":["1020","1194","1129","1195"],"roots":{"1020":"75e17cd7-c79e-4f13-99cc-7ab065453aaf","1129":"5a9754d6-8bcc-4f01-855f-1b87b0ec509d","1194":"df6e9cf8-cfaa-43aa-8502-d0241a464251","1195":"b23e513c-adbe-4aa5-88c5-19b1e6b7e52f"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();