    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"21d5eca8-4758-49e5-a018-2e11d71857db":{"defs":[],"roots":{"references":[{"attributes":{"source":{"id":"1002"}},"id":"1081","type":"CDSView"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1083"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1085"},"nonselection_glyph":{"id":"1084"},"view":{"id":"1087"}},"id":"1086","type":"GlyphRenderer"},{"attributes":{"end":1.05,"start":-0.03},"id":"1106","type":"Range1d"},{"attributes":{"label":{"value":"Minimum / Maximum"},"renderers":[{"id":"1086"}]},"id":"1099","type":"LegendItem"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1085","type":"Line"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1078","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1077"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1079"},"nonselection_glyph":{"id":"1078"},"view":{"id":"1081"}},"id":"1080","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1079","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1087","type":"CDSView"},{"attributes":{},"id":"1212","type":"Selection"},{"attributes":{},"id":"1211","type":"UnionRenderers"},{"attributes":{"end":7},"id":"1167","type":"Range1d"},{"attributes":{"source":{"id":"1002"}},"id":"1105","type":"CDSView"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1172","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1101","type":"Line"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1152","type":"BoxAnnotation"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1102","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1101"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1103"},"nonselection_glyph":{"id":"1102"},"view":{"id":"1105"}},"id":"1104","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.2,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1103","type":"Line"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"black"},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1108","type":"Scatter"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.1},"line_alpha":{"value":0.1},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1109","type":"Scatter"},{"attributes":{"fill_alpha":{"value":0.2},"fill_color":{"value":"black"},"hatch_alpha":{"value":0.2},"line_alpha":{"value":0.2},"marker":{"value":"diamond"},"size":{"value":18},"x":{"field":"xBTC"},"y":{"field":"yBTC"}},"id":"1110","type":"Scatter"},{"attributes":{"coordinates":null,"data_source":{"id":"1004"},"glyph":{"id":"1108"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1110"},"nonselection_glyph":{"id":"1109"},"view":{"id":"1112"}},"id":"1111","type":"GlyphRenderer"},{"attributes":{"num_objects":1,"renderers":[{"id":"1111"}]},"id":"1113","type":"PointDrawTool"},{"attributes":{"source":{"id":"1004"}},"id":"1112","type":"CDSView"},{"attributes":{"below":[{"id":"1138"}],"center":[{"id":"1141"},{"id":"1145"}],"left":[{"id":"1142"}],"min_height":400,"renderers":[{"id":"1164"}],"sizing_mode":"stretch_both","title":{"id":"1168"},"toolbar":{"id":"1153"},"x_range":{"id":"1167"},"x_scale":{"id":"1134"},"y_range":{"id":"1166"},"y_scale":{"id":"1136"}},"id":"1129","subtype":"Figure","type":"Plot"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1161","type":"Line"},{"attributes":{},"id":"1037","type":"PanTool"},{"attributes":{},"id":"1070","type":"AllLabels"},{"attributes":{},"id":"1215","type":"BasicTickFormatter"},{"attributes":{},"id":"1042","type":"HelpTool"},{"attributes":{"overlay":{"id":"1043"}},"id":"1039","type":"BoxZoomTool"},{"attributes":{},"id":"1216","type":"AllLabels"},{"attributes":{},"id":"1040","type":"SaveTool"},{"attributes":{},"id":"1041","type":"ResetTool"},{"attributes":{"tools":[{"id":"1146"},{"id":"1147"},{"id":"1148"},{"id":"1149"},{"id":"1150"},{"id":"1151"}]},"id":"1153","type":"Toolbar"},{"attributes":{},"id":"1218","type":"BasicTickFormatter"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1043","type":"BoxAnnotation"},{"attributes":{},"id":"1219","type":"AllLabels"},{"attributes":{"line_alpha":0.6,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1083","type":"Line"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yloQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"yupQ":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1072"},"selection_policy":{"id":"1071"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{},"id":"1071","type":"UnionRenderers"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1058"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1060"},"nonselection_glyph":{"id":"1059"},"view":{"id":"1062"}},"id":"1061","type":"GlyphRenderer"},{"attributes":{"coordinates":null,"group":null,"items":[{"id":"1075"},{"id":"1099"}]},"id":"1074","type":"Legend"},{"attributes":{},"id":"1072","type":"Selection"},{"attributes":{},"id":"1125","type":"UnionRenderers"},{"attributes":{"source":{"id":"1003"}},"id":"1165","type":"CDSView"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1163","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1162","type":"Line"},{"attributes":{},"id":"1126","type":"Selection"},{"attributes":{"coordinates":null,"group":null,"text":"Breakthrough Curve at x = 0.100 m (Drag diamond in upper plot to change)","text_font_size":"13pt"},"id":"1168","type":"Title"},{"attributes":{"end":1.05},"id":"1166","type":"Range1d"},{"attributes":{},"id":"1025","type":"LinearScale"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1058","type":"Line"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1174","type":"FuncTickFormatter"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1052"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1054"},"nonselection_glyph":{"id":"1053"},"view":{"id":"1056"}},"id":"1055","type":"GlyphRenderer"},{"attributes":{"active_multi":{"id":"1113"},"tools":[{"id":"1037"},{"id":"1038"},{"id":"1039"},{"id":"1040"},{"id":"1041"},{"id":"1042"},{"id":"1113"}]},"id":"1044","type":"Toolbar"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1170","type":"FuncTickFormatter"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1176","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1053","type":"Line"},{"attributes":{"end":1.9459101490553132,"format":{"id":"1170"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.008853665428037451,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1171","type":"Slider"},{"attributes":{"source":{"id":"1002"}},"id":"1062","type":"CDSView"},{"attributes":{},"id":"1021","type":"DataRange1d"},{"attributes":{"label":{"value":"lower / upper Quartile"},"renderers":[{"id":"1061"}]},"id":"1075","type":"LegendItem"},{"attributes":{"end":43200,"format":{"id":"1172"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1173","type":"Slider"},{"attributes":{"below":[{"id":"1029"}],"center":[{"id":"1032"},{"id":"1036"},{"id":"1074"}],"js_event_callbacks":{"pan":[{"id":"1189"}],"tap":[{"id":"1189"}]},"left":[{"id":"1033"}],"min_height":400,"renderers":[{"id":"1055"},{"id":"1061"},{"id":"1080"},{"id":"1086"},{"id":"1104"},{"id":"1111"}],"sizing_mode":"stretch_both","title":{"id":"1063"},"toolbar":{"id":"1044"},"x_range":{"id":"1021"},"x_scale":{"id":"1025"},"y_range":{"id":"1106"},"y_scale":{"id":"1027"}},"id":"1020","subtype":"Figure","type":"Plot"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1060","type":"Line"},{"attributes":{"end":0.5,"format":{"id":"1174"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1175","type":"Slider"},{"attributes":{"coordinates":null,"group":null},"id":"1063","type":"Title"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1052","type":"Line"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1014"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1178","type":"RangeSlider"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yupQ"}},"id":"1077","type":"Line"},{"attributes":{"code":"  return (tick).toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1019","type":"FuncTickFormatter"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["No Sorption","Linear Sorption"],"sizing_mode":"stretch_width"},"id":"1188","type":"RadioButtonGroup"},{"attributes":{"code":"  return (tick/60).toFixed(2)+&#x27; [mL/min]&#x27;"},"id":"1018","type":"FuncTickFormatter"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [m2/s]&#x27;"},"id":"1012","type":"FuncTickFormatter"},{"attributes":{"end":0.005,"format":{"id":"1185"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":5e-05,"step":5e-05,"title":"Linear Partinioning Coefficient","value":0.002,"visible":false},"id":"1186","type":"Slider"},{"attributes":{"code":"  return (tick/1000).toFixed(4)+&#x27; [L/h]&#x27;"},"id":"1017","type":"FuncTickFormatter"},{"attributes":{"end":0.2,"format":{"id":"1176"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1177","type":"Slider"},{"attributes":{"code":"  return (tick/3600/1000/1000).toExponential(2)+&#x27; [m3/s]&#x27;"},"id":"1016","type":"FuncTickFormatter"},{"attributes":{"code":"return (tick/1000).toFixed(2)+&#x27; [kg/L]&#x27;"},"id":"1183","type":"FuncTickFormatter"},{"attributes":{"end":0.0,"format":{"id":"1010"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1179","type":"RangeSlider"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [1/h]&#x27;"},"id":"1010","type":"FuncTickFormatter"},{"attributes":{"end":3000,"format":{"id":"1183"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":2000,"title":"Solid Density","value":2650,"visible":false},"id":"1184","type":"Slider"},{"attributes":{},"id":"1038","type":"WheelZoomTool"},{"attributes":{"code":"return (tick*1000).toFixed(2)+&#x27; [L/kg]&#x27;"},"id":"1185","type":"FuncTickFormatter"},{"attributes":{},"id":"1066","type":"BasicTickFormatter"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1054","type":"Line"},{"attributes":{"end":50,"format":{"id":"1019"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1180","type":"Slider"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1181","type":"FuncTickFormatter"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"AAAAAAAAAACMVwXXNZBzPSFi7JesUsU+wrox0ZvFNz82nBZ5+ZlxP0Vwf5RdApM/zY2j+tCyqD/f8azjj/m3P2wW63K8ZMM/foMra+DKyz/7/3aHdk3SP3EafvbcrtY/JIqQpWDf2j8VR49qXcTeP6U8NEXFJ+E/yUFXq8294j8KxpPzrSTkP0Rl++q4XuU/dHrOpFtv5j/ioVOailrnP9kmeJpfJOg/r8VVetvQ6D9Dj30OwWPpP6XaWHuB4Ok/SxyQDDRK6j+B77xvlaPqP6Mns3AL7+o/LlbcQKsu6z+9jT/7QGTrP5PI5IxXkes/QCjjekC36z/ZPOw2G9frP7HxN9jb8es/C+znJlEI7D/pGE33KRvsPyvrw9v5Kuw/B2EYOT047D/0avTLXEPsP+PYta6wTOw/1RXT7oJU7D+Y/x/AEVvsP/efGFuRYOw/UPoGki1l7D99NoInC2nsP17Oeu9IbOw/cZDTwgBv7D+NgW9MSHHsPya4orUxc+w/muQXN8x07D9jyHuSJHbsPz4kmXhFd+w/kxYA3zd47D8X5thHA3nsPwZDGf6teew/+sr5Rz167D+d6z2RtXrsPxg3oI4ae+w//Cd/W2977D/hubiStnvsP+XWfGPye+w/xE++oiR87D/Z8c7ZTnzsP46GnFJyfOw/AmrxIZB87D9tXwswqXzsP5zZzT++fOw/ZazJ9M987D/grErY3nzsPwXhk13rfOw/KkJs5fV87D9bjBjB/nzsP5Ly2TQGfew/Rq4Fegx97D/vIcbAEX3sP/iNkzEWfew/hBFw7hl97D/XyPATHX3sP+pCHLoffew/dTIl9SF97D9AIAfWI33sP3z1CWslfew//GswwCZ97D9uypTfJ33sP/LFttEofew/dOy8nSl97D/BmKtJKn3sP0Uek9oqfew/KJW2VCt97D+Hday7K33sP4n/eRIsfew/jEWqWyx97D8ai2GZLH3sP8+Obc0sfew/TT1T+Sx97D/aNloeLX3sP8mAlj0tfew/Bq3wVy197D+/tixuLX3sP6PI74Atfew/EhnFkC197D9yASKeLX3sP9Jvaaktfew/S83usi197D8Zb/i6LX3sPwulwcEtfew/7nR8xy197D8GEFPMLX3sP7sNadAtfew/wHTc0y197D9mmsbWLX3sP/XePNktfew/TUxR2y197D+tGxPdLX3sP28mj94tfew/HUXQ3y197D+Zn9/gLX3sP67wxOEtfew/Gr+G4i197D+cjSrjLX3sP4cDteMtfew/9Q4q5C197D+oAY3kLX3sP1+p4OQtfew/amQn5S197D/+MmPlLX3sP9zFleUtfew/pYrA5S197D9RtuTlLX3sP/RNA+Ytfew/Ni4d5i197D+UETPmLX3sP6+VReYtfew/wj9V5i197D9xgGLmLX3sP/e2beYtfew/1DN35i197D8bO3/mLX3sP1wGhuYtfew/RcaL5i197D8ApJDmLX3sP1vClOYtfew/yz6Y5i197D84MpvmLX3sP7SxneYtfew/EM+f5i197D9hmaHmLX3sP2wdo+Ytfew/+GWk5i197D8rfKXmLX3sP71npuYtfew/OS+n5i197D8q2KfmLX3sPz1nqOYtfew/auCo5i197D8NR6nmLX3sP/udqeYtfew/n+ep5i197D//JarmLX3sP9haquYtfew/nIeq5i197D+LrarmLX3sP67NquYtfew/5+iq5i197D/6/6rmLX3sP4cTq+Ytfew/FySr5i197D8hMqvmLX3sPwg+q+Ytfew/HUir5i197D+pUKvmLX3sP+hXq+Ytfew/C16r5i197D8/Y6vmLX3sP6hnq+Ytfew/Zmur5i197D+RbqvmLX3sP0Fxq+Ytfew/iXOr5i197D94davmLX3sPxt3q+Ytfew/fnir5i197D+reavmLX3sP6p6q+Ytfew/g3ur5i197D88fKvmLX3sP9h8q+Ytfew/XH2r5i197D/NfavmLX3sPyx+q+Ytfew/fH6r5i197D/AfqvmLX3sP/t+q+Ytfew/LH+r5i197D9Wf6vmLX3sP3l/q+Ytfew/l3+r5i197D+vf6vmLX3sP8Z/q+Ytfew/2H+r5i197D/of6vmLX3sPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1212"},"selection_policy":{"id":"1211"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"end":1,"format":{"id":"1181"},"js_property_callbacks":{"change:value":[{"id":"1189"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1182","type":"Slider"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [m2/min]&#x27;"},"id":"1013","type":"FuncTickFormatter"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["1/s","1/min","1/h","1/d"],"sizing_mode":"stretch_width","title":"Reaction Unit:","value":"1/h"},"id":"1005","type":"Select"},{"attributes":{},"id":"1067","type":"AllLabels"},{"attributes":{},"id":"1030","type":"BasicTicker"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1189"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1187","type":"RadioButtonGroup"},{"attributes":{"code":"  return (Math.exp(tick)).toExponential(2).toString()+&#x27; [m2/h]&#x27;"},"id":"1014","type":"FuncTickFormatter"},{"attributes":{"children":[{"id":"1187"},{"id":"1188"},{"id":"1171"},{"id":"1175"},{"id":"1177"},{"id":"1179"},{"id":"1178"},{"id":"1180"},{"id":"1182"},{"id":"1173"},{"id":"1184"},{"id":"1186"}],"sizing_mode":"stretch_width"},"id":"1194","type":"Column"},{"attributes":{},"id":"1027","type":"LinearScale"},{"attributes":{"axis":{"id":"1029"},"coordinates":null,"group":null,"ticker":null},"id":"1032","type":"Grid"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [m2/d]&#x27;"},"id":"1015","type":"FuncTickFormatter"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1218"},"group":null,"major_label_policy":{"id":"1219"},"major_label_text_font_size":"12pt","ticker":{"id":"1139"}},"id":"1138","type":"LinearAxis"},{"attributes":{"data":{"xBTC":[0.1],"yBTC":[0]},"selected":{"id":"1126"},"selection_policy":{"id":"1125"}},"id":"1004","type":"ColumnDataSource"},{"attributes":{},"id":"1134","type":"LinearScale"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1066"},"group":null,"major_label_policy":{"id":"1067"},"major_label_text_font_size":"12pt","ticker":{"id":"1034"}},"id":"1033","type":"LinearAxis"},{"attributes":{},"id":"1136","type":"LinearScale"},{"attributes":{},"id":"1139","type":"BasicTicker"},{"attributes":{"axis":{"id":"1138"},"coordinates":null,"group":null,"ticker":null},"id":"1141","type":"Grid"},{"attributes":{"source":{"id":"1002"}},"id":"1056","type":"CDSView"},{"attributes":{},"id":"1147","type":"WheelZoomTool"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1191"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1190","type":"Button"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1191","type":"CustomJS"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1215"},"group":null,"major_label_policy":{"id":"1216"},"major_label_text_font_size":"12pt","ticker":{"id":"1143"}},"id":"1142","type":"LinearAxis"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"yloQ"}},"id":"1059","type":"Line"},{"attributes":{"axis":{"id":"1142"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1145","type":"Grid"},{"attributes":{},"id":"1143","type":"BasicTicker"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1193"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1192","type":"Button"},{"attributes":{},"id":"1151","type":"HelpTool"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["m2/s","m2/min","m2/h","m2/d"],"sizing_mode":"stretch_width","title":"Dispersion Unit:","value":"m2/h"},"id":"1006","type":"Select"},{"attributes":{},"id":"1146","type":"PanTool"},{"attributes":{"code":"  return (Math.exp(tick)/3600).toExponential(2).toString()+&#x27; [1/s]&#x27;"},"id":"1008","type":"FuncTickFormatter"},{"attributes":{"overlay":{"id":"1152"}},"id":"1148","type":"BoxZoomTool"},{"attributes":{"axis":{"id":"1033"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1036","type":"Grid"},{"attributes":{},"id":"1149","type":"SaveTool"},{"attributes":{},"id":"1150","type":"ResetTool"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;;&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;;&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1193","type":"CustomJS"},{"attributes":{},"id":"1069","type":"BasicTickFormatter"},{"attributes":{"args":{"BTCp":{"id":"1129"},"D_dict":{"m2/d":{"id":"1015"},"m2/h":{"id":"1014"},"m2/min":{"id":"1013"},"m2/s":{"id":"1012"}},"D_us":{"id":"1006"},"Kd_sl":{"id":"1186"},"Lcube1":[[0.7195295855447068],[0.20822519804909467],[0.4024432695207755],[0.6097935496386563],[0.08722329071771943],[0.44920801433391533],[0.771603264925245],[0.6897350430352357],[0.4371772509395704],[0.27762610967690926],[0.9552247904139926],[0.17253034611333706],[0.3471485592577991],[0.31190896960110853],[0.0010087866467896533],[0.41789213959229765],[0.7832085557980356],[0.39406159136330265],[0.5377617641013929],[0.9412058801749897],[0.05681613097886853],[0.6278751356762583],[0.8097880790790286],[0.060516009600076],[0.11438307883434227],[0.26982602313665616],[0.9318641615962474],[0.8908509512013049],[0.03979108687208876],[0.7011316307224429],[0.5261548801526902],[0.8558203768922041],[0.2529059922748838],[0.4535158373303056],[0.3591931240053308],[0.022854432073134767],[0.09252596583422484],[0.9022003815375497],[0.9285580099469071],[0.5707879530019219],[0.2885554600075948],[0.8254668336366207],[0.7371634472254917],[0.12791779728569483],[0.07134170667655186],[0.5121269322297624],[0.30743063417444544],[0.7464837053308858],[0.3740794654626625],[0.8483152928305396],[0.6760825802326377],[0.1608718362213218],[0.6360739219054019],[0.6561743566347928],[0.1501369445974402],[0.04459668063868905],[0.8878890258275769],[0.2462468222865186],[0.5992624695163326],[0.48732869312186655],[0.6618846413110769],[0.21349163404716265],[0.9866714440077076],[0.10645421520536388],[0.8775961454833715],[0.3285789886735985],[0.2994091764823704],[0.9957930950456566],[0.6105108664167589],[0.9664198958947711],[0.019457854080099594],[0.7501064550042876],[0.33194397397211167],[0.47692762872806],[0.5425758278395572],[0.1835122077035969],[0.19185912159499854],[0.5639408384418721],[0.38520583076365666],[0.86989961274964],[0.22653374904738965],[0.8340055151278315],[0.23136546003055622],[0.5027631661777783],[0.14867317699909288],[0.768632696718485],[0.5835786525446078],[0.9739069565600498],[0.13017038011452448],[0.4617677133484747],[0.8125273356801196],[0.5543632626583692],[0.4977626155241968],[0.6455784162218553],[0.7924205719864947],[0.4272941106156708],[0.36881061637399265],[0.7257729351753487],[0.9139215354244127],[0.6955437413565153]],"Lcube2":[[0.8170499979796549],[0.722999223562247],[0.6400502097514917],[0.45464465841964485],[0.1776292685779416],[0.6082883055566568],[0.8768749940045757],[0.8525472159574379],[0.0581522709490207],[0.9599427726763821],[0.7409703511478253],[0.32973193551756547],[0.5204508272525048],[0.3158335706354338],[0.013006864376443326],[0.8281585582307991],[0.12286946920800697],[0.9398889690423375],[0.4919432887896074],[0.22784571482383073],[0.8697251680400019],[0.08518482992888156],[0.5514509480211018],[0.6735987332092302],[0.3985007429715503],[0.6605540354374181],[0.20906452231719616],[0.6199113415965453],[0.6899711568244666],[0.03457139164348843],[0.9712913563875709],[0.7875333616621738],[0.2448164912615659],[0.5307344076009649],[0.09181684415420265],[0.4020070755829737],[0.3765358035590715],[0.7016477225563574],[0.04927553019168679],[0.6317376790332739],[0.5963048743780507],[0.11681830695055911],[0.02481235652533008],[0.5737958714672362],[0.18865927888560313],[0.3027579021993601],[0.38068162262478994],[0.7519063372005164],[0.9024021098549504],[0.06361841845391016],[0.16264005109265425],[0.2760575954540979],[0.48657108258659976],[0.9457425803993403],[0.9856055538624333],[0.5000253677132434],[0.1954809986255994],[0.14661917688311166],[0.4721286150406203],[0.23779042132089104],[0.5855967494663598],[0.21271557029116261],[0.10647070434741511],[0.6943638297575803],[0.5134006378007043],[0.35246359152712065],[0.9189187344344447],[0.6504430535273802],[0.2649581604450659],[0.3657811110113696],[0.8070721100006587],[0.7331778103565887],[0.8884683939032962],[0.07321609295610738],[0.8997290401226552],[0.25804492393437634],[0.7993690595411677],[0.41730523928384067],[0.5428021568446276],[0.7761072611466893],[0.468537094303474],[0.9984821118731234],[0.7652454560150932],[0.1542464421405674],[0.5677295872843207],[0.00965824967905527],[0.4458802357172435],[0.9224387883017917],[0.34968872106832416],[0.29223075843364765],[0.43332119153469434],[0.710628243203266],[0.13517187894563285],[0.429518642776161],[0.626125477848493],[0.28197573661575337],[0.8497954696404006],[0.8348991582445651],[0.33108970033976626],[0.9648908750537883]],"col_len_sl":{"id":"1175"},"col_rad_sl":{"id":"1177"},"disp_sl":{"id":"1178"},"fl_dict":{"L/h":{"id":"1017"},"m3/s":{"id":"1016"},"mL/h":{"id":"1019"},"mL/min":{"id":"1018"}},"fl_us":{"id":"1007"},"flow_sl":{"id":"1180"},"pore_vol_sl":{"id":"1171"},"poros_sl":{"id":"1182"},"pulse_inj_sl":{"id":"1173"},"r_dict":{"1/d":{"id":"1011"},"1/h":{"id":"1010"},"1/min":{"id":"1009"},"1/s":{"id":"1008"}},"r_us":{"id":"1005"},"reac_sl":{"id":"1179"},"rg_CP":{"id":"1187"},"rg_ST":{"id":"1188"},"rho_s_sl":{"id":"1184"},"source1":{"id":"1002"},"source2":{"id":"1003"},"source3":{"id":"1004"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var cloQ = []\\n  var cupQ = []\\n  var r_mean = (reac_l+reac_h)/2\\n  var D_mean = (disp_l+disp_h)/2\\n  var H_mean = 2*r_mean*D_mean/sep_vel**2\\n  var gam_mean = get_gamma(r_mean,D_mean,vel)\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        if (rg_CP == 1 &amp;&amp; t &gt; t_inj) {\\n          c[i] = 0\\n          cmin[i] = 0\\n          cmax[i] = 0\\n        } else {\\n          c[i] = 1\\n          cmin[i] = 1\\n          cmax[i] = 1\\n        }\\n        \\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var H_intermed = 2*r_intermed*D_intermed/sep_vel**2\\n            //var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg_CP == 1) {\\n              // Pulse injection\\n              if (t&lt;=t_inj) {\\n                //intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n                // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2/Ret * ( math.exp(-r_intermed*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n              } else {\\n                //intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n                // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n                intlist[j] = 1/2/Ret * math.exp(-r_intermed*x[i]/sep_vel) * ( (1-math.erf((x[i]-sep_vel*t*(1+H_intermed))/(2*math.sqrt(D_intermed*t)))) - (1-math.erf((x[i]-sep_vel*(t-t_inj)*(1+H_intermed))/(2*math.sqrt(D_intermed*(t-t_inj))))) )\\n              }\\n            } else {\\n              // Cotinuous injection\\n              //intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n              // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n              intlist[j] = 1/2/Ret * ( math.exp(-r_intermed*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_intermed))/(2*math.sqrt(D_intermed*t)))) )\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        if (rg_CP==1){\\n          // Pulse injection\\n          if (t&lt;=t_inj) {\\n            //c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n            // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            c[i] = 1/2/Ret * ( math.exp(-r_mean*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n          } else {\\n            //c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))))\\n            // eq 10 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n            c[i] = 1/2/Ret * math.exp(-r_mean*x[i]/sep_vel) * ( (1-math.erf((x[i]-sep_vel*t*(1+H_mean))/(2*math.sqrt(D_mean*t)))) - (1-math.erf((x[i]-sep_vel*(t-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(t-t_inj))))) )\\n          }\\n        } else {\\n          // Continuous injection\\n          // eq 8.66 in hydrogeology script (Ogata Banks)\\n          //c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n          // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n          c[i] = 1/2/Ret * ( math.exp(-r_mean*x[i]/sep_vel) * (1-math.erf((x[i] - sep_vel*t*(1+ H_mean))/(2*math.sqrt(D_mean*t)))) )\\n        }\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n        cloQ[i] = math.quantileSeq(intlist, 0.25)\\n        cupQ[i] = math.quantileSeq(intlist, 0.75)\\n    }\\n  }\\n  return [c, cmin, cmax, cloQ, cupQ]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D_mean,r_mean,H_mean) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg_CP==1){\\n        // Pulse injection \\n        if (tsp[i]&lt;=t_inj) {\\n          //c[i] = 1/2 * (1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n          c[i] = 1/2/Ret * ( math.exp(-r_mean*xBTC/vel) * (1-math.erf((xBTC - vel*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        } else {\\n          //c[i] = 1/2 * ((1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n          c[i] = 1/2/Ret * math.exp(-r_mean*xBTC/vel) * ( (1-math.erf((xBTC-vel*tsp[i]*(1+H_mean))/(2*math.sqrt(D_mean*tsp[i])))) - (1-math.erf((xBTC-vel*(tsp[i]-t_inj)*(1+H_mean))/(2*math.sqrt(D_mean*(tsp[i]-t_inj))))) )\\n        }\\n      } else {\\n        // Continuous injection\\n        // eq 8.66 in hydrogeology script (Ogata Banks)\\n        //c[i] = 1/2 * Math.exp(xBTC*vel/(2*D_mean))*(Math.exp((-xBTC)*vel*gam/(2*D_mean))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i])))+math.exp(xBTC*vel*gam/(2*D_mean))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D_mean*tsp[i]))));\\n        // eq 8 in Runkler 1996 (O&#x27;Loughlin and Bowmer)\\n        c[i] = 1/2/Ret * ( math.exp(-r_mean*xBTC/vel) * (1-math.erf((xBTC - vel*tsp[i]*(1+ H_mean))/(2*math.sqrt(D_mean*tsp[i])))) )\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(r_mean,D_mean,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2)\\n  return res\\n}\\n\\nfunction expo(x, f) {\\n  return Number.parseFloat(x).toExponential(f);\\n  //https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar yloQ= source1.data[&#x27;yloQ&#x27;]\\nvar yupQ= source1.data[&#x27;yupQ&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\nvar x3  = source3.data[&#x27;xBTC&#x27;]\\nvar y3  = source3.data[&#x27;yBTC&#x27;]\\n\\nvar rg_CP     = rg_CP.active                      // [0]\\nvar rg_SType  = rg_ST.active                      // [0]\\n\\n\\n// Values needed for all models\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nvar xBTC        = x3[0];                            // [m]\\nconst Kd        = Kd_sl.value                       // [m3/kg]\\nconst rho_s     = rho_s_sl.value                    // [kg/m3]\\n\\n// Derived entities\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel / n                       // [m/s]\\nconst r_mean  = (reac_l+reac_h)/2             // [1/s]\\nconst D_mean  = (disp_l+disp_h)/2             // [m2/s]\\nconst H_mean  = 2*r_mean*D_mean/sep_vel**2    // [m/s]\\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = col_len/sep_vel               // [s] VEL oder SEP_VEL?\\nconst c0      = 1;                            // [-] \\n\\n// Retardation factor\\nif (rg_SType == 0) {\\n  var Ret = 1\\n} else {\\n  var Ret = 1 + (1-n)/n * Kd * rho_s\\n}\\n\\n// Time span list\\nvar tsp = []\\n\\n// Discretize space (upper plot) and time (lower plot)\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// Fix point draw tool to x-axis and limit its range on x-axis\\ny3[0] = 0\\nif (x3[0]&lt;=0.001) {\\n  x3[0] = 0.01\\n} else if (x3[0] &gt; col_len) {\\n  x3[0] = col_len\\n}\\n\\n// Time \\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t         = tPV * PV                          // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * r_mean * D_mean / sep_vel**2) \\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cloQ = []\\nvar cupQ = []\\nvar cBTX = []\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax, cloQ, cupQ] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg_CP,Ret)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,D_mean,r_mean,H_mean,Ret) \\n}\\n\\n\\n// Update sources\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n  yloQ[i] = cloQ[i]\\n  yupQ[i] = cupQ[i]\\n}\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nBTCp.title.text   = &#x27;Breakthrough Curve at x = &#x27; + xBTC.toFixed(3) + &#x27; m (Drag diamond in upper plot to change)&#x27;\\n\\n// Displaying correct sliders\\nif (rg_CP==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\nif (rg_SType == 1) {\\n  rho_s_sl.visible = true\\n  Kd_sl.visible = true\\n} else {\\n  rho_s_sl.visible = false\\n  Kd_sl.visible = false\\n}\\n\\n// Displaying correct units\\nvar r_format  = r_dict[r_us.value]\\nvar D_format  = D_dict[D_us.value]\\nvar fl_format = fl_dict[fl_us.value]\\nreac_sl.format = r_format\\ndisp_sl.format = D_format\\nflow_sl.format = fl_format\\n\\nreac_sl.format.change.emit();\\ndisp_sl.format.change.emit();\\nflow_sl.format.change.emit();\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1189","type":"CustomJS"},{"attributes":{"code":"  return (Math.exp(tick)*24).toExponential(2).toString()+&#x27; [1/d]&#x27;"},"id":"1011","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.1,"line_color":"grey","line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1084","type":"Line"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1161"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1163"},"nonselection_glyph":{"id":"1162"},"view":{"id":"1165"}},"id":"1164","type":"GlyphRenderer"},{"attributes":{"js_event_callbacks":{"tap":[{"id":"1189"}],"value":[{"id":"1189"}]},"options":["mL/min","m3/s","mL/h","L/h"],"sizing_mode":"stretch_width","title":"Flow Rate Unit:","value":"mL/h"},"id":"1007","type":"Select"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1069"},"group":null,"major_label_policy":{"id":"1070"},"major_label_text_font_size":"12pt","ticker":{"id":"1030"}},"id":"1029","type":"LinearAxis"},{"attributes":{"code":"  return (Math.exp(tick)/60).toExponential(2).toString()+&#x27; [1/min]&#x27;"},"id":"1009","type":"FuncTickFormatter"},{"attributes":{"children":[{"id":"1005"},{"id":"1006"},{"id":"1007"},{"id":"1190"},{"id":"1192"}],"sizing_mode":"stretch_width"},"id":"1195","type":"Column"},{"attributes":{},"id":"1034","type":"BasicTicker"}],"root_ids":["1020","1194","1129","1195"]},"title":"Bokeh Application","version":"2.4.1"}}';
                const render_items = [{"docid":"21d5eca8-4758-49e5-a018-2e11d71857db","root_ids":["1020","1194","1129","1195"],"roots":{"1020":"64a623ac-6273-4f78-8de5-87680d917f96","1129":"e13400c9-376d-4917-a498-bc5f4d0bb169","1194":"b6833628-c8f1-49ec-b162-3b8caa9f45a1","1195":"07fcb5c0-9bb7-46e4-acd9-20b390ce2e81"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();