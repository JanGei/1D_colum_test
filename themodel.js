    (function() {
          const fn = function() {
            Bokeh.safely(function() {
              (function(root) {
                function embed_document(root) {
                  
                const docs_json = '{"d2c79187-b757-4a00-aa03-ce638562ffa3":{"defs":[],"roots":{"references":[{"attributes":{"code":"return tick.toFixed(1)+&#x27; [mL/h]&#x27;"},"id":"1106","type":"FuncTickFormatter"},{"attributes":{},"id":"1025","type":"ResetTool"},{"attributes":{"end":0.0,"format":{"id":"1104"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-9.210340371976182,"step":0.03070113457325394,"title":"Reaction coefficient ","value":[-6.907755278982137,-5.298317366548036]},"id":"1105","type":"RangeSlider"},{"attributes":{},"id":"1024","type":"SaveTool"},{"attributes":{"overlay":{"id":"1027"}},"id":"1023","type":"BoxZoomTool"},{"attributes":{"end":-2.3025850929940455,"format":{"id":"1102"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-13.815510557964274,"step":0.038376418216567426,"title":"Dispersion coefficient ","value":[-11.512925464970229,-9.903487552536127]},"id":"1103","type":"RangeSlider"},{"attributes":{},"id":"1021","type":"PanTool"},{"attributes":{"code":"return tick.toFixed(2)+&#x27; [-]&#x27;"},"id":"1108","type":"FuncTickFormatter"},{"attributes":{},"id":"1026","type":"HelpTool"},{"attributes":{"source":{"id":"1002"}},"id":"1046","type":"CDSView"},{"attributes":{"end":50,"format":{"id":"1106"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":1,"step":0.1,"title":"Flow Rate","value":10},"id":"1107","type":"Slider"},{"attributes":{},"id":"1018","type":"BasicTicker"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1110","type":"FuncTickFormatter"},{"attributes":{"data":{"x2":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y2":{"__ndarray__":"6y6wElsolD9d9N30HWKXP8b/rlAg+po/V5IP02P1nj8MWqhLOayhPwuu5EmkE6Q/qMVwHJ+ypj8YnVhaeoqpPwRspyIinKw/HLipfBborz+kPVeMMrexP3wvt0lSl7M/gZguq/iTtT+unW0Tdqy3P7Wn3Tbd37k/J+wKHAQtvD/u8Q31hZK+P6IfL+Vih8A/mK7m9fjPwT+5KIsMBCLDP2J3PyhtfMQ/tfLDFwrexT/oic5noEXHPzZ4koPoscg/UXMa+5Ahyj/gy8fiQZPLP46oMj+gBc0/lYrIcFF3zj/LFtuS/ubPPy/AKuGrqdA/Vil/oItd0T8SXoA1gg7SP81ktzr7u9I/HPm/dmtl0z+r07v4UQrUPxiNrA45qtQ/fHlpE7dE1T/2Jo0Sb9nVP9uVXUERaNY/f3tYTFvw1j/ksK95GHLXP944n6Eh7dc/Cgsc/lxh2D+TKOfTvc7YP62nkfdDNdk/WrpyMfuU2T9Xv/aD+u3ZP/DVBFhjQNo/rxN+k2CM2j8JbA2eJdLaP9zhoFjtEds/b0TzC/lL2z+LWYlSj4DbPxoPbgL7r9s/x5XPGora2z+z62O5jADcP3GLLxtUItw/3CzuqzFA3D/Oq/UmdlrcPxBs+Mtwcdw/oHKRqW6F3D8YpwP/uZbcP4EyEraZpdw/MMdU9VCy3D/z2erKHr3cPyV99+49xtw/03zfnOTN3D+SK9+BRNTcP61BN7+K2dw/TRXq/d/d3D/Vl82RaOHcP3unk6lE5Nw/sIdZiZDm3D/vPVDNZOjcP9QTIbLW6dw/IP/RYPjq3D8kGhs82evcP5E2Vi2G7Nw/czVx7wnt3D8kWJBWbe3cPwZaVJO37dw/lBr+cO7t3D88fuyNFu7cP1LXLo4z7tw/D/IcSEju3D+YlBTrVu7cP+szoiBh7tw/G5J3KGju3D/9LKfvbO7cP1l0pyNw7tw/o5alQXLu3D+1cq6ic+7cP/4iLoV07tw/HuU8FHXu3D8zECRtde7cP9dyeKN17tw/Bb8ZxHXu3D9+XFnXde7cP0WdfuJ17tw/SkDT6HXu3D+BnFnsde7cPz7JRe517tw/eJBM73Xu3D+MzNXvde7cPz3ZG/B17tw/icQ+8HXu3D/RwE/wde7cP+fOV/B17tw/d4db8HXu3D+tM13wde7cP9TuXfB17tw/Rz5e8HXu3D//Xl7wde7cPw9sXvB17tw/HHFe8HXu3D//cl7wde7cP61zXvB17tw/6XNe8HXu3D/9c17wde7cPwZ0XvB17tw/B3Re8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPwh0XvB17tw/CHRe8HXu3D8IdF7wde7cPw==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1147"},"selection_policy":{"id":"1146"}},"id":"1003","type":"ColumnDataSource"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1089","type":"Line"},{"attributes":{},"id":"1009","type":"LinearScale"},{"attributes":{"children":[{"id":"1112"},{"id":"1095"},{"id":"1099"},{"id":"1101"},{"id":"1105"},{"id":"1103"},{"id":"1107"},{"id":"1109"},{"id":"1111"},{"id":"1097"}],"sizing_mode":"stretch_width"},"id":"1118","type":"Column"},{"attributes":{"axis":{"id":"1017"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1020","type":"Grid"},{"attributes":{"line_alpha":0.2,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1038","type":"Line"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1125"},"group":null,"major_label_policy":{"id":"1126"},"major_label_text_font_size":"12pt","ticker":{"id":"1018"}},"id":"1017","type":"LinearAxis"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1036"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1038"},"nonselection_glyph":{"id":"1037"},"view":{"id":"1040"}},"id":"1039","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1043","type":"Line"},{"attributes":{},"id":"1022","type":"WheelZoomTool"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [m2/h]&#x27;"},"id":"1102","type":"FuncTickFormatter"},{"attributes":{"axis":{"id":"1013"},"coordinates":null,"group":null,"ticker":null},"id":"1016","type":"Grid"},{"attributes":{},"id":"1166","type":"BasicTickFormatter"},{"attributes":{},"id":"1014","type":"BasicTicker"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1037","type":"Line"},{"attributes":{},"id":"1011","type":"LinearScale"},{"attributes":{},"id":"1167","type":"AllLabels"},{"attributes":{"args":{"source":{"id":"1002"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1115","type":"CustomJS"},{"attributes":{"axis_label":"x [m]","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1128"},"group":null,"major_label_policy":{"id":"1129"},"major_label_text_font_size":"12pt","ticker":{"id":"1014"}},"id":"1013","type":"LinearAxis"},{"attributes":{},"id":"1169","type":"BasicTickFormatter"},{"attributes":{},"id":"1005","type":"DataRange1d"},{"attributes":{"coordinates":null,"data_source":{"id":"1003"},"glyph":{"id":"1087"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1089"},"nonselection_glyph":{"id":"1088"},"view":{"id":"1091"}},"id":"1090","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1042","type":"Line"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1100","type":"FuncTickFormatter"},{"attributes":{"below":[{"id":"1013"}],"center":[{"id":"1016"},{"id":"1020"},{"id":"1053"}],"left":[{"id":"1017"}],"min_height":400,"renderers":[{"id":"1039"},{"id":"1045"},{"id":"1051"}],"sizing_mode":"stretch_both","title":{"id":"1122"},"toolbar":{"id":"1028"},"x_range":{"id":"1005"},"x_scale":{"id":"1009"},"y_range":{"id":"1054"},"y_scale":{"id":"1011"}},"id":"1004","subtype":"Figure","type":"Plot"},{"attributes":{"end":1.05},"id":"1092","type":"Range1d"},{"attributes":{},"id":"1060","type":"LinearScale"},{"attributes":{},"id":"1170","type":"AllLabels"},{"attributes":{"end":43200,"format":{"id":"1096"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":30,"step":30,"title":"Duration of Injection","value":18000,"visible":false},"id":"1097","type":"Slider"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x"},"y":{"field":"y"}},"id":"1036","type":"Line"},{"attributes":{"code":"return (tick/60).toFixed(1)+&#x27; [min]&#x27;"},"id":"1096","type":"FuncTickFormatter"},{"attributes":{"end":1.9459101490553132,"format":{"id":"1094"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":-6.907755278982137,"step":0.008853665428037451,"title":"Pore Volume (1PV = 78.54 h)","value":-0.6931471805599453},"id":"1095","type":"Slider"},{"attributes":{"source":{"id":"1003"}},"id":"1091","type":"CDSView"},{"attributes":{"end":0.5,"format":{"id":"1098"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"Column length","value":0.2},"id":"1099","type":"Slider"},{"attributes":{"code":"return tick.toFixed(3)+&#x27; [m]&#x27;"},"id":"1098","type":"FuncTickFormatter"},{"attributes":{"tools":[{"id":"1072"},{"id":"1073"},{"id":"1074"},{"id":"1075"},{"id":"1076"},{"id":"1077"}]},"id":"1079","type":"Toolbar"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1027","type":"BoxAnnotation"},{"attributes":{"end":1,"format":{"id":"1108"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.01,"title":"Porosity","value":0.5},"id":"1109","type":"Slider"},{"attributes":{"end":0.2,"format":{"id":"1110"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.01,"step":0.001,"title":"BTC Location","value":0.1},"id":"1111","type":"Slider"},{"attributes":{"tools":[{"id":"1021"},{"id":"1022"},{"id":"1023"},{"id":"1024"},{"id":"1025"},{"id":"1026"}]},"id":"1028","type":"Toolbar"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1042"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1044"},"nonselection_glyph":{"id":"1043"},"view":{"id":"1046"}},"id":"1045","type":"GlyphRenderer"},{"attributes":{"line_alpha":0.1,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1049","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1052","type":"CDSView"},{"attributes":{"line_alpha":0.6,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1048","type":"Line"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymax"}},"id":"1050","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1088","type":"Line"},{"attributes":{"source":{"id":"1002"}},"id":"1040","type":"CDSView"},{"attributes":{"coordinates":null,"data_source":{"id":"1002"},"glyph":{"id":"1048"},"group":null,"hover_glyph":null,"muted_glyph":{"id":"1050"},"nonselection_glyph":{"id":"1049"},"view":{"id":"1052"}},"id":"1051","type":"GlyphRenderer"},{"attributes":{"axis_label":"Pore Volume","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1169"},"group":null,"major_label_policy":{"id":"1170"},"major_label_text_font_size":"12pt","ticker":{"id":"1065"}},"id":"1064","type":"LinearAxis"},{"attributes":{"line_alpha":0.6,"line_color":"red","line_width":3,"x":{"field":"x2"},"y":{"field":"y2"}},"id":"1087","type":"Line"},{"attributes":{"args":{"source":{"id":"1003"}},"code":"function table_to_csv(source) {\\n    const columns = Object.keys(source.data)\\n    const nrows = source.get_length()\\n    const lines = [columns.join(&#x27;,&#x27;)]\\n\\n    for (let i = 0; i &lt; nrows; i++) {\\n        let row = [];\\n        for (let j = 0; j &lt; columns.length; j++) {\\n            const column = columns[j]\\n            row.push(source.data[column][i].toString())\\n        }\\n        lines.push(row.join(&#x27;,&#x27;))\\n    }\\n    return lines.join(&#x27;\\\\n&#x27;).concat(&#x27;\\\\n&#x27;)\\n}\\n\\n\\nconst filename = &#x27;data_result.csv&#x27;\\nconst filetext = table_to_csv(source)\\nconst blob = new Blob([filetext], { type: &#x27;text/csv;charset=utf-8;&#x27; })\\n\\n//addresses IE\\nif (navigator.msSaveBlob) {\\n    navigator.msSaveBlob(blob, filename)\\n} else {\\n    const link = document.createElement(&#x27;a&#x27;)\\n    link.href = URL.createObjectURL(blob)\\n    link.download = filename\\n    link.target = &#x27;_blank&#x27;\\n    link.style.visibility = &#x27;hidden&#x27;\\n    link.dispatchEvent(new MouseEvent(&#x27;click&#x27;))\\n}"},"id":"1117","type":"CustomJS"},{"attributes":{"coordinates":null,"dimension":"height","group":null,"line_color":"blue","line_dash":[6],"line_width":3,"location":0.1},"id":"1053","type":"Span"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"y":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymax":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[200]},"ymin":{"__ndarray__":"AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D88si42KPbvPz2hz0ackO8/5Cyry/co7z+3eZr+Or/uPwEbogtoU+4/BW0gG4Pl7T8rJJpZknXtPwEgCv2dA+0/vrOdR7CP7D81AcuH1RnsP6musxUcous/GiHLTZQo6z9jb7yIUK3qP6lskRBlMOo/YmQhE+ix6T+5Y9OR8THpP7olxU6bsOg/pN1stwAu6D/JHdHMPqrnP2zvdgl0Jec/R8oqRcCf5j+Gbs2WRBnmPyamUTQjkuU/BZgbUX8K5T95l/X6fILkP3ks0fVA+uM/IW2NlvBx4z8Yov2cseniPxCQbA2qYeI/Mp7ZCQDa4T83aS2r2VLhP10lo9pczOA/IX+jK69G4D9A7Jhs64PfP6D0v+WpfN4/i1SArrp33T+GPdapKm7cPxG3iACvZ9s/LZcUfZJk2j9NUzfpHGXZP7gw5c2Sadg/OXK2ODVy1z/e+BOHQX/WP94ZXzfxkNU/mW5DwHmn1D90QlRuDMPTPywcCkjW49I/Sdwn+P8J0j/WI4K+rTXRP6NSF2f/ZtA/erIVVio4zz8lyynC16XNPz7gPY8YIMw/DKd4kQynyj/XVlOvyTrJP/frTCNc28c/ZO2syMaIxj8ADmZyA0PFP72XHUsDCsQ/putTPa/dwj9OgKRi6L3BPyKeEHmIqsA/VRSPusRGvz9RkMERhVC9P/XpAiffcbs//pPYa1WquT8b7wicYPm3P475q8VwXrY/VoOET+7YtD+qkfr7OmizPwMvLeeyC7I/1Hixfq3CsD8rv2vj/BivP8ipxTDt0Kw/Jjrqosmrqj+FgmKqLaioP12l5fmzxKY/L915/ff/pD8v16Y4l1ijP3v5CYsyzaE/hT/cWm9coD92c2pK8QmeP+EVHuj/ips/KTiHdHw5mT+t19Yr6RKXP6ZRZPPZFJU/vQe5e/U8kz/0m7oz9oiRPy341x1W7Y8/SrTgQfAHjT97QEohrl2KP45Qksqu6oc/hcCAYD2rhT/l6ics0ZuDP+M1sXINuYE/JC+cKIL/fz/dSTzzy9l8P7b2jqlA+3k/oFrCdntedz9CEVE8aP50P8qElkZB1nI/MRS2z4zhcD+sfQ+zNDhuP3aie83/A2s/dv7hNS4faD8OAGuR9IJlP4nym+gCKWM/kRwEon4LYT/NRz/6+EleP+gwii714Fo/Fwa+BrXSVz8NJE/4thZVPxCxNm8ppVI/szjFwt92UD+eiSAEjwpNP/AW5z+8lEk/NHYMCk6BRj9JGtYYRMZDP5wkDd6EWkE/iNmqfZhrPj/mGaJeNqE6P8vk5GRQSDc/CvAxeaFUND/CJAzsFrsxPwLegWNt4y4/Lo1SlQ7fKj9AJq6V8lgnP2vHl+WkQiQ/EhkmkzSPIT+GPoWeIGYeP3+xoYTKRxo/FmFa+ACxFj8Gn+m2ZZETP37K0o9u2hA/95frb2z+DD8dywVoougIP7QjwSlNXwU/EDn2hJhQAj8a0cVOmln/PkrFTNIrzPo+oTFle5Xg9j41sX2tgYHzPr1saRk/nPA+TSJwmOZA7D6P1oN2qv/nPuRYfDHeW+Q+t9BfkM0/4T5SYaxWMTHdPpD+Rnm3q9g+etiHjcHS1D6wZc0utI3RPiYUXQyTjs0+/HTAIUnayD6Kw7xu4t7EPj8QtLEfgcE+CQ9hOCxTvT5L480RWoi4PgvWdLRXf7Q+tlmEWKwasT69gJXQUoKsPitOskaluqc+NKpo/bO5oz6TG47FWWCgPh1wsKVCKJs+2IEG6DF9lj41hsZde5mSPggx2ibruY4+vzeBi+xYiT6hX1McKOKEPtoywPIFL4E+m+bi0CE+fD6PASusDS53PuK1YXEXAHM+5kinwusbbz6loNysSW9pPmL/wkfQxGQ+6GJbW+nvYD6KCof36JZbPotw42ElcVY+9gS/00M7Uj5OyCOrhJVNPnWDKord+Ec+jYMPu15mQz7u5Zyo9Fs/PolyMOgiUDk+r56ZKQpoND6dUUBLBm4wPs8Rb58ZbCo+pUtw+gM4JT5j7u5hqwQhPqKPdzlxQxs+NEEn9WfPFT6/czrJ32wRPhrrHkzmzgs+mbezwBApBj7CDZhLEqMBPg==","dtype":"float64","order":"little","shape":[200]}},"selected":{"id":"1131"},"selection_policy":{"id":"1130"}},"id":"1002","type":"ColumnDataSource"},{"attributes":{"end":1.05},"id":"1054","type":"Range1d"},{"attributes":{"args":{"BTClocation":{"id":"1053"},"Lcube1":[[0.6541389106271245],[0.8884712545294602],[0.12572812327439126],[0.008877669710732708],[0.3168286237160204],[0.9207074443496852],[0.754340128337997],[0.0972503660517312],[0.06844607661079918],[0.6144751644037117],[0.8530246543010062],[0.97856379049435],[0.46796532219218606],[0.835568194874168],[0.993238193366368],[0.801162263062714],[0.4390632743273868],[0.26199249369845623],[0.5832317965435144],[0.2814887755535074],[0.3960070648926053],[0.6900048285075528],[0.8656193544237442],[0.9685924226077877],[0.3554856925086535],[0.47103160708870645],[0.9464520898458473],[0.14163803294146882],[0.32287844931102805],[0.173758818220127],[0.08045045587520658],[0.1849832163274624],[0.7256937454997608],[0.5751716493536921],[0.7345424288423348],[0.21437473582093772],[0.028960201873590153],[0.492200101391477],[0.9099247041841675],[0.6449866321735951],[0.5967163069391698],[0.5184848806867761],[0.22337515647435585],[0.07747748273672776],[0.8751814202080388],[0.19474868335727646],[0.4896429014840908],[0.5394582854935904],[0.5679698160193386],[0.33969444626904655],[0.01787753416897278],[0.27321834309247495],[0.621712818674247],[0.42506144746916374],[0.133015705922088],[0.30348514475391575],[0.7197939223272204],[0.6766297135721869],[0.5275615871190672],[0.8479138369889777],[0.05530970549529046],[0.770417436908034],[0.6395373531760833],[0.8122782042835519],[0.11491023177309236],[0.10326225321676175],[0.8248675001632606],[0.6086501385150932],[0.254799578325743],[0.03486885860832912],[0.15833121905628741],[0.559066108907356],[0.37971790468766914],[0.898869849157168],[0.3425986389918673],[0.9811409517764774],[0.5416140220279626],[0.38707737926703545],[0.7883244131185717],[0.9100486885866775],[0.16093172301036585],[0.9569781370264593],[0.4004935357582731],[0.7464897593114976],[0.24855786145280487],[0.9368849235709679],[0.4125293796363942],[0.5017555095950407],[0.45002353275613516],[0.44698009488776724],[0.799760512398702],[0.7096467180972862],[0.2088002096351113],[0.7633166765179752],[0.6678022055038162],[0.36607102635956573],[0.29524908687565027],[0.6825367797538207],[0.04425694769788935],[0.23473038298142954]],"Lcube2":[[0.2647208946175987],[0.4611226767618135],[0.8666644035619453],[0.6723917422229553],[0.8328182944728943],[0.5127577847010837],[0.9491033107723678],[0.7637218154793202],[0.5384189598394538],[0.11066080768444472],[0.2767933620300502],[0.28211527695560645],[0.6058375285968258],[0.12034612031573926],[0.40442411171271964],[0.6856598723329361],[0.6198980468667249],[0.02674676462104474],[0.7075661368782237],[0.24837542394350362],[0.8807937955541664],[0.8506088095409808],[0.3055945438775735],[0.2983744948603518],[0.6363913721899546],[0.3342490939518566],[0.2342615575795516],[0.34021299808729666],[0.3240203391217859],[0.9704557768913646],[0.4352725370871465],[0.38139333059997604],[0.3983538784189541],[0.1024438228110825],[0.15899689993937596],[0.06597090188626777],[0.2105895897365971],[0.6221268590560907],[0.999414471274301],[0.8045313110577242],[0.7158596881453845],[0.05013257021736983],[0.5634744707569681],[0.7771383133245939],[0.7564282961585672],[0.20847891043173253],[0.5033694888086351],[0.049864438020550586],[0.13441910504827762],[0.44644874687360264],[0.1833415282118327],[0.7961307227825113],[0.5560525344845375],[0.16485255338914054],[0.9591947718802994],[0.4537886225294463],[0.4123460724940668],[0.25115830136074085],[0.4981658210529913],[0.6543840615745568],[0.7437824578420353],[0.9315293624550831],[0.7339637149124261],[0.8146822873863916],[0.37259750970962413],[0.8493301896097861],[0.5893299807452255],[0.19721690884540116],[0.6424638546433497],[0.4727781005706587],[0.48197639098270706],[0.367403896338884],[0.2278144866595744],[0.311760679225335],[0.9875178793621078],[0.1438130266368863],[0.8232138359296366],[0.08968109055908524],[0.7887519464118877],[0.1753030191262849],[0.8909271432765139],[0.0359327527068874],[0.005108229337313624],[0.01858354822211348],[0.7221237488428242],[0.4274977246785933],[0.5719474184327372],[0.5408881941094528],[0.3508282268897978],[0.8748400452160634],[0.09512674208614585],[0.9172410691754632],[0.9607708520718655],[0.07226787825868089],[0.5987807463792774],[0.5248984390478774],[0.6679126621186272],[0.9066054001693203],[0.6994299238647816],[0.9266347876221009]],"col_len_sl":{"id":"1099"},"col_rad_sl":{"id":"1101"},"disp_sl":{"id":"1103"},"flow_sl":{"id":"1107"},"pore_vol_sl":{"id":"1095"},"poros_sl":{"id":"1109"},"pulse_inj_sl":{"id":"1097"},"rbgr":{"id":"1112"},"reac_sl":{"id":"1105"},"source1":{"id":"1002"},"source2":{"id":"1003"},"xBTC_sl":{"id":"1111"}},"code":"function getc(x,vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg) {\\n  var c = []\\n  var cmin = []\\n  var cmax = []\\n  var r_mean = (reac_l+reac_h)/2\\n  var D_mean = (disp_l+disp_h)/2\\n  var gam_mean = get_gamma(r_mean,D_mean,vel)\\n  for (let i = 0; i &lt; x.length; i++) { \\n      if (x[i] &lt;= 0) {\\n        c[i] = 1\\n        cmin[i] = 1\\n        cmax[i] = 1\\n      } else {\\n        var intlist = []\\n          for (let j = 0; j &lt; Lcube1.length; j++) {\\n            var r_intermed = reac_l + (reac_h-reac_l)*Lcube1[j]\\n            var D_intermed = disp_l + (disp_h-disp_l)*Lcube2[j]\\n            var gam_intermed = get_gamma(r_intermed,D_intermed,vel)\\n            if (rg == 1) {\\n              // Pulse injection\\n              if (t&lt;t_inj) {\\n                intlist[j] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))\\n              } else {\\n                intlist[j] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_intermed*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_intermed*(t-t_inj)))));\\n              }\\n            } else {\\n              // Cotinuous injection\\n              intlist[j] = 1/2 * Math.exp(x[i]*vel/(2*D_intermed))*(Math.exp((-x[i])*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]-vel*t*gam_intermed)/math.sqrt(4*D_intermed*t)))+math.exp(x[i]*vel*gam_intermed/(2*D_intermed))*(1-math.erf((x[i]+vel*t*gam_intermed)/math.sqrt(4*D_intermed*t))));\\n            }\\n          }\\n        // Main line with mean values of dispersion and reaction\\n        if (rg==1){\\n          // Pulse injection\\n          if (t&lt;t_inj) {\\n            c[i] = 1/2 * (1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))\\n          } else {\\n            c[i] = 1/2 * ((1-math.erf((x[i]-vel*t) / math.sqrt(4*D_mean*t)))-(1-math.erf((x[i]-vel*(t-t_inj))/math.sqrt(4*D_mean*(t-t_inj)))));\\n          }\\n        } else {\\n          // Continuous injection\\n          c[i] = 1/2 * Math.exp(x[i]*vel/(2*D_mean))*(Math.exp((-x[i])*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]-vel*t*gam_mean)/math.sqrt(4*D_mean*t)))+math.exp(x[i]*vel*gam_mean/(2*D_mean))*(1-math.erf((x[i]+vel*t*gam_mean)/math.sqrt(4*D_mean*t))));\\n        }\\n        cmin[i] = math.min(intlist)\\n        cmax[i] = math.max(intlist)\\n    }\\n  }\\n  return [c, cmin, cmax]\\n}\\n\\n// console.log() is accessable through F12\\n\\n\\nfunction getc_BTC(xBTC,vel,tsp,gam,t_inj,D) {\\n  const c = []\\n  for (let i = 0; i &lt; tsp.length; i++) {\\n      if (rg==1){\\n        // Pulse injection |this produces negative values in the begining\\n        if (tsp[i]&lt;t_inj) {\\n          c[i] = 1/2 * (1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))\\n        } else {\\n          c[i] = 1/2 * ((1-math.erf((xBTC-vel*tsp[i]) / math.sqrt(4*D*tsp[i])))-(1-math.erf((xBTC-vel*(tsp[i]-t_inj))/math.sqrt(4*D*(tsp[i]-t_inj)))));\\n        }\\n      } else {\\n        // Continuous injection\\n        c[i] = 1/2 * Math.exp(xBTC*vel/(2*D))*(Math.exp((-xBTC)*vel*gam/(2*D))*(1-math.erf((xBTC-vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i])))+math.exp(xBTC*vel*gam/(2*D))*(1-math.erf((xBTC+vel*tsp[i]*gam)/math.sqrt(4*D*tsp[i]))));\\n        }\\n  }\\n  return c\\n}\\n\\nfunction get_gamma(reac,Dis,sep_vel) {\\n  var res = []\\n  res = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)\\n  return res\\n}\\n\\nfunction transport_num(c,disp,dx,dt){\\n  // This function approximates advection and dispersion numerically by a FVM\\n\\n  // Move concentration by 1 cell\\n  for (let i = 0; i &lt; c.length-1; i++) {\\n    c[i+1] = c[i]\\n  }\\n  // First cell gets inlet concentration\\n  c[1] = 1\\n  var Jd = []\\n  // Dispersive fluxes between cells\\n  for (let i = 0; i &lt; c.length+1; i++) {\\n    if (i == 0) {\\n      Jd[i] = 0\\n    } else if (i == c.length) {\\n      Jd[i] = Jd[i-1]\\n    } else {\\n      Jd[i] = (c[i-1] - c[i])/dx*disp\\n    }\\n  }\\n\\n  for (let i = 0; i &lt; Jd.length-1; i++) {\\n    c[i] = c[i] + dt/dx * (Jd[i] - Jd[i+1])\\n  }\\n}\\n\\n// Extracting data sources\\nvar x   = source1.data[&#x27;x&#x27;] \\nvar y   = source1.data[&#x27;y&#x27;]\\nvar ymin= source1.data[&#x27;ymin&#x27;]\\nvar ymax= source1.data[&#x27;ymax&#x27;]\\nvar x2  = source2.data[&#x27;x2&#x27;]\\nvar y2  = source2.data[&#x27;y2&#x27;]\\n\\n// Extracting slider values\\nconst col_len   = col_len_sl.value;                 // [m]\\nconst xBTC      = xBTC_sl.value;                    // [m]\\nconst rad       = col_rad_sl.value;                 // [m]\\nconst reac_l    = Math.exp(reac_sl.value[0])/3600;  // [1/s]\\nconst reac_h    = Math.exp(reac_sl.value[1])/3600;  // [1/s]\\nconst disp_l    = Math.exp(disp_sl.value[0])/3600;  // [m2/s]\\nconst disp_h    = Math.exp(disp_sl.value[1])/3600;  // [m2/s]\\nconst Q         = flow_sl.value/1000/1000/3600;     // [m3/s]\\nconst n         = poros_sl.value;                   // [-]\\nconst tPV       = Math.exp(pore_vol_sl.value);      // [-]\\nconst t_inj     = pulse_inj_sl.value                // [s]\\nconst rg        = rbgr.active                       // [false]\\n\\n// Initializing empty lists\\nvar c = []\\nvar cmin = []\\nvar cmax = []\\nvar cBTX = []\\nvar tsp = []\\n\\nconst c0      = 1;                            // [-]\\nconst reac    = (reac_l + reac_h)/2           // [1/s]\\nconst Dis     = (disp_l + disp_h)/2           // [m2/s]\\nconst A       = math.PI * rad**2;             // [m2]\\nconst vel     = Q/A;                          // [m/s]\\nconst sep_vel = vel * n                       // [m/s]   \\nconst PS      = col_len * A * n               // [m3]\\nconst PV      = PS / (A*vel)                  // [s] VEL oder SEP_VEL?\\nconst t       = tPV * PV                      // [s]\\n\\nconst gam     = Math.sqrt(1 + 4 * reac * Dis / sep_vel**2)  \\n\\nfor (let j = 0; j &lt; x.length; j++) {\\n  x[j] = -0.02*col_len + 1.02*col_len/x.length * j;\\n}\\nfor (let j = 0; j &lt; x2.length; j++) {\\n  tsp[j] = x2[j] * PV;\\n}\\n\\n// This if statement has no meaning besides preventing a Type Error &lt;-- why is that? It doesnt work without it\\nif (1&lt;2){ \\n  [c, cmin, cmax] = getc(x,sep_vel,t,Lcube1,Lcube2,reac_l,reac_h,disp_l,disp_h,t_inj,rg)\\n  cBTX = getc_BTC(xBTC,sep_vel,tsp,gam,t_inj,Dis) \\n}\\n\\n    \\n// We have to loop through all indicies\\nfor (let i = 0; i &lt; c.length; i++) {\\n  y[i] = c[i]\\n  ymin[i] = cmin[i]\\n  ymax[i] = cmax[i]\\n}\\n\\nfor (let i = 0; i &lt; x.length; i++) {\\n  y2[i] = cBTX[i]\\n}\\n\\n\\n// Update Sliders\\npore_vol_sl.title = &#x27;Pore Volume (1PV =&#x27; + (PV/3600).toFixed(2) +&#x27;h)&#x27;;\\nxBTC_sl.end       = col_len_sl.value;\\nBTClocation.location = xBTC\\n\\nif (rg==0) {\\n  pulse_inj_sl.visible = false\\n} else {\\n  pulse_inj_sl.visible = true\\n}\\n\\nconsole.log(y)\\nconsole.log(y2)\\n\\nsource1.change.emit();\\nsource2.change.emit();"},"id":"1113","type":"CustomJS"},{"attributes":{"below":[{"id":"1064"}],"center":[{"id":"1067"},{"id":"1071"}],"left":[{"id":"1068"}],"min_height":400,"renderers":[{"id":"1090"}],"sizing_mode":"stretch_both","title":{"id":"1163"},"toolbar":{"id":"1079"},"x_range":{"id":"1093"},"x_scale":{"id":"1060"},"y_range":{"id":"1092"},"y_scale":{"id":"1062"}},"id":"1055","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1125","type":"BasicTickFormatter"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1117"}]},"label":"Save (Lower Plot)","sizing_mode":"stretch_width"},"id":"1116","type":"Button"},{"attributes":{},"id":"1126","type":"AllLabels"},{"attributes":{"active":0,"js_property_callbacks":{"change:active":[{"id":"1113"}]},"labels":["Continuous Injection","Pulse Injection"],"sizing_mode":"stretch_width"},"id":"1112","type":"RadioButtonGroup"},{"attributes":{"code":"return (Math.exp(tick)).toFixed(4)+&#x27; [PV]&#x27;"},"id":"1094","type":"FuncTickFormatter"},{"attributes":{},"id":"1062","type":"LinearScale"},{"attributes":{},"id":"1128","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"1114"},{"id":"1116"}],"sizing_mode":"stretch_width"},"id":"1119","type":"Column"},{"attributes":{},"id":"1146","type":"UnionRenderers"},{"attributes":{},"id":"1065","type":"BasicTicker"},{"attributes":{"axis":{"id":"1064"},"coordinates":null,"group":null,"ticker":null},"id":"1067","type":"Grid"},{"attributes":{},"id":"1129","type":"AllLabels"},{"attributes":{},"id":"1073","type":"WheelZoomTool"},{"attributes":{},"id":"1147","type":"Selection"},{"attributes":{"axis_label":"c(t)/c0","axis_label_text_font_size":"17pt","coordinates":null,"formatter":{"id":"1166"},"group":null,"major_label_policy":{"id":"1167"},"major_label_text_font_size":"12pt","ticker":{"id":"1069"}},"id":"1068","type":"LinearAxis"},{"attributes":{"axis":{"id":"1068"},"coordinates":null,"dimension":1,"group":null,"ticker":null},"id":"1071","type":"Grid"},{"attributes":{},"id":"1069","type":"BasicTicker"},{"attributes":{"coordinates":null,"group":null},"id":"1122","type":"Title"},{"attributes":{},"id":"1077","type":"HelpTool"},{"attributes":{},"id":"1072","type":"PanTool"},{"attributes":{"overlay":{"id":"1078"}},"id":"1074","type":"BoxZoomTool"},{"attributes":{"code":"return Math.exp(tick).toExponential(1).toString()+&#x27; [1/h]&#x27;"},"id":"1104","type":"FuncTickFormatter"},{"attributes":{"line_alpha":0.2,"line_dash":[6],"line_width":3,"x":{"field":"x"},"y":{"field":"ymin"}},"id":"1044","type":"Line"},{"attributes":{"end":7},"id":"1093","type":"Range1d"},{"attributes":{"coordinates":null,"group":null},"id":"1163","type":"Title"},{"attributes":{},"id":"1130","type":"UnionRenderers"},{"attributes":{"bottom_units":"screen","coordinates":null,"fill_alpha":0.5,"fill_color":"lightgrey","group":null,"left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"1078","type":"BoxAnnotation"},{"attributes":{},"id":"1131","type":"Selection"},{"attributes":{"end":0.2,"format":{"id":"1100"},"js_property_callbacks":{"change:value":[{"id":"1113"}]},"sizing_mode":"stretch_width","start":0.005,"step":0.0001,"title":"Column radius","value":0.05},"id":"1101","type":"Slider"},{"attributes":{"button_type":"success","icon":null,"js_event_callbacks":{"button_click":[{"id":"1115"}]},"label":"Save (Upper Plot)","sizing_mode":"stretch_width"},"id":"1114","type":"Button"},{"attributes":{},"id":"1075","type":"SaveTool"},{"attributes":{},"id":"1076","type":"ResetTool"}],"root_ids":["1004","1118","1055","1119"]},"title":"Bokeh Application","version":"2.4.2"}}';
                const render_items = [{"docid":"d2c79187-b757-4a00-aa03-ce638562ffa3","root_ids":["1004","1118","1055","1119"],"roots":{"1004":"813838dc-42df-4082-bc4e-daf337008bc8","1055":"c72b57f9-cf0e-4b47-8162-fcd7306edf97","1118":"cb646fb3-05a2-41cc-8068-50c03488139f","1119":"91b961f5-0b1b-4aa9-9550-d24f5f70bb1c"}}];
                root.Bokeh.embed.embed_items(docs_json, render_items);
              
                }
                if (root.Bokeh !== undefined) {
                  embed_document(root);
                } else {
                  let attempts = 0;
                  const timer = setInterval(function(root) {
                    if (root.Bokeh !== undefined) {
                      clearInterval(timer);
                      embed_document(root);
                    } else {
                      attempts++;
                      if (attempts > 100) {
                        clearInterval(timer);
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                      }
                    }
                  }, 10, root)
                }
              })(window);
            });
          };
          if (document.readyState != "loading") fn();
          else document.addEventListener("DOMContentLoaded", fn);
        })();